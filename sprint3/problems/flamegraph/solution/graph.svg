<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1301" width="163.7" height="15.0" fill="rgb(218,48,49)" rx="2" ry="2" />
<text  x="543.19" y="1311.5" >boost::asio::detail::..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1813" width="11.2" height="15.0" fill="rgb(229,110,5)" rx="2" ry="2" />
<text  x="1175.49" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::io_context::run (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1893" width="635.7" height="15.0" fill="rgb(244,208,13)" rx="2" ry="2" />
<text  x="170.50" y="1903.5" >boost::asio::io_context::run</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1653" width="12.0" height="15.0" fill="rgb(207,65,1)" rx="2" ry="2" />
<text  x="1163.49" y="1663.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,838 samples, 0.01%)</title><rect x="803.0" y="1637" width="0.2" height="15.0" fill="rgb(232,120,40)" rx="2" ry="2" />
<text  x="806.01" y="1647.5" ></text>
</g>
<g >
<title>boost::beast::http::async_read_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1141" width="13.7" height="15.0" fill="rgb(220,142,27)" rx="2" ry="2" />
<text  x="427.11" y="1151.5" ></text>
</g>
<g >
<title>std::forward&lt;boost::asio::const_buffer const*&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1061" width="5.4" height="15.0" fill="rgb(220,53,18)" rx="2" ry="2" />
<text  x="724.29" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1781" width="50.4" height="15.0" fill="rgb(241,6,11)" rx="2" ry="2" />
<text  x="197.29" y="1791.5" >boost..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1541" width="20.6" height="15.0" fill="rgb(232,19,42)" rx="2" ry="2" />
<text  x="440.79" y="1551.5" ></text>
</g>
<g >
<title>__vm_munmap (199,763 samples, 0.52%)</title><rect x="23.9" y="1957" width="6.2" height="15.0" fill="rgb(244,225,20)" rx="2" ry="2" />
<text  x="26.92" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="933" width="6.9" height="15.0" fill="rgb(241,23,30)" rx="2" ry="2" />
<text  x="839.05" y="943.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1477" width="20.6" height="15.0" fill="rgb(219,125,31)" rx="2" ry="2" />
<text  x="440.79" y="1487.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1109" width="24.7" height="15.0" fill="rgb(211,107,28)" rx="2" ry="2" />
<text  x="222.95" y="1119.5" >h..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1429" width="44.3" height="15.0" fill="rgb(242,15,42)" rx="2" ry="2" />
<text  x="203.41" y="1439.5" >boos..</text>
</g>
<g >
<title>accept (606,296 samples, 1.58%)</title><rect x="171.6" y="1733" width="18.6" height="15.0" fill="rgb(219,35,40)" rx="2" ry="2" />
<text  x="174.57" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="517" width="6.9" height="15.0" fill="rgb(227,18,36)" rx="2" ry="2" />
<text  x="839.05" y="527.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="853" width="11.2" height="15.0" fill="rgb(251,198,29)" rx="2" ry="2" />
<text  x="1175.49" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_timerfd_create (198,769 samples, 0.52%)</title><rect x="809.3" y="1781" width="6.1" height="15.0" fill="rgb(205,198,9)" rx="2" ry="2" />
<text  x="812.29" y="1791.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1365" width="163.7" height="15.0" fill="rgb(252,27,17)" rx="2" ry="2" />
<text  x="543.19" y="1375.5" >boost_asio_handler_in..</text>
</g>
<g >
<title>boost::beast::http::async_write_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="965" width="17.4" height="15.0" fill="rgb(210,103,42)" rx="2" ry="2" />
<text  x="998.94" y="975.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;http_server::Session&lt;main::{lambda (731,150 samples, 1.90%)</title><rect x="888.1" y="1301" width="22.5" height="15.0" fill="rgb(230,177,1)" rx="2" ry="2" />
<text  x="891.14" y="1311.5" >s..</text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::put&lt;boost::asio::mutable_buffer&gt; (1,926,657 samples, 5.02%)</title><rect x="350.1" y="1189" width="59.2" height="15.0" fill="rgb(208,84,0)" rx="2" ry="2" />
<text  x="353.06" y="1199.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::system::error_code&gt;::binder1 (239,731 samples, 0.62%)</title><rect x="880.8" y="1765" width="7.3" height="15.0" fill="rgb(252,179,33)" rx="2" ry="2" />
<text  x="883.77" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1781" width="40.5" height="15.0" fill="rgb(210,120,20)" rx="2" ry="2" />
<text  x="420.90" y="1791.5" >boo..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="581" width="6.9" height="15.0" fill="rgb(218,14,30)" rx="2" ry="2" />
<text  x="1027.92" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1621" width="12.0" height="15.0" fill="rgb(206,85,10)" rx="2" ry="2" />
<text  x="1163.49" y="1631.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1669" width="20.6" height="15.0" fill="rgb(251,126,35)" rx="2" ry="2" />
<text  x="440.79" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::stable_async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1381" width="22.5" height="15.0" fill="rgb(215,85,47)" rx="2" ry="2" />
<text  x="520.66" y="1391.5" >b..</text>
</g>
<g >
<title>perf_iterate_ctx (102,347 samples, 0.27%)</title><rect x="91.6" y="1829" width="3.2" height="15.0" fill="rgb(207,185,34)" rx="2" ry="2" />
<text  x="94.62" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1077" width="17.4" height="15.0" fill="rgb(228,17,18)" rx="2" ry="2" />
<text  x="998.94" y="1087.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,929,558 samples, 5.03%)</title><rect x="97.6" y="1941" width="59.3" height="15.0" fill="rgb(210,115,24)" rx="2" ry="2" />
<text  x="100.60" y="1951.5" >futex_..</text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1509" width="11.9" height="15.0" fill="rgb(212,129,2)" rx="2" ry="2" />
<text  x="915.93" y="1519.5" ></text>
</g>
<g >
<title>ip_output (377,915 samples, 0.98%)</title><rect x="1013.3" y="389" width="11.6" height="15.0" fill="rgb(232,94,33)" rx="2" ry="2" />
<text  x="1016.30" y="399.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (606,765 samples, 1.58%)</title><rect x="1056.4" y="1973" width="18.6" height="15.0" fill="rgb(207,92,8)" rx="2" ry="2" />
<text  x="1059.37" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1797" width="22.5" height="15.0" fill="rgb(215,31,50)" rx="2" ry="2" />
<text  x="891.14" y="1807.5" >b..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1061" width="68.8" height="15.0" fill="rgb(232,68,2)" rx="2" ry="2" />
<text  x="543.19" y="1071.5" >std::__..</text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1029" width="8.4" height="15.0" fill="rgb(208,136,2)" rx="2" ry="2" />
<text  x="446.93" y="1039.5" ></text>
</g>
<g >
<title>setup_arg_pages (21,932 samples, 0.06%)</title><rect x="94.8" y="1941" width="0.6" height="15.0" fill="rgb(225,214,42)" rx="2" ry="2" />
<text  x="97.77" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_write_some&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="693" width="17.4" height="15.0" fill="rgb(233,122,35)" rx="2" ry="2" />
<text  x="998.94" y="703.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1557" width="12.0" height="15.0" fill="rgb(233,34,19)" rx="2" ry="2" />
<text  x="1163.49" y="1567.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1349" width="12.0" height="15.0" fill="rgb(244,88,15)" rx="2" ry="2" />
<text  x="1163.49" y="1359.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (390,290 samples, 1.02%)</title><rect x="1160.5" y="69" width="12.0" height="15.0" fill="rgb(244,78,3)" rx="2" ry="2" />
<text  x="1163.49" y="79.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1381" width="17.4" height="15.0" fill="rgb(206,128,27)" rx="2" ry="2" />
<text  x="998.94" y="1391.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1621" width="5.4" height="15.0" fill="rgb(231,190,32)" rx="2" ry="2" />
<text  x="724.29" y="1631.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_object&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1797" width="6.1" height="15.0" fill="rgb(224,72,24)" rx="2" ry="2" />
<text  x="818.40" y="1807.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;7ul&gt;::call&lt;0ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1109" width="5.4" height="15.0" fill="rgb(243,177,31)" rx="2" ry="2" />
<text  x="724.29" y="1119.5" ></text>
</g>
<g >
<title>process_backlog (377,915 samples, 0.98%)</title><rect x="1013.3" y="245" width="11.6" height="15.0" fill="rgb(234,147,39)" rx="2" ry="2" />
<text  x="1016.30" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1269" width="17.4" height="15.0" fill="rgb(246,154,0)" rx="2" ry="2" />
<text  x="998.94" y="1279.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1413" width="5.4" height="15.0" fill="rgb(223,43,28)" rx="2" ry="2" />
<text  x="724.29" y="1423.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::~strand (83,662 samples, 0.22%)</title><rect x="924.8" y="1813" width="2.6" height="15.0" fill="rgb(252,45,9)" rx="2" ry="2" />
<text  x="927.81" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1701" width="12.3" height="15.0" fill="rgb(225,153,23)" rx="2" ry="2" />
<text  x="871.52" y="1711.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (75,343 samples, 0.20%)</title><rect x="910.6" y="1781" width="2.3" height="15.0" fill="rgb(236,1,49)" rx="2" ry="2" />
<text  x="913.61" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="981" width="11.2" height="15.0" fill="rgb(220,195,10)" rx="2" ry="2" />
<text  x="1175.49" y="991.5" ></text>
</g>
<g >
<title>_int_free (365,300 samples, 0.95%)</title><rect x="73.3" y="2037" width="11.3" height="15.0" fill="rgb(249,167,37)" rx="2" ry="2" />
<text  x="76.35" y="2047.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::basic_parsed_list&lt;boost::beast::http::detail::opt_token_list_policy&gt;::const_iterator::increment (645,076 samples, 1.68%)</title><rect x="350.1" y="1077" width="19.8" height="15.0" fill="rgb(226,72,34)" rx="2" ry="2" />
<text  x="353.06" y="1087.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (377,915 samples, 0.98%)</title><rect x="1013.3" y="277" width="11.6" height="15.0" fill="rgb(223,55,4)" rx="2" ry="2" />
<text  x="1016.30" y="287.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_op::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1013" width="17.4" height="15.0" fill="rgb(213,185,8)" rx="2" ry="2" />
<text  x="998.94" y="1023.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="741" width="6.9" height="15.0" fill="rgb(225,174,43)" rx="2" ry="2" />
<text  x="839.05" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (564,935 samples, 1.47%)</title><rect x="995.9" y="69" width="17.4" height="15.0" fill="rgb(218,103,8)" rx="2" ry="2" />
<text  x="998.94" y="79.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1861" width="11.9" height="15.0" fill="rgb(211,95,21)" rx="2" ry="2" />
<text  x="915.93" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (267,070 samples, 0.70%)</title><rect x="236.5" y="1045" width="8.2" height="15.0" fill="rgb(231,215,42)" rx="2" ry="2" />
<text  x="239.52" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (13,264 samples, 0.03%)</title><rect x="827.6" y="1957" width="0.4" height="15.0" fill="rgb(235,88,43)" rx="2" ry="2" />
<text  x="830.60" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (398,295 samples, 1.04%)</title><rect x="207.7" y="933" width="12.3" height="15.0" fill="rgb(209,223,46)" rx="2" ry="2" />
<text  x="210.71" y="943.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (245,495 samples, 0.64%)</title><rect x="623.2" y="1141" width="7.6" height="15.0" fill="rgb(239,141,36)" rx="2" ry="2" />
<text  x="626.24" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1173" width="11.6" height="15.0" fill="rgb(211,124,33)" rx="2" ry="2" />
<text  x="1016.30" y="1183.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::skip_ows&lt;char const*&gt; (645,076 samples, 1.68%)</title><rect x="350.1" y="1045" width="19.8" height="15.0" fill="rgb(223,122,22)" rx="2" ry="2" />
<text  x="353.06" y="1055.5" ></text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::const_iterator::operator++ (322,937 samples, 0.84%)</title><rect x="568.4" y="549" width="9.9" height="15.0" fill="rgb(244,80,31)" rx="2" ry="2" />
<text  x="571.41" y="559.5" ></text>
</g>
<g >
<title>drop_futex_key_refs.isra.0 (57,179 samples, 0.15%)</title><rect x="168.7" y="1685" width="1.7" height="15.0" fill="rgb(253,49,14)" rx="2" ry="2" />
<text  x="171.67" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="709" width="58.9" height="15.0" fill="rgb(234,176,40)" rx="2" ry="2" />
<text  x="543.19" y="719.5" >boost:..</text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1477" width="17.4" height="15.0" fill="rgb(218,68,51)" rx="2" ry="2" />
<text  x="998.94" y="1487.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1173" width="17.4" height="15.0" fill="rgb(235,215,9)" rx="2" ry="2" />
<text  x="998.94" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.0 (564,935 samples, 1.47%)</title><rect x="995.9" y="37" width="17.4" height="15.0" fill="rgb(233,48,39)" rx="2" ry="2" />
<text  x="998.94" y="47.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1797" width="12.0" height="15.0" fill="rgb(226,120,14)" rx="2" ry="2" />
<text  x="1163.49" y="1807.5" ></text>
</g>
<g >
<title>ep_remove (252,217 samples, 0.66%)</title><rect x="532.4" y="1013" width="7.8" height="15.0" fill="rgb(207,22,28)" rx="2" ry="2" />
<text  x="535.44" y="1023.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (220,757 samples, 0.58%)</title><rect x="97.6" y="1877" width="6.8" height="15.0" fill="rgb(211,93,47)" rx="2" ry="2" />
<text  x="100.60" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor, void&gt;::~handler_work (19,781 samples, 0.05%)</title><rect x="759.0" y="1781" width="0.6" height="15.0" fill="rgb(219,184,8)" rx="2" ry="2" />
<text  x="761.97" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1461" width="5.4" height="15.0" fill="rgb(242,214,46)" rx="2" ry="2" />
<text  x="724.29" y="1471.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::insert (199,368 samples, 0.52%)</title><rect x="868.5" y="1237" width="6.1" height="15.0" fill="rgb(206,47,22)" rx="2" ry="2" />
<text  x="871.52" y="1247.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1461" width="11.6" height="15.0" fill="rgb(242,183,46)" rx="2" ry="2" />
<text  x="1016.30" y="1471.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnRead (390,290 samples, 1.02%)</title><rect x="1160.5" y="1157" width="12.0" height="15.0" fill="rgb(218,125,4)" rx="2" ry="2" />
<text  x="1163.49" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (364,717 samples, 0.95%)</title><rect x="1172.5" y="1861" width="11.2" height="15.0" fill="rgb(249,207,1)" rx="2" ry="2" />
<text  x="1175.49" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::basic_executor_type (75,343 samples, 0.20%)</title><rect x="910.6" y="1717" width="2.3" height="15.0" fill="rgb(242,148,40)" rx="2" ry="2" />
<text  x="913.61" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1973" width="6.2" height="15.0" fill="rgb(248,227,17)" rx="2" ry="2" />
<text  x="45.34" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1285" width="12.0" height="15.0" fill="rgb(206,121,25)" rx="2" ry="2" />
<text  x="1163.49" y="1295.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1413" width="13.7" height="15.0" fill="rgb(254,57,1)" rx="2" ry="2" />
<text  x="427.11" y="1423.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="1013" width="12.3" height="15.0" fill="rgb(233,40,3)" rx="2" ry="2" />
<text  x="210.71" y="1023.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="965" width="12.0" height="15.0" fill="rgb(214,171,28)" rx="2" ry="2" />
<text  x="1163.49" y="975.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::close (731,150 samples, 1.90%)</title><rect x="888.1" y="1205" width="22.5" height="15.0" fill="rgb(208,118,9)" rx="2" ry="2" />
<text  x="891.14" y="1215.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (199,055 samples, 0.52%)</title><rect x="458.4" y="1797" width="6.1" height="15.0" fill="rgb(253,189,35)" rx="2" ry="2" />
<text  x="461.42" y="1807.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1573" width="20.6" height="15.0" fill="rgb(244,106,3)" rx="2" ry="2" />
<text  x="440.79" y="1583.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="645" width="12.0" height="15.0" fill="rgb(247,177,24)" rx="2" ry="2" />
<text  x="1163.49" y="655.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (21,389 samples, 0.06%)</title><rect x="103.7" y="1845" width="0.7" height="15.0" fill="rgb(214,188,3)" rx="2" ry="2" />
<text  x="106.73" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1493" width="126.5" height="15.0" fill="rgb(244,130,4)" rx="2" ry="2" />
<text  x="285.81" y="1503.5" >boost::asio::as..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1605" width="12.0" height="15.0" fill="rgb(241,20,39)" rx="2" ry="2" />
<text  x="1163.49" y="1615.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (2,701,516 samples, 7.04%)</title><rect x="540.2" y="1157" width="83.0" height="15.0" fill="rgb(252,74,26)" rx="2" ry="2" />
<text  x="543.19" y="1167.5" >boost::be..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1909" width="6.9" height="15.0" fill="rgb(207,116,10)" rx="2" ry="2" />
<text  x="1027.92" y="1919.5" ></text>
</g>
<g >
<title>__split_vma (160,702 samples, 0.42%)</title><rect x="963.0" y="1941" width="4.9" height="15.0" fill="rgb(215,16,0)" rx="2" ry="2" />
<text  x="965.98" y="1951.5" ></text>
</g>
<g >
<title>boost::detail::weak_count::weak_count (239,731 samples, 0.62%)</title><rect x="880.8" y="1733" width="7.3" height="15.0" fill="rgb(205,151,22)" rx="2" ry="2" />
<text  x="883.77" y="1743.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (390,290 samples, 1.02%)</title><rect x="1160.5" y="213" width="12.0" height="15.0" fill="rgb(227,175,52)" rx="2" ry="2" />
<text  x="1163.49" y="223.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op (377,915 samples, 0.98%)</title><rect x="1013.3" y="741" width="11.6" height="15.0" fill="rgb(232,89,13)" rx="2" ry="2" />
<text  x="1016.30" y="751.5" ></text>
</g>
<g >
<title>boost::beast::detail::buffer_bytes_impl::operator (220,784 samples, 0.58%)</title><rect x="918.0" y="1381" width="6.8" height="15.0" fill="rgb(210,149,34)" rx="2" ry="2" />
<text  x="921.02" y="1391.5" ></text>
</g>
<g >
<title>search_binary_handler (124,279 samples, 0.32%)</title><rect x="91.6" y="1973" width="3.8" height="15.0" fill="rgb(254,214,49)" rx="2" ry="2" />
<text  x="94.62" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="1061" width="12.3" height="15.0" fill="rgb(240,6,24)" rx="2" ry="2" />
<text  x="210.71" y="1071.5" ></text>
</g>
<g >
<title>vm_mmap (102,347 samples, 0.27%)</title><rect x="91.6" y="1925" width="3.2" height="15.0" fill="rgb(206,32,7)" rx="2" ry="2" />
<text  x="94.62" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="981" width="6.9" height="15.0" fill="rgb(238,23,5)" rx="2" ry="2" />
<text  x="839.05" y="991.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1029" width="11.2" height="15.0" fill="rgb(226,79,26)" rx="2" ry="2" />
<text  x="1175.49" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1653" width="200.8" height="15.0" fill="rgb(243,224,5)" rx="2" ry="2" />
<text  x="509.58" y="1663.5" >boost::asio::io_context::b..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1525" width="17.4" height="15.0" fill="rgb(220,162,23)" rx="2" ry="2" />
<text  x="998.94" y="1535.5" ></text>
</g>
<g >
<title>tcp_push (390,290 samples, 1.02%)</title><rect x="1160.5" y="261" width="12.0" height="15.0" fill="rgb(236,76,50)" rx="2" ry="2" />
<text  x="1163.49" y="271.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one (364,717 samples, 0.95%)</title><rect x="1172.5" y="1957" width="11.2" height="15.0" fill="rgb(252,167,30)" rx="2" ry="2" />
<text  x="1175.49" y="1967.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1749" width="131.3" height="15.0" fill="rgb(226,189,7)" rx="2" ry="2" />
<text  x="281.00" y="1759.5" >boost_asio_execu..</text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1541" width="50.4" height="15.0" fill="rgb(248,139,39)" rx="2" ry="2" />
<text  x="197.29" y="1551.5" >boost..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1781" width="12.3" height="15.0" fill="rgb(205,66,15)" rx="2" ry="2" />
<text  x="871.52" y="1791.5" ></text>
</g>
<g >
<title>futex_wait (1,961,003 samples, 5.11%)</title><rect x="97.6" y="1957" width="60.3" height="15.0" fill="rgb(219,95,5)" rx="2" ry="2" />
<text  x="100.60" y="1967.5" >futex_..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1797" width="12.3" height="15.0" fill="rgb(216,133,31)" rx="2" ry="2" />
<text  x="871.52" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (2,701,516 samples, 7.04%)</title><rect x="540.2" y="1205" width="83.0" height="15.0" fill="rgb(207,47,34)" rx="2" ry="2" />
<text  x="543.19" y="1215.5" >boost::as..</text>
</g>
<g >
<title>do_syscall_64 (199,005 samples, 0.52%)</title><rect x="84.6" y="2005" width="6.1" height="15.0" fill="rgb(231,111,40)" rx="2" ry="2" />
<text  x="87.57" y="2015.5" ></text>
</g>
<g >
<title>dequeue_entity (143,269 samples, 0.37%)</title><rect x="786.2" y="1653" width="4.4" height="15.0" fill="rgb(237,40,38)" rx="2" ry="2" />
<text  x="789.17" y="1663.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1589" width="11.2" height="15.0" fill="rgb(222,169,27)" rx="2" ry="2" />
<text  x="1175.49" y="1599.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::async_write_some_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1013" width="11.2" height="15.0" fill="rgb(238,30,28)" rx="2" ry="2" />
<text  x="1175.49" y="1023.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1781" width="5.4" height="15.0" fill="rgb(253,127,9)" rx="2" ry="2" />
<text  x="724.29" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (75,343 samples, 0.20%)</title><rect x="910.6" y="1845" width="2.3" height="15.0" fill="rgb(229,10,45)" rx="2" ry="2" />
<text  x="913.61" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="613" width="12.0" height="15.0" fill="rgb(228,215,13)" rx="2" ry="2" />
<text  x="1163.49" y="623.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (364,717 samples, 0.95%)</title><rect x="1172.5" y="1941" width="11.2" height="15.0" fill="rgb(239,141,23)" rx="2" ry="2" />
<text  x="1175.49" y="1951.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="709" width="17.4" height="15.0" fill="rgb(222,202,9)" rx="2" ry="2" />
<text  x="998.94" y="719.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (204,803 samples, 0.53%)</title><rect x="715.0" y="1749" width="6.3" height="15.0" fill="rgb(208,146,46)" rx="2" ry="2" />
<text  x="717.99" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::any_io_executor (445,208 samples, 1.16%)</title><rect x="424.1" y="693" width="13.7" height="15.0" fill="rgb(226,30,10)" rx="2" ry="2" />
<text  x="427.11" y="703.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="965" width="11.6" height="15.0" fill="rgb(206,5,32)" rx="2" ry="2" />
<text  x="1016.30" y="975.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1301" width="11.6" height="15.0" fill="rgb(233,34,5)" rx="2" ry="2" />
<text  x="1016.30" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::basic_parsed_list&lt;boost::beast::http::detail::opt_token_list_policy&gt;::begin (645,076 samples, 1.68%)</title><rect x="350.1" y="1109" width="19.8" height="15.0" fill="rgb(222,51,35)" rx="2" ry="2" />
<text  x="353.06" y="1119.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::async_write_some_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="741" width="58.9" height="15.0" fill="rgb(247,23,39)" rx="2" ry="2" />
<text  x="543.19" y="751.5" >boost:..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1541" width="5.4" height="15.0" fill="rgb(245,195,42)" rx="2" ry="2" />
<text  x="724.29" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1717" width="131.3" height="15.0" fill="rgb(218,209,4)" rx="2" ry="2" />
<text  x="281.00" y="1727.5" >boost::asio::exe..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1461" width="44.3" height="15.0" fill="rgb(205,121,14)" rx="2" ry="2" />
<text  x="203.41" y="1471.5" >boos..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="853" width="11.6" height="15.0" fill="rgb(230,83,17)" rx="2" ry="2" />
<text  x="1016.30" y="863.5" ></text>
</g>
<g >
<title>tcp_close (199,055 samples, 0.52%)</title><rect x="526.3" y="917" width="6.1" height="15.0" fill="rgb(205,181,23)" rx="2" ry="2" />
<text  x="529.32" y="927.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="933" width="13.7" height="15.0" fill="rgb(241,11,35)" rx="2" ry="2" />
<text  x="427.11" y="943.5" ></text>
</g>
<g >
<title>update_load_avg (194,187 samples, 0.51%)</title><rect x="149.6" y="1861" width="6.0" height="15.0" fill="rgb(240,181,37)" rx="2" ry="2" />
<text  x="152.64" y="1871.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1669" width="5.4" height="15.0" fill="rgb(217,19,13)" rx="2" ry="2" />
<text  x="724.29" y="1679.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one (4,006,109 samples, 10.44%)</title><rect x="827.6" y="1973" width="123.1" height="15.0" fill="rgb(240,157,26)" rx="2" ry="2" />
<text  x="830.60" y="1983.5" >boost::asio::de..</text>
</g>
<g >
<title>__dentry_kill (281,962 samples, 0.73%)</title><rect x="517.7" y="949" width="8.6" height="15.0" fill="rgb(230,228,49)" rx="2" ry="2" />
<text  x="520.66" y="959.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1541" width="11.9" height="15.0" fill="rgb(244,216,24)" rx="2" ry="2" />
<text  x="915.93" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (470,246 samples, 1.22%)</title><rect x="912.9" y="1909" width="14.5" height="15.0" fill="rgb(250,205,28)" rx="2" ry="2" />
<text  x="915.93" y="1919.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;4ul&gt;::call&lt;0ul, boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::destroy&gt; (220,784 samples, 0.58%)</title><rect x="918.0" y="1253" width="6.8" height="15.0" fill="rgb(207,153,50)" rx="2" ry="2" />
<text  x="921.02" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1045" width="12.0" height="15.0" fill="rgb(236,103,8)" rx="2" ry="2" />
<text  x="1163.49" y="1055.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.0 (252,217 samples, 0.66%)</title><rect x="532.4" y="997" width="7.8" height="15.0" fill="rgb(219,165,44)" rx="2" ry="2" />
<text  x="535.44" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::destroy_void (19,781 samples, 0.05%)</title><rect x="759.0" y="1717" width="0.6" height="15.0" fill="rgb(227,9,10)" rx="2" ry="2" />
<text  x="761.97" y="1727.5" ></text>
</g>
<g >
<title>boost::beast::stable_async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (199,633 samples, 0.52%)</title><rect x="452.3" y="1301" width="6.1" height="15.0" fill="rgb(247,203,43)" rx="2" ry="2" />
<text  x="455.29" y="1311.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnRead (377,915 samples, 0.98%)</title><rect x="1013.3" y="1397" width="11.6" height="15.0" fill="rgb(244,197,48)" rx="2" ry="2" />
<text  x="1016.30" y="1407.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (199,055 samples, 0.52%)</title><rect x="526.3" y="677" width="6.1" height="15.0" fill="rgb(231,201,43)" rx="2" ry="2" />
<text  x="529.32" y="687.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base (245,495 samples, 0.64%)</title><rect x="707.4" y="1717" width="7.6" height="15.0" fill="rgb(234,218,54)" rx="2" ry="2" />
<text  x="710.45" y="1727.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1477" width="6.1" height="15.0" fill="rgb(206,119,19)" rx="2" ry="2" />
<text  x="871.52" y="1487.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="821" width="6.9" height="15.0" fill="rgb(237,18,9)" rx="2" ry="2" />
<text  x="1027.92" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1685" width="200.8" height="15.0" fill="rgb(230,219,16)" rx="2" ry="2" />
<text  x="509.58" y="1695.5" >boost::asio::detail::stran..</text>
</g>
<g >
<title>__close (481,017 samples, 1.25%)</title><rect x="517.7" y="1077" width="14.7" height="15.0" fill="rgb(232,63,3)" rx="2" ry="2" />
<text  x="520.66" y="1087.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::destroy::operator (220,784 samples, 0.58%)</title><rect x="918.0" y="1237" width="6.8" height="15.0" fill="rgb(206,32,52)" rx="2" ry="2" />
<text  x="921.02" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,883 samples, 0.02%)</title><rect x="1189.8" y="2021" width="0.2" height="15.0" fill="rgb(251,52,48)" rx="2" ry="2" />
<text  x="1192.82" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1909" width="6.2" height="15.0" fill="rgb(219,113,41)" rx="2" ry="2" />
<text  x="45.34" y="1919.5" ></text>
</g>
<g >
<title>__handle_mm_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1909" width="6.1" height="15.0" fill="rgb(224,40,24)" rx="2" ry="2" />
<text  x="70.21" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;boost::asio::detail::strand_executor_service::strand_impl&gt;::shared_ptr (245,495 samples, 0.64%)</title><rect x="707.4" y="1669" width="7.6" height="15.0" fill="rgb(220,120,27)" rx="2" ry="2" />
<text  x="710.45" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1381" width="11.2" height="15.0" fill="rgb(225,102,34)" rx="2" ry="2" />
<text  x="1175.49" y="1391.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1205" width="12.0" height="15.0" fill="rgb(236,74,27)" rx="2" ry="2" />
<text  x="1163.49" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (390,290 samples, 1.02%)</title><rect x="1160.5" y="485" width="12.0" height="15.0" fill="rgb(211,198,1)" rx="2" ry="2" />
<text  x="1163.49" y="495.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt; &gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::asio::const_buffer&gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; const&amp;&gt;, boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; const&amp;&gt; &gt;::emplace&lt;2ul, unsigned long&amp;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;&amp;&gt; (929,233 samples, 2.42%)</title><rect x="549.8" y="613" width="28.5" height="15.0" fill="rgb(247,54,4)" rx="2" ry="2" />
<text  x="552.77" y="623.5" >bo..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1797" width="14.5" height="15.0" fill="rgb(219,36,46)" rx="2" ry="2" />
<text  x="831.53" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="901" width="8.4" height="15.0" fill="rgb(238,109,53)" rx="2" ry="2" />
<text  x="446.93" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (386,584 samples, 1.01%)</title><rect x="912.9" y="1685" width="11.9" height="15.0" fill="rgb(208,129,34)" rx="2" ry="2" />
<text  x="915.93" y="1695.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::const_iterator (311,653 samples, 0.81%)</title><rect x="540.2" y="485" width="9.6" height="15.0" fill="rgb(232,124,0)" rx="2" ry="2" />
<text  x="543.19" y="495.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="773" width="13.7" height="15.0" fill="rgb(219,174,53)" rx="2" ry="2" />
<text  x="427.11" y="783.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (90,242 samples, 0.24%)</title><rect x="1093.6" y="1957" width="2.8" height="15.0" fill="rgb(229,220,17)" rx="2" ry="2" />
<text  x="1096.58" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (7,531,064 samples, 19.62%)</title><rect x="476.0" y="1765" width="231.4" height="15.0" fill="rgb(233,53,48)" rx="2" ry="2" />
<text  x="478.95" y="1775.5" >boost::asio::execution::detail..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="885" width="6.9" height="15.0" fill="rgb(244,51,11)" rx="2" ry="2" />
<text  x="1027.92" y="895.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1013" width="13.7" height="15.0" fill="rgb(242,29,28)" rx="2" ry="2" />
<text  x="427.11" y="1023.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;4ul&gt;::call&lt;0ul, boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::increment&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1173" width="5.4" height="15.0" fill="rgb(206,203,52)" rx="2" ry="2" />
<text  x="724.29" y="1183.5" ></text>
</g>
<g >
<title>____sys_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="437" width="17.4" height="15.0" fill="rgb(215,93,22)" rx="2" ry="2" />
<text  x="998.94" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (225,146 samples, 0.59%)</title><rect x="836.1" y="581" width="6.9" height="15.0" fill="rgb(229,16,6)" rx="2" ry="2" />
<text  x="839.05" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1157" width="24.7" height="15.0" fill="rgb(254,46,32)" rx="2" ry="2" />
<text  x="222.95" y="1167.5" >s..</text>
</g>
<g >
<title>scsi_io_completion (244,735 samples, 0.64%)</title><rect x="828.5" y="1061" width="7.6" height="15.0" fill="rgb(245,10,52)" rx="2" ry="2" />
<text  x="831.53" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1189" width="6.9" height="15.0" fill="rgb(238,213,6)" rx="2" ry="2" />
<text  x="839.05" y="1199.5" ></text>
</g>
<g >
<title>boost::beast::http::async_read&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="517" width="6.9" height="15.0" fill="rgb(209,33,35)" rx="2" ry="2" />
<text  x="1027.92" y="527.5" ></text>
</g>
<g >
<title>page_fault (199,526 samples, 0.52%)</title><rect x="803.2" y="2005" width="6.1" height="15.0" fill="rgb(243,25,50)" rx="2" ry="2" />
<text  x="806.16" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1861" width="12.0" height="15.0" fill="rgb(228,147,20)" rx="2" ry="2" />
<text  x="1163.49" y="1871.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1781" width="6.3" height="15.0" fill="rgb(224,157,41)" rx="2" ry="2" />
<text  x="472.66" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output (377,915 samples, 0.98%)</title><rect x="1013.3" y="373" width="11.6" height="15.0" fill="rgb(227,207,3)" rx="2" ry="2" />
<text  x="1016.30" y="383.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1445" width="13.7" height="15.0" fill="rgb(229,54,36)" rx="2" ry="2" />
<text  x="427.11" y="1455.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::increment::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1157" width="5.4" height="15.0" fill="rgb(224,163,3)" rx="2" ry="2" />
<text  x="724.29" y="1167.5" ></text>
</g>
<g >
<title>std::make_shared&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1237" width="24.7" height="15.0" fill="rgb(235,71,37)" rx="2" ry="2" />
<text  x="222.95" y="1247.5" >s..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1589" width="126.5" height="15.0" fill="rgb(206,214,15)" rx="2" ry="2" />
<text  x="285.81" y="1599.5" >boost::asio::as..</text>
</g>
<g >
<title>sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="677" width="11.6" height="15.0" fill="rgb(253,21,15)" rx="2" ry="2" />
<text  x="1016.30" y="687.5" ></text>
</g>
<g >
<title>mprotect_fixup (160,702 samples, 0.42%)</title><rect x="963.0" y="1973" width="4.9" height="15.0" fill="rgb(219,80,46)" rx="2" ry="2" />
<text  x="965.98" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1413" width="17.4" height="15.0" fill="rgb(207,162,49)" rx="2" ry="2" />
<text  x="998.94" y="1423.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (252,217 samples, 0.66%)</title><rect x="270.2" y="1765" width="7.8" height="15.0" fill="rgb(253,70,18)" rx="2" ry="2" />
<text  x="273.25" y="1775.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (83,662 samples, 0.22%)</title><rect x="924.8" y="1893" width="2.6" height="15.0" fill="rgb(219,221,54)" rx="2" ry="2" />
<text  x="927.81" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (364,717 samples, 0.95%)</title><rect x="1172.5" y="1845" width="11.2" height="15.0" fill="rgb(232,136,43)" rx="2" ry="2" />
<text  x="1175.49" y="1855.5" ></text>
</g>
<g >
<title>http_handler::RequestHandler::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1269" width="11.2" height="15.0" fill="rgb(230,154,14)" rx="2" ry="2" />
<text  x="1175.49" y="1279.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (199,055 samples, 0.52%)</title><rect x="526.3" y="533" width="6.1" height="15.0" fill="rgb(237,116,31)" rx="2" ry="2" />
<text  x="529.32" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_enable (13,264 samples, 0.03%)</title><rect x="827.6" y="1845" width="0.4" height="15.0" fill="rgb(231,53,29)" rx="2" ry="2" />
<text  x="830.60" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1893" width="14.5" height="15.0" fill="rgb(209,26,9)" rx="2" ry="2" />
<text  x="831.53" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_init (198,769 samples, 0.52%)</title><rect x="809.3" y="1749" width="6.1" height="15.0" fill="rgb(206,91,3)" rx="2" ry="2" />
<text  x="812.29" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="1093" width="12.3" height="15.0" fill="rgb(213,104,42)" rx="2" ry="2" />
<text  x="210.71" y="1103.5" ></text>
</g>
<g >
<title>do_user_addr_fault (209,856 samples, 0.55%)</title><rect x="48.5" y="1941" width="6.4" height="15.0" fill="rgb(221,18,31)" rx="2" ry="2" />
<text  x="51.48" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1573" width="11.6" height="15.0" fill="rgb(208,158,23)" rx="2" ry="2" />
<text  x="1016.30" y="1583.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::const_iterator (606,296 samples, 1.58%)</title><rect x="549.8" y="437" width="18.6" height="15.0" fill="rgb(224,174,13)" rx="2" ry="2" />
<text  x="552.77" y="447.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range::end (322,937 samples, 0.84%)</title><rect x="568.4" y="373" width="9.9" height="15.0" fill="rgb(215,196,41)" rx="2" ry="2" />
<text  x="571.41" y="383.5" ></text>
</g>
<g >
<title>boost::asio::detail::wait_handler&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor&gt;::~wait_handler (19,781 samples, 0.05%)</title><rect x="759.0" y="1797" width="0.6" height="15.0" fill="rgb(253,62,14)" rx="2" ry="2" />
<text  x="761.97" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="693" width="12.0" height="15.0" fill="rgb(205,154,42)" rx="2" ry="2" />
<text  x="1163.49" y="703.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1829" width="17.4" height="15.0" fill="rgb(216,29,37)" rx="2" ry="2" />
<text  x="998.94" y="1839.5" ></text>
</g>
<g >
<title>operator new (404,605 samples, 1.05%)</title><rect x="743.9" y="1733" width="12.4" height="15.0" fill="rgb(248,43,39)" rx="2" ry="2" />
<text  x="746.85" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::basic_signal_set&lt;boost::asio::any_io_executor&gt;::basic_signal_set&lt;boost::asio::io_context&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="2021" width="6.1" height="15.0" fill="rgb(206,164,39)" rx="2" ry="2" />
<text  x="812.29" y="2031.5" ></text>
</g>
<g >
<title>futex_wait (9,135 samples, 0.02%)</title><rect x="168.4" y="1733" width="0.3" height="15.0" fill="rgb(254,7,4)" rx="2" ry="2" />
<text  x="171.39" y="1743.5" ></text>
</g>
<g >
<title>_dl_cache_libcmp (233,075 samples, 0.61%)</title><rect x="974.0" y="2037" width="7.2" height="15.0" fill="rgb(252,106,19)" rx="2" ry="2" />
<text  x="977.02" y="2047.5" ></text>
</g>
<g >
<title>http_server::SessionBase::SessionBase (805,936 samples, 2.10%)</title><rect x="220.0" y="1093" width="24.7" height="15.0" fill="rgb(243,15,23)" rx="2" ry="2" />
<text  x="222.95" y="1103.5" >h..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1701" width="50.4" height="15.0" fill="rgb(228,53,40)" rx="2" ry="2" />
<text  x="197.29" y="1711.5" >boost..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1365" width="6.9" height="15.0" fill="rgb(226,91,42)" rx="2" ry="2" />
<text  x="1027.92" y="1375.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1029" width="68.8" height="15.0" fill="rgb(254,66,44)" rx="2" ry="2" />
<text  x="543.19" y="1039.5" >http_se..</text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (239,731 samples, 0.62%)</title><rect x="880.8" y="1845" width="7.3" height="15.0" fill="rgb(247,186,4)" rx="2" ry="2" />
<text  x="883.77" y="1855.5" ></text>
</g>
<g >
<title>schedule (9,135 samples, 0.02%)</title><rect x="168.4" y="1701" width="0.3" height="15.0" fill="rgb(254,86,23)" rx="2" ry="2" />
<text  x="171.39" y="1711.5" ></text>
</g>
<g >
<title>sched_clock_cpu (42,184 samples, 0.11%)</title><rect x="155.6" y="1877" width="1.3" height="15.0" fill="rgb(217,10,26)" rx="2" ry="2" />
<text  x="158.61" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (199,055 samples, 0.52%)</title><rect x="526.3" y="405" width="6.1" height="15.0" fill="rgb(219,157,33)" rx="2" ry="2" />
<text  x="529.32" y="415.5" ></text>
</g>
<g >
<title>sock_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="421" width="17.4" height="15.0" fill="rgb(216,137,28)" rx="2" ry="2" />
<text  x="998.94" y="431.5" ></text>
</g>
<g >
<title>hash_futex (462,428 samples, 1.20%)</title><rect x="1146.3" y="1973" width="14.2" height="15.0" fill="rgb(239,34,23)" rx="2" ry="2" />
<text  x="1149.28" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="821" width="58.9" height="15.0" fill="rgb(214,125,53)" rx="2" ry="2" />
<text  x="543.19" y="831.5" >boost:..</text>
</g>
<g >
<title>__schedule (1,929,558 samples, 5.03%)</title><rect x="97.6" y="1909" width="59.3" height="15.0" fill="rgb(249,79,9)" rx="2" ry="2" />
<text  x="100.60" y="1919.5" >__sche..</text>
</g>
<g >
<title>page_fault (209,856 samples, 0.55%)</title><rect x="48.5" y="1989" width="6.4" height="15.0" fill="rgb(232,147,10)" rx="2" ry="2" />
<text  x="51.48" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_msg_op::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1109" width="17.4" height="15.0" fill="rgb(249,90,28)" rx="2" ry="2" />
<text  x="998.94" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1461" width="11.9" height="15.0" fill="rgb(222,108,43)" rx="2" ry="2" />
<text  x="915.93" y="1471.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="789" width="11.2" height="15.0" fill="rgb(250,39,4)" rx="2" ry="2" />
<text  x="1175.49" y="799.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1925" width="12.0" height="15.0" fill="rgb(247,7,23)" rx="2" ry="2" />
<text  x="1163.49" y="1935.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::~const_iterator (220,784 samples, 0.58%)</title><rect x="918.0" y="1317" width="6.8" height="15.0" fill="rgb(224,95,46)" rx="2" ry="2" />
<text  x="921.02" y="1327.5" ></text>
</g>
<g >
<title>ctx_sched_out (220,757 samples, 0.58%)</title><rect x="97.6" y="1861" width="6.8" height="15.0" fill="rgb(219,126,48)" rx="2" ry="2" />
<text  x="100.60" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1205" width="24.7" height="15.0" fill="rgb(223,96,34)" rx="2" ry="2" />
<text  x="222.95" y="1215.5" >s..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1493" width="6.1" height="15.0" fill="rgb(205,98,48)" rx="2" ry="2" />
<text  x="871.52" y="1503.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (440,260 samples, 1.15%)</title><rect x="336.5" y="1093" width="13.6" height="15.0" fill="rgb(221,162,47)" rx="2" ry="2" />
<text  x="339.53" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::detail::service_registry::use_service&lt;boost::asio::detail::epoll_reactor&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="1893" width="6.1" height="15.0" fill="rgb(218,72,16)" rx="2" ry="2" />
<text  x="812.29" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (377,915 samples, 0.98%)</title><rect x="1013.3" y="325" width="11.6" height="15.0" fill="rgb(248,105,26)" rx="2" ry="2" />
<text  x="1016.30" y="335.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::parse_fields (2,179,523 samples, 5.68%)</title><rect x="630.8" y="1189" width="67.0" height="15.0" fill="rgb(208,129,31)" rx="2" ry="2" />
<text  x="633.78" y="1199.5" >boost::..</text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1461" width="11.2" height="15.0" fill="rgb(229,147,41)" rx="2" ry="2" />
<text  x="1175.49" y="1471.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4,838 samples, 0.01%)</title><rect x="803.0" y="1653" width="0.2" height="15.0" fill="rgb(228,13,18)" rx="2" ry="2" />
<text  x="806.01" y="1663.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1909" width="17.4" height="15.0" fill="rgb(218,174,32)" rx="2" ry="2" />
<text  x="998.94" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_composed_op&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="341" width="6.9" height="15.0" fill="rgb(227,76,23)" rx="2" ry="2" />
<text  x="1027.92" y="351.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1637" width="22.5" height="15.0" fill="rgb(251,92,46)" rx="2" ry="2" />
<text  x="891.14" y="1647.5" >b..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (234,592 samples, 0.61%)</title><rect x="981.2" y="2005" width="7.2" height="15.0" fill="rgb(217,114,7)" rx="2" ry="2" />
<text  x="984.18" y="2015.5" ></text>
</g>
<g >
<title>pagecache_get_page (199,656 samples, 0.52%)</title><rect x="67.2" y="1829" width="6.1" height="15.0" fill="rgb(242,127,21)" rx="2" ry="2" />
<text  x="70.21" y="1839.5" ></text>
</g>
<g >
<title>json_loader::ParseObjects&lt;model::Office&gt; (198,555 samples, 0.52%)</title><rect x="821.5" y="1973" width="6.1" height="15.0" fill="rgb(229,7,36)" rx="2" ry="2" />
<text  x="824.50" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="741" width="11.2" height="15.0" fill="rgb(240,228,4)" rx="2" ry="2" />
<text  x="1175.49" y="751.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (377,915 samples, 0.98%)</title><rect x="1013.3" y="453" width="11.6" height="15.0" fill="rgb(253,71,16)" rx="2" ry="2" />
<text  x="1016.30" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1925" width="635.7" height="15.0" fill="rgb(244,197,45)" rx="2" ry="2" />
<text  x="170.50" y="1935.5" >std::__invoke_impl&lt;void, main::{lambda</text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1125" width="11.2" height="15.0" fill="rgb(218,68,21)" rx="2" ry="2" />
<text  x="1175.49" y="1135.5" ></text>
</g>
<g >
<title>filemap_map_pages (233,075 samples, 0.61%)</title><rect x="974.0" y="1909" width="7.2" height="15.0" fill="rgb(242,50,24)" rx="2" ry="2" />
<text  x="977.02" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1205" width="11.6" height="15.0" fill="rgb(250,130,0)" rx="2" ry="2" />
<text  x="1016.30" y="1215.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1077" width="12.0" height="15.0" fill="rgb(248,70,3)" rx="2" ry="2" />
<text  x="1163.49" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1813" width="22.5" height="15.0" fill="rgb(212,28,1)" rx="2" ry="2" />
<text  x="891.14" y="1823.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::scheduler::run (364,717 samples, 0.95%)</title><rect x="1172.5" y="1973" width="11.2" height="15.0" fill="rgb(245,194,0)" rx="2" ry="2" />
<text  x="1175.49" y="1983.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_read_msg_op::operator (165,800 samples, 0.43%)</title><rect x="912.9" y="1221" width="5.1" height="15.0" fill="rgb(245,40,32)" rx="2" ry="2" />
<text  x="915.93" y="1231.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;7ul, boost::beast::detail::variant&lt;boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::destroy&gt; (220,784 samples, 0.58%)</title><rect x="918.0" y="1189" width="6.8" height="15.0" fill="rgb(237,36,19)" rx="2" ry="2" />
<text  x="921.02" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1317" width="12.0" height="15.0" fill="rgb(243,216,16)" rx="2" ry="2" />
<text  x="1163.49" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (224,219 samples, 0.58%)</title><rect x="1024.9" y="1717" width="6.9" height="15.0" fill="rgb(207,93,33)" rx="2" ry="2" />
<text  x="1027.92" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1525" width="11.2" height="15.0" fill="rgb(229,80,50)" rx="2" ry="2" />
<text  x="1175.49" y="1535.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1349" width="44.3" height="15.0" fill="rgb(210,13,27)" rx="2" ry="2" />
<text  x="203.41" y="1359.5" >boos..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1717" width="5.4" height="15.0" fill="rgb(240,124,28)" rx="2" ry="2" />
<text  x="724.29" y="1727.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_some_op::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="901" width="17.4" height="15.0" fill="rgb(249,26,11)" rx="2" ry="2" />
<text  x="998.94" y="911.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (244,735 samples, 0.64%)</title><rect x="828.5" y="1125" width="7.6" height="15.0" fill="rgb(219,123,48)" rx="2" ry="2" />
<text  x="831.53" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="2005" width="11.6" height="15.0" fill="rgb(211,133,14)" rx="2" ry="2" />
<text  x="1016.30" y="2015.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1509" width="11.6" height="15.0" fill="rgb(209,209,46)" rx="2" ry="2" />
<text  x="1016.30" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1317" width="163.7" height="15.0" fill="rgb(207,92,53)" rx="2" ry="2" />
<text  x="543.19" y="1327.5" >boost::asio::asio_han..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="565" width="12.3" height="15.0" fill="rgb(211,38,29)" rx="2" ry="2" />
<text  x="210.71" y="575.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1477" width="13.7" height="15.0" fill="rgb(245,38,48)" rx="2" ry="2" />
<text  x="427.11" y="1487.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::ctype@plt (199,734 samples, 0.52%)</title><rect x="161.4" y="2037" width="6.1" height="15.0" fill="rgb(219,93,45)" rx="2" ry="2" />
<text  x="164.36" y="2047.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;boost::asio::any_io_executor&gt;::destroy (204,803 samples, 0.53%)</title><rect x="469.7" y="1653" width="6.3" height="15.0" fill="rgb(221,191,7)" rx="2" ry="2" />
<text  x="472.66" y="1663.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1749" width="11.9" height="15.0" fill="rgb(227,106,3)" rx="2" ry="2" />
<text  x="915.93" y="1759.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1749" width="50.4" height="15.0" fill="rgb(229,78,20)" rx="2" ry="2" />
<text  x="197.29" y="1759.5" >boost..</text>
</g>
<g >
<title>main::{lambda (271,965 samples, 0.71%)</title><rect x="443.9" y="1189" width="8.4" height="15.0" fill="rgb(222,134,37)" rx="2" ry="2" />
<text  x="446.93" y="1199.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,204,012 samples, 3.14%)</title><rect x="1109.3" y="1925" width="37.0" height="15.0" fill="rgb(207,121,50)" rx="2" ry="2" />
<text  x="1112.27" y="1935.5" >ttw..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1957" width="635.7" height="15.0" fill="rgb(227,15,43)" rx="2" ry="2" />
<text  x="170.50" y="1967.5" >std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>[unknown] (20,679,395 samples, 53.87%)</title><rect x="167.5" y="2021" width="635.7" height="15.0" fill="rgb(239,149,14)" rx="2" ry="2" />
<text  x="170.50" y="2031.5" >[unknown]</text>
</g>
<g >
<title>main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1909" width="635.7" height="15.0" fill="rgb(216,36,14)" rx="2" ry="2" />
<text  x="170.50" y="1919.5" >main::{lambda</text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::const_iterator (606,296 samples, 1.58%)</title><rect x="549.8" y="533" width="18.6" height="15.0" fill="rgb(215,132,49)" rx="2" ry="2" />
<text  x="552.77" y="543.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (9,135 samples, 0.02%)</title><rect x="168.4" y="1653" width="0.3" height="15.0" fill="rgb(206,60,9)" rx="2" ry="2" />
<text  x="171.39" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (606,765 samples, 1.58%)</title><rect x="1056.4" y="2005" width="18.6" height="15.0" fill="rgb(223,160,18)" rx="2" ry="2" />
<text  x="1059.37" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::detail::hook_allocator&lt;boost::beast::detail::bind_front_wrapper&lt;void  (199,120 samples, 0.52%)</title><rect x="264.1" y="1765" width="6.1" height="15.0" fill="rgb(228,114,2)" rx="2" ry="2" />
<text  x="267.13" y="1775.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1413" width="126.5" height="15.0" fill="rgb(248,79,16)" rx="2" ry="2" />
<text  x="285.81" y="1423.5" >boost_asio_hand..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1669" width="17.4" height="15.0" fill="rgb(220,95,0)" rx="2" ry="2" />
<text  x="998.94" y="1679.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1605" width="50.4" height="15.0" fill="rgb(216,56,5)" rx="2" ry="2" />
<text  x="197.29" y="1615.5" >boost..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (390,290 samples, 1.02%)</title><rect x="1160.5" y="1701" width="12.0" height="15.0" fill="rgb(220,48,11)" rx="2" ry="2" />
<text  x="1163.49" y="1711.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::async_write_some_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="917" width="8.4" height="15.0" fill="rgb(244,10,31)" rx="2" ry="2" />
<text  x="446.93" y="927.5" ></text>
</g>
<g >
<title>clone (229,290 samples, 0.60%)</title><rect x="84.6" y="2037" width="7.0" height="15.0" fill="rgb(221,89,45)" rx="2" ry="2" />
<text  x="87.57" y="2047.5" ></text>
</g>
<g >
<title>tcp_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="453" width="11.2" height="15.0" fill="rgb(211,76,49)" rx="2" ry="2" />
<text  x="1175.49" y="463.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="933" width="6.9" height="15.0" fill="rgb(236,143,21)" rx="2" ry="2" />
<text  x="1027.92" y="943.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (733,234 samples, 1.91%)</title><rect x="517.7" y="1237" width="22.5" height="15.0" fill="rgb(235,105,48)" rx="2" ry="2" />
<text  x="520.66" y="1247.5" >s..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1893" width="12.0" height="15.0" fill="rgb(243,18,44)" rx="2" ry="2" />
<text  x="1163.49" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (199,055 samples, 0.52%)</title><rect x="526.3" y="565" width="6.1" height="15.0" fill="rgb(215,152,15)" rx="2" ry="2" />
<text  x="529.32" y="575.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (199,055 samples, 0.52%)</title><rect x="526.3" y="341" width="6.1" height="15.0" fill="rgb(220,90,18)" rx="2" ry="2" />
<text  x="529.32" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (390,290 samples, 1.02%)</title><rect x="1160.5" y="421" width="12.0" height="15.0" fill="rgb(226,94,28)" rx="2" ry="2" />
<text  x="1163.49" y="431.5" ></text>
</g>
<g >
<title>json_serializer::GetMapContentResponce (322,937 samples, 0.84%)</title><rect x="599.1" y="981" width="9.9" height="15.0" fill="rgb(247,219,13)" rx="2" ry="2" />
<text  x="602.07" y="991.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1829" width="12.3" height="15.0" fill="rgb(245,91,0)" rx="2" ry="2" />
<text  x="871.52" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (377,915 samples, 0.98%)</title><rect x="1013.3" y="37" width="11.6" height="15.0" fill="rgb(229,152,20)" rx="2" ry="2" />
<text  x="1016.30" y="47.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1701" width="5.4" height="15.0" fill="rgb(225,133,1)" rx="2" ry="2" />
<text  x="724.29" y="1711.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (3,215,872 samples, 8.38%)</title><rect x="828.5" y="1957" width="98.9" height="15.0" fill="rgb(227,177,24)" rx="2" ry="2" />
<text  x="831.53" y="1967.5" >boost::asio..</text>
</g>
<g >
<title>__libc_start_main (4,999,848 samples, 13.02%)</title><rect x="809.3" y="2053" width="153.7" height="15.0" fill="rgb(214,175,6)" rx="2" ry="2" />
<text  x="812.29" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>do_syscall_64 (2,047,575 samples, 5.33%)</title><rect x="97.6" y="2005" width="62.9" height="15.0" fill="rgb(254,202,26)" rx="2" ry="2" />
<text  x="100.60" y="2015.5" >do_sys..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="629" width="17.4" height="15.0" fill="rgb(223,64,32)" rx="2" ry="2" />
<text  x="998.94" y="639.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::increment::operator (322,937 samples, 0.84%)</title><rect x="568.4" y="485" width="9.9" height="15.0" fill="rgb(206,212,50)" rx="2" ry="2" />
<text  x="571.41" y="495.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1669" width="13.7" height="15.0" fill="rgb(245,26,35)" rx="2" ry="2" />
<text  x="427.11" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_read_op::operator (445,208 samples, 1.16%)</title><rect x="424.1" y="981" width="13.7" height="15.0" fill="rgb(247,9,43)" rx="2" ry="2" />
<text  x="427.11" y="991.5" ></text>
</g>
<g >
<title>schedule (1,929,558 samples, 5.03%)</title><rect x="97.6" y="1925" width="59.3" height="15.0" fill="rgb(251,16,1)" rx="2" ry="2" />
<text  x="100.60" y="1935.5" >schedule</text>
</g>
<g >
<title>__do_page_fault (198,923 samples, 0.52%)</title><rect x="950.7" y="1973" width="6.2" height="15.0" fill="rgb(237,222,4)" rx="2" ry="2" />
<text  x="953.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (390,290 samples, 1.02%)</title><rect x="1160.5" y="277" width="12.0" height="15.0" fill="rgb(223,215,44)" rx="2" ry="2" />
<text  x="1163.49" y="287.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1685" width="17.4" height="15.0" fill="rgb(233,186,2)" rx="2" ry="2" />
<text  x="998.94" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1157" width="6.9" height="15.0" fill="rgb(251,221,31)" rx="2" ry="2" />
<text  x="1027.92" y="1167.5" ></text>
</g>
<g >
<title>boost::optional&lt;boost::asio::any_io_executor&gt;::~optional (204,803 samples, 0.53%)</title><rect x="469.7" y="1669" width="6.3" height="15.0" fill="rgb(244,155,40)" rx="2" ry="2" />
<text  x="472.66" y="1679.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="965" width="6.9" height="15.0" fill="rgb(252,6,19)" rx="2" ry="2" />
<text  x="839.05" y="975.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (386,584 samples, 1.01%)</title><rect x="912.9" y="1717" width="11.9" height="15.0" fill="rgb(242,220,18)" rx="2" ry="2" />
<text  x="915.93" y="1727.5" ></text>
</g>
<g >
<title>boost::beast::detail::buffer_bytes_impl::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1269" width="5.4" height="15.0" fill="rgb(215,174,41)" rx="2" ry="2" />
<text  x="724.29" y="1279.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (364,717 samples, 0.95%)</title><rect x="1172.5" y="341" width="11.2" height="15.0" fill="rgb(251,96,23)" rx="2" ry="2" />
<text  x="1175.49" y="351.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="677" width="6.9" height="15.0" fill="rgb(226,179,18)" rx="2" ry="2" />
<text  x="1027.92" y="687.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1685" width="40.5" height="15.0" fill="rgb(209,6,48)" rx="2" ry="2" />
<text  x="420.90" y="1695.5" >boo..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::~strand (379,246 samples, 0.99%)</title><rect x="732.2" y="1717" width="11.7" height="15.0" fill="rgb(240,51,47)" rx="2" ry="2" />
<text  x="735.19" y="1727.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1797" width="6.9" height="15.0" fill="rgb(229,83,34)" rx="2" ry="2" />
<text  x="1027.92" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::run (390,290 samples, 1.02%)</title><rect x="1160.5" y="1989" width="12.0" height="15.0" fill="rgb(208,6,10)" rx="2" ry="2" />
<text  x="1163.49" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (469,881 samples, 1.22%)</title><rect x="828.5" y="1589" width="14.5" height="15.0" fill="rgb(223,22,27)" rx="2" ry="2" />
<text  x="831.53" y="1599.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_write_op::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="821" width="11.2" height="15.0" fill="rgb(221,133,15)" rx="2" ry="2" />
<text  x="1175.49" y="831.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1573" width="6.9" height="15.0" fill="rgb(208,89,8)" rx="2" ry="2" />
<text  x="1027.92" y="1583.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;7ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1125" width="5.4" height="15.0" fill="rgb(227,140,27)" rx="2" ry="2" />
<text  x="724.29" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_perform (606,296 samples, 1.58%)</title><rect x="171.6" y="1781" width="18.6" height="15.0" fill="rgb(251,164,11)" rx="2" ry="2" />
<text  x="174.57" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="837" width="6.9" height="15.0" fill="rgb(215,15,0)" rx="2" ry="2" />
<text  x="839.05" y="847.5" ></text>
</g>
<g >
<title>std::addressof&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (629,612 samples, 1.64%)</title><rect x="759.6" y="1829" width="19.3" height="15.0" fill="rgb(254,72,15)" rx="2" ry="2" />
<text  x="762.58" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1269" width="163.7" height="15.0" fill="rgb(239,32,27)" rx="2" ry="2" />
<text  x="543.19" y="1279.5" >boost::beast::async_b..</text>
</g>
<g >
<title>perf_iterate_sb (102,347 samples, 0.27%)</title><rect x="91.6" y="1845" width="3.2" height="15.0" fill="rgb(224,2,40)" rx="2" ry="2" />
<text  x="94.62" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="693" width="6.9" height="15.0" fill="rgb(209,177,33)" rx="2" ry="2" />
<text  x="1027.92" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (760,057 samples, 1.98%)</title><rect x="927.4" y="1909" width="23.3" height="15.0" fill="rgb(224,81,49)" rx="2" ry="2" />
<text  x="930.38" y="1919.5" >_..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1573" width="50.4" height="15.0" fill="rgb(239,42,42)" rx="2" ry="2" />
<text  x="197.29" y="1583.5" >boost..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="917" width="17.4" height="15.0" fill="rgb(213,115,39)" rx="2" ry="2" />
<text  x="998.94" y="927.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1285" width="17.4" height="15.0" fill="rgb(208,14,36)" rx="2" ry="2" />
<text  x="998.94" y="1295.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::do_assign (631,215 samples, 1.64%)</title><rect x="244.7" y="1733" width="19.4" height="15.0" fill="rgb(223,112,17)" rx="2" ry="2" />
<text  x="247.73" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1493" width="5.4" height="15.0" fill="rgb(240,52,24)" rx="2" ry="2" />
<text  x="724.29" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::detail::wait_handler&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor&gt;::do_complete (1,070,028 samples, 2.79%)</title><rect x="726.7" y="1829" width="32.9" height="15.0" fill="rgb(220,219,16)" rx="2" ry="2" />
<text  x="729.69" y="1839.5" >bo..</text>
</g>
<g >
<title>alloc_set_pte (199,680 samples, 0.52%)</title><rect x="42.3" y="1861" width="6.2" height="15.0" fill="rgb(243,73,14)" rx="2" ry="2" />
<text  x="45.34" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1045" width="6.9" height="15.0" fill="rgb(252,94,23)" rx="2" ry="2" />
<text  x="1027.92" y="1055.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1669" width="200.8" height="15.0" fill="rgb(225,84,34)" rx="2" ry="2" />
<text  x="509.58" y="1679.5" >boost_asio_execution_execu..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="693" width="11.2" height="15.0" fill="rgb(230,165,30)" rx="2" ry="2" />
<text  x="1175.49" y="703.5" ></text>
</g>
<g >
<title>boost::asio::detail::associated_executor_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="789" width="13.7" height="15.0" fill="rgb(235,101,2)" rx="2" ry="2" />
<text  x="427.11" y="799.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1333" width="44.3" height="15.0" fill="rgb(222,20,41)" rx="2" ry="2" />
<text  x="203.41" y="1343.5" >boos..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (7,531,064 samples, 19.62%)</title><rect x="476.0" y="1781" width="231.4" height="15.0" fill="rgb(235,119,46)" rx="2" ry="2" />
<text  x="478.95" y="1791.5" >boost_asio_execution_execute_f..</text>
</g>
<g >
<title>native_write_msr (21,389 samples, 0.06%)</title><rect x="103.7" y="1797" width="0.7" height="15.0" fill="rgb(250,51,2)" rx="2" ry="2" />
<text  x="106.73" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (239,731 samples, 0.62%)</title><rect x="880.8" y="1909" width="7.3" height="15.0" fill="rgb(207,24,21)" rx="2" ry="2" />
<text  x="883.77" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1109" width="68.8" height="15.0" fill="rgb(230,68,51)" rx="2" ry="2" />
<text  x="543.19" y="1119.5" >boost::..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1989" width="635.7" height="15.0" fill="rgb(229,41,31)" rx="2" ry="2" />
<text  x="170.50" y="1999.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>tcp_close (731,150 samples, 1.90%)</title><rect x="888.1" y="1029" width="22.5" height="15.0" fill="rgb(243,225,35)" rx="2" ry="2" />
<text  x="891.14" y="1039.5" >t..</text>
</g>
<g >
<title>dbs_update_util_handler (237,370 samples, 0.62%)</title><rect x="111.5" y="1829" width="7.3" height="15.0" fill="rgb(234,160,28)" rx="2" ry="2" />
<text  x="114.46" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1333" width="17.4" height="15.0" fill="rgb(246,120,7)" rx="2" ry="2" />
<text  x="998.94" y="1343.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;7ul&gt;::call&lt;0ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::dereference&gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="309" width="20.8" height="15.0" fill="rgb(242,199,13)" rx="2" ry="2" />
<text  x="581.34" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (1,266,143 samples, 3.30%)</title><rect x="638.3" y="1125" width="38.9" height="15.0" fill="rgb(234,103,46)" rx="2" ry="2" />
<text  x="641.33" y="1135.5" >boo..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::impl_type::close (733,234 samples, 1.91%)</title><rect x="517.7" y="1125" width="22.5" height="15.0" fill="rgb(254,151,16)" rx="2" ry="2" />
<text  x="520.66" y="1135.5" >b..</text>
</g>
<g >
<title>boost::asio::io_context::run (364,717 samples, 0.95%)</title><rect x="1172.5" y="1989" width="11.2" height="15.0" fill="rgb(237,151,47)" rx="2" ry="2" />
<text  x="1175.49" y="1999.5" ></text>
</g>
<g >
<title>unmap_region (200,583 samples, 0.52%)</title><rect x="1056.4" y="1909" width="6.1" height="15.0" fill="rgb(224,16,11)" rx="2" ry="2" />
<text  x="1059.37" y="1919.5" ></text>
</g>
<g >
<title>do_user_addr_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="1973" width="7.2" height="15.0" fill="rgb(250,201,26)" rx="2" ry="2" />
<text  x="977.02" y="1983.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::~variant (220,784 samples, 0.58%)</title><rect x="918.0" y="1205" width="6.8" height="15.0" fill="rgb(253,105,13)" rx="2" ry="2" />
<text  x="921.02" y="1215.5" ></text>
</g>
<g >
<title>boost::json::object::find_impl (198,555 samples, 0.52%)</title><rect x="821.5" y="1845" width="6.1" height="15.0" fill="rgb(209,199,3)" rx="2" ry="2" />
<text  x="824.50" y="1855.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;4ul, boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::copy&gt; (606,296 samples, 1.58%)</title><rect x="549.8" y="485" width="18.6" height="15.0" fill="rgb(242,114,44)" rx="2" ry="2" />
<text  x="552.77" y="495.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (109,135 samples, 0.28%)</title><rect x="726.7" y="1717" width="3.3" height="15.0" fill="rgb(212,41,39)" rx="2" ry="2" />
<text  x="729.69" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1893" width="11.2" height="15.0" fill="rgb(212,104,37)" rx="2" ry="2" />
<text  x="1175.49" y="1903.5" ></text>
</g>
<g >
<title>epoll_ctl (252,217 samples, 0.66%)</title><rect x="532.4" y="1077" width="7.8" height="15.0" fill="rgb(246,15,31)" rx="2" ry="2" />
<text  x="535.44" y="1087.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1445" width="5.4" height="15.0" fill="rgb(240,196,36)" rx="2" ry="2" />
<text  x="724.29" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (377,915 samples, 0.98%)</title><rect x="1013.3" y="213" width="11.6" height="15.0" fill="rgb(216,19,10)" rx="2" ry="2" />
<text  x="1016.30" y="223.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1893" width="17.4" height="15.0" fill="rgb(211,104,52)" rx="2" ry="2" />
<text  x="998.94" y="1903.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="869" width="6.9" height="15.0" fill="rgb(240,129,34)" rx="2" ry="2" />
<text  x="839.05" y="879.5" ></text>
</g>
<g >
<title>irq_work_queue (199,240 samples, 0.52%)</title><rect x="118.8" y="1829" width="6.1" height="15.0" fill="rgb(226,202,15)" rx="2" ry="2" />
<text  x="121.75" y="1839.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;http_server::Session&lt;main::{lambda (733,234 samples, 1.91%)</title><rect x="517.7" y="1189" width="22.5" height="15.0" fill="rgb(207,66,8)" rx="2" ry="2" />
<text  x="520.66" y="1199.5" >s..</text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1445" width="11.2" height="15.0" fill="rgb(207,160,37)" rx="2" ry="2" />
<text  x="1175.49" y="1455.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (826,659 samples, 2.15%)</title><rect x="476.0" y="1733" width="25.4" height="15.0" fill="rgb(243,31,38)" rx="2" ry="2" />
<text  x="478.95" y="1743.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (6,058,823 samples, 15.78%)</title><rect x="517.7" y="1509" width="186.2" height="15.0" fill="rgb(223,229,9)" rx="2" ry="2" />
<text  x="520.66" y="1519.5" >boost::asio::detail::exe..</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1509" width="6.9" height="15.0" fill="rgb(238,46,28)" rx="2" ry="2" />
<text  x="1027.92" y="1519.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (199,055 samples, 0.52%)</title><rect x="526.3" y="309" width="6.1" height="15.0" fill="rgb(224,189,51)" rx="2" ry="2" />
<text  x="529.32" y="319.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="613" width="6.9" height="15.0" fill="rgb(234,33,11)" rx="2" ry="2" />
<text  x="839.05" y="623.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1061" width="12.0" height="15.0" fill="rgb(243,6,31)" rx="2" ry="2" />
<text  x="1163.49" y="1071.5" ></text>
</g>
<g >
<title>filemap_map_pages (199,680 samples, 0.52%)</title><rect x="42.3" y="1877" width="6.2" height="15.0" fill="rgb(229,59,9)" rx="2" ry="2" />
<text  x="45.34" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;http_server::SessionBase,  (733,234 samples, 1.91%)</title><rect x="517.7" y="1269" width="22.5" height="15.0" fill="rgb(246,227,22)" rx="2" ry="2" />
<text  x="520.66" y="1279.5" >s..</text>
</g>
<g >
<title>boost::asio::async_compose&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="501" width="6.9" height="15.0" fill="rgb(246,66,48)" rx="2" ry="2" />
<text  x="1027.92" y="511.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1685" width="131.3" height="15.0" fill="rgb(206,158,10)" rx="2" ry="2" />
<text  x="281.00" y="1695.5" >boost::asio::str..</text>
</g>
<g >
<title>boost::asio::use_service&lt;boost::asio::detail::epoll_reactor&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="1909" width="6.1" height="15.0" fill="rgb(252,209,38)" rx="2" ry="2" />
<text  x="812.29" y="1919.5" ></text>
</g>
<g >
<title>main (4,999,848 samples, 13.02%)</title><rect x="809.3" y="2037" width="153.7" height="15.0" fill="rgb(231,100,0)" rx="2" ry="2" />
<text  x="812.29" y="2047.5" >main</text>
</g>
<g >
<title>std::shared_ptr&lt;http_server::SessionBase&gt;::~shared_ptr (731,150 samples, 1.90%)</title><rect x="888.1" y="1397" width="22.5" height="15.0" fill="rgb(244,85,9)" rx="2" ry="2" />
<text  x="891.14" y="1407.5" >s..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1781" width="12.0" height="15.0" fill="rgb(241,129,21)" rx="2" ry="2" />
<text  x="1163.49" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (377,915 samples, 0.98%)</title><rect x="1013.3" y="149" width="11.6" height="15.0" fill="rgb(224,56,51)" rx="2" ry="2" />
<text  x="1016.30" y="159.5" ></text>
</g>
<g >
<title>do_filp_open (234,592 samples, 0.61%)</title><rect x="981.2" y="1941" width="7.2" height="15.0" fill="rgb(214,158,47)" rx="2" ry="2" />
<text  x="984.18" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_composed_op&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="453" width="6.9" height="15.0" fill="rgb(245,131,53)" rx="2" ry="2" />
<text  x="1027.92" y="463.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (564,935 samples, 1.47%)</title><rect x="995.9" y="341" width="17.4" height="15.0" fill="rgb(233,26,24)" rx="2" ry="2" />
<text  x="998.94" y="351.5" ></text>
</g>
<g >
<title>do_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="1925" width="7.2" height="15.0" fill="rgb(226,187,1)" rx="2" ry="2" />
<text  x="977.02" y="1935.5" ></text>
</g>
<g >
<title>inet_accept (606,296 samples, 1.58%)</title><rect x="171.6" y="1669" width="18.6" height="15.0" fill="rgb(223,213,24)" rx="2" ry="2" />
<text  x="174.57" y="1679.5" ></text>
</g>
<g >
<title>page_fault (198,923 samples, 0.52%)</title><rect x="950.7" y="2005" width="6.2" height="15.0" fill="rgb(251,165,14)" rx="2" ry="2" />
<text  x="953.75" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_write_some&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="837" width="11.6" height="15.0" fill="rgb(238,75,35)" rx="2" ry="2" />
<text  x="1016.30" y="847.5" ></text>
</g>
<g >
<title>boost::system::error_code::error_code (224,219 samples, 0.58%)</title><rect x="1024.9" y="37" width="6.9" height="15.0" fill="rgb(221,30,4)" rx="2" ry="2" />
<text  x="1027.92" y="47.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::dereference::operator (674,489 samples, 1.76%)</title><rect x="578.3" y="357" width="20.8" height="15.0" fill="rgb(228,165,46)" rx="2" ry="2" />
<text  x="581.34" y="367.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="821" width="17.4" height="15.0" fill="rgb(244,107,37)" rx="2" ry="2" />
<text  x="998.94" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1733" width="11.6" height="15.0" fill="rgb(228,18,26)" rx="2" ry="2" />
<text  x="1016.30" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1653" width="5.4" height="15.0" fill="rgb(253,66,19)" rx="2" ry="2" />
<text  x="724.29" y="1663.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1829" width="14.5" height="15.0" fill="rgb(205,192,26)" rx="2" ry="2" />
<text  x="831.53" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (199,763 samples, 0.52%)</title><rect x="23.9" y="1989" width="6.2" height="15.0" fill="rgb(233,160,33)" rx="2" ry="2" />
<text  x="26.92" y="1999.5" ></text>
</g>
<g >
<title>ep_insert (519,161 samples, 1.35%)</title><rect x="248.2" y="1653" width="15.9" height="15.0" fill="rgb(214,72,30)" rx="2" ry="2" />
<text  x="251.17" y="1663.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1797" width="6.3" height="15.0" fill="rgb(250,45,49)" rx="2" ry="2" />
<text  x="472.66" y="1807.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1429" width="5.4" height="15.0" fill="rgb(229,79,34)" rx="2" ry="2" />
<text  x="724.29" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="165" width="6.9" height="15.0" fill="rgb(218,133,52)" rx="2" ry="2" />
<text  x="1027.92" y="175.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (386,584 samples, 1.01%)</title><rect x="912.9" y="1621" width="11.9" height="15.0" fill="rgb(209,42,38)" rx="2" ry="2" />
<text  x="915.93" y="1631.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1205" width="13.7" height="15.0" fill="rgb(215,223,18)" rx="2" ry="2" />
<text  x="427.11" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1429" width="12.0" height="15.0" fill="rgb(250,186,26)" rx="2" ry="2" />
<text  x="1163.49" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (469,881 samples, 1.22%)</title><rect x="828.5" y="1669" width="14.5" height="15.0" fill="rgb(247,67,1)" rx="2" ry="2" />
<text  x="831.53" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1397" width="14.5" height="15.0" fill="rgb(230,33,51)" rx="2" ry="2" />
<text  x="831.53" y="1407.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;::timeout_handler (239,731 samples, 0.62%)</title><rect x="880.8" y="1749" width="7.3" height="15.0" fill="rgb(211,24,49)" rx="2" ry="2" />
<text  x="883.77" y="1759.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1365" width="22.5" height="15.0" fill="rgb(250,203,19)" rx="2" ry="2" />
<text  x="520.66" y="1375.5" >b..</text>
</g>
<g >
<title>__wake_up (199,055 samples, 0.52%)</title><rect x="526.3" y="357" width="6.1" height="15.0" fill="rgb(239,199,47)" rx="2" ry="2" />
<text  x="529.32" y="367.5" ></text>
</g>
<g >
<title>pick_next_task_fair (236,371 samples, 0.62%)</title><rect x="149.6" y="1893" width="7.3" height="15.0" fill="rgb(208,51,27)" rx="2" ry="2" />
<text  x="152.64" y="1903.5" ></text>
</g>
<g >
<title>boost::beast::detail::execution_work_guard&lt;boost::asio::any_io_executor&gt;::execution_work_guard (404,605 samples, 1.05%)</title><rect x="291.4" y="1077" width="12.5" height="15.0" fill="rgb(223,73,43)" rx="2" ry="2" />
<text  x="294.43" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::assign (631,215 samples, 1.64%)</title><rect x="244.7" y="1749" width="19.4" height="15.0" fill="rgb(217,207,52)" rx="2" ry="2" />
<text  x="247.73" y="1759.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::opt_token_list_policy::operator (645,076 samples, 1.68%)</title><rect x="350.1" y="1061" width="19.8" height="15.0" fill="rgb(231,135,33)" rx="2" ry="2" />
<text  x="353.06" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one (20,650,619 samples, 53.79%)</title><rect x="168.4" y="1861" width="634.8" height="15.0" fill="rgb(217,45,4)" rx="2" ry="2" />
<text  x="171.39" y="1871.5" >boost::asio::detail::scheduler::do_run_one</text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::consume (175,630 samples, 0.46%)</title><rect x="721.3" y="1285" width="5.4" height="15.0" fill="rgb(237,9,52)" rx="2" ry="2" />
<text  x="724.29" y="1295.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9,135 samples, 0.02%)</title><rect x="168.4" y="1621" width="0.3" height="15.0" fill="rgb(230,122,29)" rx="2" ry="2" />
<text  x="171.39" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,135 samples, 0.02%)</title><rect x="168.4" y="1797" width="0.3" height="15.0" fill="rgb(221,36,52)" rx="2" ry="2" />
<text  x="171.39" y="1807.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::const_iterator (271,965 samples, 0.71%)</title><rect x="443.9" y="741" width="8.4" height="15.0" fill="rgb(220,136,15)" rx="2" ry="2" />
<text  x="446.93" y="751.5" ></text>
</g>
<g >
<title>boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt;::setup (929,233 samples, 2.42%)</title><rect x="549.8" y="581" width="28.5" height="15.0" fill="rgb(252,165,43)" rx="2" ry="2" />
<text  x="552.77" y="591.5" >bo..</text>
</g>
<g >
<title>game_server (38,382,354 samples, 99.98%)</title><rect x="10.0" y="2069" width="1179.8" height="15.0" fill="rgb(233,12,38)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >game_server</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="645" width="6.9" height="15.0" fill="rgb(217,139,40)" rx="2" ry="2" />
<text  x="839.05" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::assign (199,055 samples, 0.52%)</title><rect x="843.0" y="1861" width="6.1" height="15.0" fill="rgb(225,198,4)" rx="2" ry="2" />
<text  x="845.97" y="1871.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (102,347 samples, 0.27%)</title><rect x="91.6" y="1813" width="3.2" height="15.0" fill="rgb(227,107,47)" rx="2" ry="2" />
<text  x="94.62" y="1823.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (199,763 samples, 0.52%)</title><rect x="23.9" y="1877" width="6.2" height="15.0" fill="rgb(213,74,50)" rx="2" ry="2" />
<text  x="26.92" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::buffers_prefix&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="485" width="20.8" height="15.0" fill="rgb(232,175,3)" rx="2" ry="2" />
<text  x="581.34" y="495.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_array&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1829" width="6.1" height="15.0" fill="rgb(219,214,13)" rx="2" ry="2" />
<text  x="818.40" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1525" width="11.6" height="15.0" fill="rgb(227,196,41)" rx="2" ry="2" />
<text  x="1016.30" y="1535.5" ></text>
</g>
<g >
<title>tcp_rcv_established (199,055 samples, 0.52%)</title><rect x="526.3" y="485" width="6.1" height="15.0" fill="rgb(217,81,22)" rx="2" ry="2" />
<text  x="529.32" y="495.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (386,584 samples, 1.01%)</title><rect x="912.9" y="1845" width="11.9" height="15.0" fill="rgb(251,68,34)" rx="2" ry="2" />
<text  x="915.93" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::epoll_reactor (198,769 samples, 0.52%)</title><rect x="809.3" y="1845" width="6.1" height="15.0" fill="rgb(242,57,8)" rx="2" ry="2" />
<text  x="812.29" y="1855.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1973" width="635.7" height="15.0" fill="rgb(246,204,41)" rx="2" ry="2" />
<text  x="170.50" y="1983.5" >std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>boost::json::parser::write_some (198,372 samples, 0.52%)</title><rect x="815.4" y="1925" width="6.1" height="15.0" fill="rgb(213,212,4)" rx="2" ry="2" />
<text  x="818.40" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (606,765 samples, 1.58%)</title><rect x="1056.4" y="2021" width="18.6" height="15.0" fill="rgb(211,33,3)" rx="2" ry="2" />
<text  x="1059.37" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (109,135 samples, 0.28%)</title><rect x="726.7" y="1749" width="3.3" height="15.0" fill="rgb(244,27,9)" rx="2" ry="2" />
<text  x="729.69" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="837" width="6.9" height="15.0" fill="rgb(253,8,17)" rx="2" ry="2" />
<text  x="1027.92" y="847.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (731,150 samples, 1.90%)</title><rect x="888.1" y="1285" width="22.5" height="15.0" fill="rgb(217,11,21)" rx="2" ry="2" />
<text  x="891.14" y="1295.5" >h..</text>
</g>
<g >
<title>boost::beast::http::detail::basic_parser_base::parse_field (245,495 samples, 0.64%)</title><rect x="630.8" y="1173" width="7.5" height="15.0" fill="rgb(234,204,15)" rx="2" ry="2" />
<text  x="633.78" y="1183.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1557" width="17.4" height="15.0" fill="rgb(218,3,52)" rx="2" ry="2" />
<text  x="998.94" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (788,165 samples, 2.05%)</title><rect x="778.9" y="1829" width="24.3" height="15.0" fill="rgb(216,83,1)" rx="2" ry="2" />
<text  x="781.93" y="1839.5" >e..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (239,731 samples, 0.62%)</title><rect x="880.8" y="1829" width="7.3" height="15.0" fill="rgb(238,45,15)" rx="2" ry="2" />
<text  x="883.77" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::async_write_some_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="853" width="12.0" height="15.0" fill="rgb(209,207,7)" rx="2" ry="2" />
<text  x="1163.49" y="863.5" ></text>
</g>
<g >
<title>sock_close (199,055 samples, 0.52%)</title><rect x="526.3" y="965" width="6.1" height="15.0" fill="rgb(233,61,32)" rx="2" ry="2" />
<text  x="529.32" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (57,179 samples, 0.15%)</title><rect x="168.7" y="1733" width="1.7" height="15.0" fill="rgb(214,6,33)" rx="2" ry="2" />
<text  x="171.67" y="1743.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (377,915 samples, 0.98%)</title><rect x="1013.3" y="293" width="11.6" height="15.0" fill="rgb(214,99,29)" rx="2" ry="2" />
<text  x="1016.30" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1925" width="6.2" height="15.0" fill="rgb(236,176,17)" rx="2" ry="2" />
<text  x="45.34" y="1935.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment::operator (322,937 samples, 0.84%)</title><rect x="568.4" y="421" width="9.9" height="15.0" fill="rgb(253,148,22)" rx="2" ry="2" />
<text  x="571.41" y="431.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (731,150 samples, 1.90%)</title><rect x="888.1" y="1717" width="22.5" height="15.0" fill="rgb(218,1,12)" rx="2" ry="2" />
<text  x="891.14" y="1727.5" >b..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_read_op::operator (245,495 samples, 0.64%)</title><rect x="623.2" y="1173" width="7.6" height="15.0" fill="rgb(224,153,23)" rx="2" ry="2" />
<text  x="626.24" y="1183.5" ></text>
</g>
<g >
<title>boost::beast::stable_async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (463,204 samples, 1.21%)</title><rect x="609.0" y="1125" width="14.2" height="15.0" fill="rgb(215,166,39)" rx="2" ry="2" />
<text  x="612.00" y="1135.5" ></text>
</g>
<g >
<title>wake_up_q (20,733 samples, 0.05%)</title><rect x="159.9" y="1941" width="0.6" height="15.0" fill="rgb(208,39,10)" rx="2" ry="2" />
<text  x="162.90" y="1951.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1413" width="14.5" height="15.0" fill="rgb(226,123,27)" rx="2" ry="2" />
<text  x="831.53" y="1423.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::wake_one_thread_and_unlock (57,179 samples, 0.15%)</title><rect x="168.7" y="1845" width="1.7" height="15.0" fill="rgb(229,87,37)" rx="2" ry="2" />
<text  x="171.67" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1637" width="13.7" height="15.0" fill="rgb(215,146,17)" rx="2" ry="2" />
<text  x="427.11" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (398,423 samples, 1.04%)</title><rect x="868.5" y="1589" width="12.3" height="15.0" fill="rgb(239,224,24)" rx="2" ry="2" />
<text  x="871.52" y="1599.5" ></text>
</g>
<g >
<title>sock_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="485" width="11.2" height="15.0" fill="rgb(207,189,45)" rx="2" ry="2" />
<text  x="1175.49" y="495.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::set_target_impl (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1093" width="33.2" height="15.0" fill="rgb(246,139,43)" rx="2" ry="2" />
<text  x="379.10" y="1103.5" >bo..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1653" width="11.2" height="15.0" fill="rgb(252,74,43)" rx="2" ry="2" />
<text  x="1175.49" y="1663.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;4ul&gt;::call&lt;0ul, boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::increment&gt; (322,937 samples, 0.84%)</title><rect x="568.4" y="501" width="9.9" height="15.0" fill="rgb(223,7,6)" rx="2" ry="2" />
<text  x="571.41" y="511.5" ></text>
</g>
<g >
<title>do_timerfd_settime (276,821 samples, 0.72%)</title><rect x="303.9" y="933" width="8.5" height="15.0" fill="rgb(210,13,29)" rx="2" ry="2" />
<text  x="306.86" y="943.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (199,055 samples, 0.52%)</title><rect x="104.4" y="1845" width="6.1" height="15.0" fill="rgb(232,209,28)" rx="2" ry="2" />
<text  x="107.38" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="261" width="6.9" height="15.0" fill="rgb(235,182,0)" rx="2" ry="2" />
<text  x="1027.92" y="271.5" ></text>
</g>
<g >
<title>mmap64 (606,765 samples, 1.58%)</title><rect x="1056.4" y="2053" width="18.6" height="15.0" fill="rgb(252,39,21)" rx="2" ry="2" />
<text  x="1059.37" y="2063.5" ></text>
</g>
<g >
<title>ret_from_fork (30,285 samples, 0.08%)</title><rect x="90.7" y="2021" width="0.9" height="15.0" fill="rgb(250,98,40)" rx="2" ry="2" />
<text  x="93.69" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1477" width="14.5" height="15.0" fill="rgb(212,37,29)" rx="2" ry="2" />
<text  x="831.53" y="1487.5" ></text>
</g>
<g >
<title>__do_page_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1957" width="6.1" height="15.0" fill="rgb(237,29,4)" rx="2" ry="2" />
<text  x="70.21" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (364,717 samples, 0.95%)</title><rect x="1172.5" y="149" width="11.2" height="15.0" fill="rgb(241,33,1)" rx="2" ry="2" />
<text  x="1175.49" y="159.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_msg_op::operator (271,965 samples, 0.71%)</title><rect x="443.9" y="1077" width="8.4" height="15.0" fill="rgb(223,51,3)" rx="2" ry="2" />
<text  x="446.93" y="1087.5" ></text>
</g>
<g >
<title>boost::optional&lt;boost::asio::any_io_executor&gt;::optional (252,217 samples, 0.66%)</title><rect x="270.2" y="1717" width="7.8" height="15.0" fill="rgb(225,85,42)" rx="2" ry="2" />
<text  x="273.25" y="1727.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1413" width="11.2" height="15.0" fill="rgb(209,13,31)" rx="2" ry="2" />
<text  x="1175.49" y="1423.5" ></text>
</g>
<g >
<title>handle_mm_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="1957" width="7.2" height="15.0" fill="rgb(210,202,20)" rx="2" ry="2" />
<text  x="977.02" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (109,135 samples, 0.28%)</title><rect x="726.7" y="1701" width="3.3" height="15.0" fill="rgb(232,215,27)" rx="2" ry="2" />
<text  x="729.69" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::jthread, std::allocator&lt;std::jthread&gt; &gt;::emplace_back&lt;main::{lambda (199,120 samples, 0.52%)</title><rect x="956.9" y="2021" width="6.1" height="15.0" fill="rgb(235,208,30)" rx="2" ry="2" />
<text  x="959.86" y="2031.5" ></text>
</g>
<g >
<title>unmap_region (199,763 samples, 0.52%)</title><rect x="23.9" y="1925" width="6.2" height="15.0" fill="rgb(231,195,15)" rx="2" ry="2" />
<text  x="26.92" y="1935.5" ></text>
</g>
<g >
<title>main::{lambda (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1013" width="68.8" height="15.0" fill="rgb(219,110,24)" rx="2" ry="2" />
<text  x="543.19" y="1023.5" >main::{..</text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (731,150 samples, 1.90%)</title><rect x="888.1" y="1685" width="22.5" height="15.0" fill="rgb(230,185,9)" rx="2" ry="2" />
<text  x="891.14" y="1695.5" >b..</text>
</g>
<g >
<title>arch_irq_work_raise (237,370 samples, 0.62%)</title><rect x="111.5" y="1797" width="7.3" height="15.0" fill="rgb(224,161,26)" rx="2" ry="2" />
<text  x="114.46" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (398,423 samples, 1.04%)</title><rect x="868.5" y="1653" width="12.3" height="15.0" fill="rgb(245,83,34)" rx="2" ry="2" />
<text  x="871.52" y="1663.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1509" width="14.5" height="15.0" fill="rgb(210,144,53)" rx="2" ry="2" />
<text  x="831.53" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (83,662 samples, 0.22%)</title><rect x="924.8" y="1845" width="2.6" height="15.0" fill="rgb(235,56,2)" rx="2" ry="2" />
<text  x="927.81" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="853" width="8.4" height="15.0" fill="rgb(221,94,16)" rx="2" ry="2" />
<text  x="446.93" y="863.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (83,662 samples, 0.22%)</title><rect x="924.8" y="1861" width="2.6" height="15.0" fill="rgb(214,25,52)" rx="2" ry="2" />
<text  x="927.81" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1957" width="17.4" height="15.0" fill="rgb(207,203,27)" rx="2" ry="2" />
<text  x="998.94" y="1967.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1989" width="11.6" height="15.0" fill="rgb(221,193,28)" rx="2" ry="2" />
<text  x="1016.30" y="1999.5" ></text>
</g>
<g >
<title>sock_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="565" width="11.6" height="15.0" fill="rgb(225,1,7)" rx="2" ry="2" />
<text  x="1016.30" y="575.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_read_some&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="181" width="6.9" height="15.0" fill="rgb(220,155,17)" rx="2" ry="2" />
<text  x="1027.92" y="191.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Run (224,219 samples, 0.58%)</title><rect x="1024.9" y="1397" width="6.9" height="15.0" fill="rgb(212,220,43)" rx="2" ry="2" />
<text  x="1027.92" y="1407.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::any_executor (245,495 samples, 0.64%)</title><rect x="707.4" y="1733" width="7.6" height="15.0" fill="rgb(222,80,54)" rx="2" ry="2" />
<text  x="710.45" y="1743.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1525" width="14.5" height="15.0" fill="rgb(236,176,47)" rx="2" ry="2" />
<text  x="831.53" y="1535.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1349" width="163.7" height="15.0" fill="rgb(222,208,54)" rx="2" ry="2" />
<text  x="543.19" y="1359.5" >boost::beast::asio_ha..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1109" width="8.4" height="15.0" fill="rgb(229,194,51)" rx="2" ry="2" />
<text  x="446.93" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1813" width="6.9" height="15.0" fill="rgb(252,212,32)" rx="2" ry="2" />
<text  x="1027.92" y="1823.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnRead (271,965 samples, 0.71%)</title><rect x="443.9" y="1221" width="8.4" height="15.0" fill="rgb(248,219,2)" rx="2" ry="2" />
<text  x="446.93" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (364,717 samples, 0.95%)</title><rect x="1172.5" y="645" width="11.2" height="15.0" fill="rgb(241,171,45)" rx="2" ry="2" />
<text  x="1175.49" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_perform (244,735 samples, 0.64%)</title><rect x="828.5" y="1205" width="7.6" height="15.0" fill="rgb(232,10,5)" rx="2" ry="2" />
<text  x="831.53" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (165,800 samples, 0.43%)</title><rect x="912.9" y="1237" width="5.1" height="15.0" fill="rgb(243,213,33)" rx="2" ry="2" />
<text  x="915.93" y="1247.5" ></text>
</g>
<g >
<title>do_IRQ (244,735 samples, 0.64%)</title><rect x="828.5" y="1157" width="7.6" height="15.0" fill="rgb(207,148,40)" rx="2" ry="2" />
<text  x="831.53" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1093" width="8.4" height="15.0" fill="rgb(208,178,22)" rx="2" ry="2" />
<text  x="446.93" y="1103.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::emplace&lt;1ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator&gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="725" width="8.4" height="15.0" fill="rgb(229,109,6)" rx="2" ry="2" />
<text  x="446.93" y="735.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="725" width="11.2" height="15.0" fill="rgb(234,178,20)" rx="2" ry="2" />
<text  x="1175.49" y="735.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1717" width="11.6" height="15.0" fill="rgb(243,159,33)" rx="2" ry="2" />
<text  x="1016.30" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1973" width="11.6" height="15.0" fill="rgb(210,212,30)" rx="2" ry="2" />
<text  x="1016.30" y="1983.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1637" width="11.2" height="15.0" fill="rgb(233,220,2)" rx="2" ry="2" />
<text  x="1175.49" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt; (503,901 samples, 1.31%)</title><rect x="321.0" y="1029" width="15.5" height="15.0" fill="rgb(223,129,34)" rx="2" ry="2" />
<text  x="324.04" y="1039.5" ></text>
</g>
<g >
<title>_dl_relocate_object (599,101 samples, 1.56%)</title><rect x="54.9" y="2005" width="18.4" height="15.0" fill="rgb(235,76,9)" rx="2" ry="2" />
<text  x="57.93" y="2015.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::put (199,368 samples, 0.52%)</title><rect x="868.5" y="1285" width="6.1" height="15.0" fill="rgb(223,101,9)" rx="2" ry="2" />
<text  x="871.52" y="1295.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::any_executor (165,800 samples, 0.43%)</title><rect x="912.9" y="1077" width="5.1" height="15.0" fill="rgb(215,116,25)" rx="2" ry="2" />
<text  x="915.93" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::close (733,234 samples, 1.91%)</title><rect x="517.7" y="1109" width="22.5" height="15.0" fill="rgb(221,116,50)" rx="2" ry="2" />
<text  x="520.66" y="1119.5" >b..</text>
</g>
<g >
<title>boost::json::object::find (198,555 samples, 0.52%)</title><rect x="821.5" y="1861" width="6.1" height="15.0" fill="rgb(242,164,51)" rx="2" ry="2" />
<text  x="824.50" y="1871.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (276,821 samples, 0.72%)</title><rect x="303.9" y="885" width="8.5" height="15.0" fill="rgb(212,78,28)" rx="2" ry="2" />
<text  x="306.86" y="895.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1573" width="14.5" height="15.0" fill="rgb(206,215,27)" rx="2" ry="2" />
<text  x="831.53" y="1583.5" ></text>
</g>
<g >
<title>__ip_finish_output (564,935 samples, 1.47%)</title><rect x="995.9" y="213" width="17.4" height="15.0" fill="rgb(245,58,29)" rx="2" ry="2" />
<text  x="998.94" y="223.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1461" width="6.1" height="15.0" fill="rgb(243,30,22)" rx="2" ry="2" />
<text  x="871.52" y="1471.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1669" width="11.2" height="15.0" fill="rgb(231,210,18)" rx="2" ry="2" />
<text  x="1175.49" y="1679.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (364,717 samples, 0.95%)</title><rect x="1172.5" y="53" width="11.2" height="15.0" fill="rgb(219,186,4)" rx="2" ry="2" />
<text  x="1175.49" y="63.5" ></text>
</g>
<g >
<title>boost::asio::detail::signal_set_service::signal_set_service (198,769 samples, 0.52%)</title><rect x="809.3" y="1925" width="6.1" height="15.0" fill="rgb(222,131,48)" rx="2" ry="2" />
<text  x="812.29" y="1935.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1717" width="11.2" height="15.0" fill="rgb(211,158,47)" rx="2" ry="2" />
<text  x="1175.49" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (390,290 samples, 1.02%)</title><rect x="1160.5" y="1685" width="12.0" height="15.0" fill="rgb(227,173,21)" rx="2" ry="2" />
<text  x="1163.49" y="1695.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1557" width="13.7" height="15.0" fill="rgb(234,69,31)" rx="2" ry="2" />
<text  x="427.11" y="1567.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::prefer&lt;boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (75,343 samples, 0.20%)</title><rect x="910.6" y="1797" width="2.3" height="15.0" fill="rgb(209,157,16)" rx="2" ry="2" />
<text  x="913.61" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1525" width="12.0" height="15.0" fill="rgb(227,224,29)" rx="2" ry="2" />
<text  x="1163.49" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1221" width="13.7" height="15.0" fill="rgb(237,40,27)" rx="2" ry="2" />
<text  x="427.11" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::io_context::run (224,219 samples, 0.58%)</title><rect x="1024.9" y="2053" width="6.9" height="15.0" fill="rgb(215,207,9)" rx="2" ry="2" />
<text  x="1027.92" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1477" width="11.9" height="15.0" fill="rgb(250,142,12)" rx="2" ry="2" />
<text  x="915.93" y="1487.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Run (225,146 samples, 0.59%)</title><rect x="836.1" y="1349" width="6.9" height="15.0" fill="rgb(208,128,7)" rx="2" ry="2" />
<text  x="839.05" y="1359.5" ></text>
</g>
<g >
<title>do_mmap (102,347 samples, 0.27%)</title><rect x="91.6" y="1893" width="3.2" height="15.0" fill="rgb(219,90,54)" rx="2" ry="2" />
<text  x="94.62" y="1903.5" ></text>
</g>
<g >
<title>std::addressof&lt;boost::asio::const_buffer const&gt; (311,653 samples, 0.81%)</title><rect x="540.2" y="469" width="9.6" height="15.0" fill="rgb(216,206,7)" rx="2" ry="2" />
<text  x="543.19" y="479.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="933" width="8.4" height="15.0" fill="rgb(214,150,2)" rx="2" ry="2" />
<text  x="446.93" y="943.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="709" width="12.3" height="15.0" fill="rgb(212,79,49)" rx="2" ry="2" />
<text  x="210.71" y="719.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="773" width="11.6" height="15.0" fill="rgb(212,218,46)" rx="2" ry="2" />
<text  x="1016.30" y="783.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="725" width="6.9" height="15.0" fill="rgb(242,156,12)" rx="2" ry="2" />
<text  x="839.05" y="735.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (731,150 samples, 1.90%)</title><rect x="888.1" y="1893" width="22.5" height="15.0" fill="rgb(230,128,27)" rx="2" ry="2" />
<text  x="891.14" y="1903.5" >b..</text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::buffers_suffix&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&amp;&gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="789" width="8.4" height="15.0" fill="rgb(253,22,34)" rx="2" ry="2" />
<text  x="446.93" y="799.5" ></text>
</g>
<g >
<title>tcp_push (564,935 samples, 1.47%)</title><rect x="995.9" y="357" width="17.4" height="15.0" fill="rgb(226,133,45)" rx="2" ry="2" />
<text  x="998.94" y="367.5" ></text>
</g>
<g >
<title>boost::asio::detail::service_registry::use_service&lt;boost::asio::detail::signal_set_service&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="1973" width="6.1" height="15.0" fill="rgb(211,11,6)" rx="2" ry="2" />
<text  x="812.29" y="1983.5" ></text>
</g>
<g >
<title>main::{lambda (390,290 samples, 1.02%)</title><rect x="1160.5" y="2021" width="12.0" height="15.0" fill="rgb(227,146,10)" rx="2" ry="2" />
<text  x="1163.49" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;model::Office  (198,555 samples, 0.52%)</title><rect x="821.5" y="1957" width="6.1" height="15.0" fill="rgb(226,119,48)" rx="2" ry="2" />
<text  x="824.50" y="1967.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1445" width="6.9" height="15.0" fill="rgb(234,87,53)" rx="2" ry="2" />
<text  x="1027.92" y="1455.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::copy_object&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="645" width="13.7" height="15.0" fill="rgb(225,114,2)" rx="2" ry="2" />
<text  x="427.11" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1301" width="13.7" height="15.0" fill="rgb(253,29,26)" rx="2" ry="2" />
<text  x="427.11" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (386,584 samples, 1.01%)</title><rect x="912.9" y="1669" width="11.9" height="15.0" fill="rgb(249,192,8)" rx="2" ry="2" />
<text  x="915.93" y="1679.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnRead (364,717 samples, 0.95%)</title><rect x="1172.5" y="1317" width="11.2" height="15.0" fill="rgb(237,0,19)" rx="2" ry="2" />
<text  x="1175.49" y="1327.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (2,780,498 samples, 7.24%)</title><rect x="1075.0" y="2053" width="85.5" height="15.0" fill="rgb(220,64,35)" rx="2" ry="2" />
<text  x="1078.02" y="2063.5" >pthread_co..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1941" width="12.0" height="15.0" fill="rgb(227,12,47)" rx="2" ry="2" />
<text  x="1163.49" y="1951.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnRead (564,935 samples, 1.47%)</title><rect x="995.9" y="1253" width="17.4" height="15.0" fill="rgb(222,223,30)" rx="2" ry="2" />
<text  x="998.94" y="1263.5" ></text>
</g>
<g >
<title>free_pgtables (200,583 samples, 0.52%)</title><rect x="1056.4" y="1893" width="6.1" height="15.0" fill="rgb(233,2,52)" rx="2" ry="2" />
<text  x="1059.37" y="1903.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1301" width="17.4" height="15.0" fill="rgb(251,68,17)" rx="2" ry="2" />
<text  x="998.94" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="725" width="17.4" height="15.0" fill="rgb(247,17,23)" rx="2" ry="2" />
<text  x="998.94" y="735.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="533" width="6.9" height="15.0" fill="rgb(224,180,38)" rx="2" ry="2" />
<text  x="839.05" y="543.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="709" width="6.9" height="15.0" fill="rgb(214,10,52)" rx="2" ry="2" />
<text  x="1027.92" y="719.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1461" width="17.4" height="15.0" fill="rgb(235,3,47)" rx="2" ry="2" />
<text  x="998.94" y="1471.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (9,135 samples, 0.02%)</title><rect x="168.4" y="1637" width="0.3" height="15.0" fill="rgb(210,227,9)" rx="2" ry="2" />
<text  x="171.39" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1685" width="50.4" height="15.0" fill="rgb(244,209,12)" rx="2" ry="2" />
<text  x="197.29" y="1695.5" >boost..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1877" width="6.9" height="15.0" fill="rgb(216,219,20)" rx="2" ry="2" />
<text  x="1027.92" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (364,717 samples, 0.95%)</title><rect x="1172.5" y="325" width="11.2" height="15.0" fill="rgb(209,108,36)" rx="2" ry="2" />
<text  x="1175.49" y="335.5" ></text>
</g>
<g >
<title>ip_finish_output2 (199,055 samples, 0.52%)</title><rect x="526.3" y="741" width="6.1" height="15.0" fill="rgb(220,139,19)" rx="2" ry="2" />
<text  x="529.32" y="751.5" ></text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::const_iterator::operator++ (175,630 samples, 0.46%)</title><rect x="721.3" y="1221" width="5.4" height="15.0" fill="rgb(245,71,42)" rx="2" ry="2" />
<text  x="724.29" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::any_io_executor&gt;::async_wait&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt; &gt; (1,062,684 samples, 2.77%)</title><rect x="303.9" y="1093" width="32.6" height="15.0" fill="rgb(235,30,45)" rx="2" ry="2" />
<text  x="306.86" y="1103.5" >bo..</text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1317" width="14.5" height="15.0" fill="rgb(247,185,48)" rx="2" ry="2" />
<text  x="446.93" y="1327.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (2,701,516 samples, 7.04%)</title><rect x="540.2" y="1189" width="83.0" height="15.0" fill="rgb(254,127,20)" rx="2" ry="2" />
<text  x="543.19" y="1199.5" >boost::be..</text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;4ul, boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::dereference&gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="389" width="20.8" height="15.0" fill="rgb(234,85,3)" rx="2" ry="2" />
<text  x="581.34" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (9,135 samples, 0.02%)</title><rect x="168.4" y="1669" width="0.3" height="15.0" fill="rgb(213,213,16)" rx="2" ry="2" />
<text  x="171.39" y="1679.5" ></text>
</g>
<g >
<title>perf_event_mmap (21,932 samples, 0.06%)</title><rect x="94.8" y="1909" width="0.6" height="15.0" fill="rgb(253,126,52)" rx="2" ry="2" />
<text  x="97.77" y="1919.5" ></text>
</g>
<g >
<title>http_handler::RequestHandler::operator (2,238,312 samples, 5.83%)</title><rect x="540.2" y="997" width="68.8" height="15.0" fill="rgb(247,81,47)" rx="2" ry="2" />
<text  x="543.19" y="1007.5" >http_ha..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (175,630 samples, 0.46%)</title><rect x="721.3" y="1589" width="5.4" height="15.0" fill="rgb(239,134,34)" rx="2" ry="2" />
<text  x="724.29" y="1599.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1461" width="12.0" height="15.0" fill="rgb(232,108,54)" rx="2" ry="2" />
<text  x="1163.49" y="1471.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1749" width="6.9" height="15.0" fill="rgb(206,94,40)" rx="2" ry="2" />
<text  x="1027.92" y="1759.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1237" width="126.5" height="15.0" fill="rgb(232,191,18)" rx="2" ry="2" />
<text  x="285.81" y="1247.5" >boost::beast::a..</text>
</g>
<g >
<title>boost::beast::detail::asio_handler_deallocate (632,043 samples, 1.65%)</title><rect x="849.1" y="1845" width="19.4" height="15.0" fill="rgb(214,169,34)" rx="2" ry="2" />
<text  x="852.09" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1365" width="6.1" height="15.0" fill="rgb(229,120,16)" rx="2" ry="2" />
<text  x="871.52" y="1375.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1205" width="6.9" height="15.0" fill="rgb(229,192,46)" rx="2" ry="2" />
<text  x="1027.92" y="1215.5" ></text>
</g>
<g >
<title>handle_mm_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1925" width="6.1" height="15.0" fill="rgb(239,91,20)" rx="2" ry="2" />
<text  x="70.21" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (199,055 samples, 0.52%)</title><rect x="526.3" y="805" width="6.1" height="15.0" fill="rgb(246,97,47)" rx="2" ry="2" />
<text  x="529.32" y="815.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="613" width="12.3" height="15.0" fill="rgb(205,113,12)" rx="2" ry="2" />
<text  x="210.71" y="623.5" ></text>
</g>
<g >
<title>__sock_release (199,055 samples, 0.52%)</title><rect x="526.3" y="949" width="6.1" height="15.0" fill="rgb(208,64,30)" rx="2" ry="2" />
<text  x="529.32" y="959.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1605" width="11.2" height="15.0" fill="rgb(249,109,34)" rx="2" ry="2" />
<text  x="1175.49" y="1615.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Run (398,295 samples, 1.04%)</title><rect x="207.7" y="1237" width="12.3" height="15.0" fill="rgb(247,119,45)" rx="2" ry="2" />
<text  x="210.71" y="1247.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1637" width="131.3" height="15.0" fill="rgb(238,228,27)" rx="2" ry="2" />
<text  x="281.00" y="1647.5" >boost_asio_execu..</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (199,055 samples, 0.52%)</title><rect x="207.7" y="501" width="6.1" height="15.0" fill="rgb(209,74,0)" rx="2" ry="2" />
<text  x="210.71" y="511.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::move_object&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (379,246 samples, 0.99%)</title><rect x="732.2" y="1733" width="11.7" height="15.0" fill="rgb(215,5,3)" rx="2" ry="2" />
<text  x="735.19" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1493" width="44.3" height="15.0" fill="rgb(253,157,34)" rx="2" ry="2" />
<text  x="203.41" y="1503.5" >boos..</text>
</g>
<g >
<title>do_softirq_own_stack (390,290 samples, 1.02%)</title><rect x="1160.5" y="53" width="12.0" height="15.0" fill="rgb(218,219,54)" rx="2" ry="2" />
<text  x="1163.49" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (377,915 samples, 0.98%)</title><rect x="1013.3" y="117" width="11.6" height="15.0" fill="rgb(229,221,43)" rx="2" ry="2" />
<text  x="1016.30" y="127.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (6,174,371 samples, 16.08%)</title><rect x="517.7" y="1605" width="189.7" height="15.0" fill="rgb(210,115,26)" rx="2" ry="2" />
<text  x="520.66" y="1615.5" >boost::asio::detail::str..</text>
</g>
<g >
<title>deactivate_task (1,345,894 samples, 3.51%)</title><rect x="104.4" y="1893" width="41.4" height="15.0" fill="rgb(233,20,38)" rx="2" ry="2" />
<text  x="107.38" y="1903.5" >dea..</text>
</g>
<g >
<title>do_futex (2,780,498 samples, 7.24%)</title><rect x="1075.0" y="1989" width="85.5" height="15.0" fill="rgb(234,169,24)" rx="2" ry="2" />
<text  x="1078.02" y="1999.5" >do_futex</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (731,150 samples, 1.90%)</title><rect x="888.1" y="1845" width="22.5" height="15.0" fill="rgb(224,52,35)" rx="2" ry="2" />
<text  x="891.14" y="1855.5" >b..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (252,217 samples, 0.66%)</title><rect x="532.4" y="1061" width="7.8" height="15.0" fill="rgb(230,225,3)" rx="2" ry="2" />
<text  x="535.44" y="1071.5" ></text>
</g>
<g >
<title>_dl_fixup (199,756 samples, 0.52%)</title><rect x="17.8" y="2037" width="6.1" height="15.0" fill="rgb(241,111,20)" rx="2" ry="2" />
<text  x="20.78" y="2047.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1621" width="131.3" height="15.0" fill="rgb(224,108,44)" rx="2" ry="2" />
<text  x="281.00" y="1631.5" >boost::asio::io_..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1717" width="17.4" height="15.0" fill="rgb(232,184,16)" rx="2" ry="2" />
<text  x="998.94" y="1727.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnWrite (445,208 samples, 1.16%)</title><rect x="424.1" y="1365" width="13.7" height="15.0" fill="rgb(228,154,35)" rx="2" ry="2" />
<text  x="427.11" y="1375.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1061" width="17.4" height="15.0" fill="rgb(209,110,38)" rx="2" ry="2" />
<text  x="998.94" y="1071.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1253" width="126.5" height="15.0" fill="rgb(206,197,24)" rx="2" ry="2" />
<text  x="285.81" y="1263.5" >boost::beast::b..</text>
</g>
<g >
<title>x86_pmu_enable (30,285 samples, 0.08%)</title><rect x="90.7" y="1941" width="0.9" height="15.0" fill="rgb(218,177,7)" rx="2" ry="2" />
<text  x="93.69" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (398,423 samples, 1.04%)</title><rect x="868.5" y="1669" width="12.3" height="15.0" fill="rgb(210,176,53)" rx="2" ry="2" />
<text  x="871.52" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1397" width="5.1" height="15.0" fill="rgb(207,6,0)" rx="2" ry="2" />
<text  x="915.93" y="1407.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1509" width="20.6" height="15.0" fill="rgb(210,116,51)" rx="2" ry="2" />
<text  x="440.79" y="1519.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1445" width="17.4" height="15.0" fill="rgb(247,94,29)" rx="2" ry="2" />
<text  x="998.94" y="1455.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_op::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1157" width="11.6" height="15.0" fill="rgb(246,220,21)" rx="2" ry="2" />
<text  x="1016.30" y="1167.5" ></text>
</g>
<g >
<title>schedule_tail (30,285 samples, 0.08%)</title><rect x="90.7" y="2005" width="0.9" height="15.0" fill="rgb(219,134,49)" rx="2" ry="2" />
<text  x="93.69" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send (564,935 samples, 1.47%)</title><rect x="995.9" y="549" width="17.4" height="15.0" fill="rgb(236,24,42)" rx="2" ry="2" />
<text  x="998.94" y="559.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_move_accept_op&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (199,120 samples, 0.52%)</title><rect x="264.1" y="1781" width="6.1" height="15.0" fill="rgb(224,132,2)" rx="2" ry="2" />
<text  x="267.13" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (75,343 samples, 0.20%)</title><rect x="910.6" y="1861" width="2.3" height="15.0" fill="rgb(247,65,21)" rx="2" ry="2" />
<text  x="913.61" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="1141" width="12.3" height="15.0" fill="rgb(247,101,27)" rx="2" ry="2" />
<text  x="210.71" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="821" width="12.3" height="15.0" fill="rgb(253,126,1)" rx="2" ry="2" />
<text  x="210.71" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (199,055 samples, 0.52%)</title><rect x="526.3" y="613" width="6.1" height="15.0" fill="rgb(252,30,44)" rx="2" ry="2" />
<text  x="529.32" y="623.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="965" width="58.9" height="15.0" fill="rgb(213,23,19)" rx="2" ry="2" />
<text  x="543.19" y="975.5" >http_s..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1733" width="11.9" height="15.0" fill="rgb(228,2,40)" rx="2" ry="2" />
<text  x="915.93" y="1743.5" ></text>
</g>
<g >
<title>__x64_sys_accept (606,296 samples, 1.58%)</title><rect x="171.6" y="1685" width="18.6" height="15.0" fill="rgb(244,225,51)" rx="2" ry="2" />
<text  x="174.57" y="1695.5" ></text>
</g>
<g >
<title>__x64_sys_execve (5,883 samples, 0.02%)</title><rect x="1189.8" y="2005" width="0.2" height="15.0" fill="rgb(244,82,48)" rx="2" ry="2" />
<text  x="1192.82" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::recycling_allocator&lt;void, boost::asio::detail::thread_info_base::default_tag&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (364,717 samples, 0.95%)</title><rect x="1172.5" y="1925" width="11.2" height="15.0" fill="rgb(236,155,12)" rx="2" ry="2" />
<text  x="1175.49" y="1935.5" ></text>
</g>
<g >
<title>inet_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="469" width="11.2" height="15.0" fill="rgb(210,31,9)" rx="2" ry="2" />
<text  x="1175.49" y="479.5" ></text>
</g>
<g >
<title>update_load_avg (144,113 samples, 0.38%)</title><rect x="1126.3" y="1877" width="4.4" height="15.0" fill="rgb(223,157,32)" rx="2" ry="2" />
<text  x="1129.28" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1397" width="12.0" height="15.0" fill="rgb(226,163,28)" rx="2" ry="2" />
<text  x="1163.49" y="1407.5" ></text>
</g>
<g >
<title>boost::asio::async_compose&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1125" width="13.7" height="15.0" fill="rgb(208,33,12)" rx="2" ry="2" />
<text  x="427.11" y="1135.5" ></text>
</g>
<g >
<title>boost::beast::detail::tuple_impl&lt;boost::mp11::integer_sequence&lt;unsigned long, 0ul&gt;, std::shared_ptr&lt;http_server::SessionBase&gt; &gt;::~tuple_impl (731,150 samples, 1.90%)</title><rect x="888.1" y="1429" width="22.5" height="15.0" fill="rgb(252,142,44)" rx="2" ry="2" />
<text  x="891.14" y="1439.5" >b..</text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (75,343 samples, 0.20%)</title><rect x="910.6" y="1813" width="2.3" height="15.0" fill="rgb(217,220,39)" rx="2" ry="2" />
<text  x="913.61" y="1823.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1349" width="5.1" height="15.0" fill="rgb(241,77,29)" rx="2" ry="2" />
<text  x="915.93" y="1359.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1445" width="11.9" height="15.0" fill="rgb(231,131,2)" rx="2" ry="2" />
<text  x="915.93" y="1455.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_composed_op&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1077" width="13.7" height="15.0" fill="rgb(207,12,38)" rx="2" ry="2" />
<text  x="427.11" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1701" width="14.5" height="15.0" fill="rgb(216,199,54)" rx="2" ry="2" />
<text  x="831.53" y="1711.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1797" width="11.9" height="15.0" fill="rgb(231,29,53)" rx="2" ry="2" />
<text  x="915.93" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::buffer_sequence_begin&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="773" width="8.4" height="15.0" fill="rgb(250,3,21)" rx="2" ry="2" />
<text  x="446.93" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output (564,935 samples, 1.47%)</title><rect x="995.9" y="229" width="17.4" height="15.0" fill="rgb(229,187,23)" rx="2" ry="2" />
<text  x="998.94" y="239.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1717" width="12.3" height="15.0" fill="rgb(247,71,5)" rx="2" ry="2" />
<text  x="871.52" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1189" width="12.0" height="15.0" fill="rgb(224,216,29)" rx="2" ry="2" />
<text  x="1163.49" y="1199.5" ></text>
</g>
<g >
<title>record_times (20,733 samples, 0.05%)</title><rect x="159.9" y="1861" width="0.6" height="15.0" fill="rgb(243,50,0)" rx="2" ry="2" />
<text  x="162.90" y="1871.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="805" width="12.3" height="15.0" fill="rgb(240,172,5)" rx="2" ry="2" />
<text  x="210.71" y="815.5" ></text>
</g>
<g >
<title>ip_rcv (564,935 samples, 1.47%)</title><rect x="995.9" y="53" width="17.4" height="15.0" fill="rgb(231,126,24)" rx="2" ry="2" />
<text  x="998.94" y="63.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (364,717 samples, 0.95%)</title><rect x="1172.5" y="213" width="11.2" height="15.0" fill="rgb(231,108,29)" rx="2" ry="2" />
<text  x="1175.49" y="223.5" ></text>
</g>
<g >
<title>tcp_send_fin (731,150 samples, 1.90%)</title><rect x="888.1" y="1013" width="22.5" height="15.0" fill="rgb(240,154,19)" rx="2" ry="2" />
<text  x="891.14" y="1023.5" >t..</text>
</g>
<g >
<title>do_softirq_own_stack (564,935 samples, 1.47%)</title><rect x="995.9" y="149" width="17.4" height="15.0" fill="rgb(254,44,18)" rx="2" ry="2" />
<text  x="998.94" y="159.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (239,731 samples, 0.62%)</title><rect x="880.8" y="1861" width="7.3" height="15.0" fill="rgb(252,97,23)" rx="2" ry="2" />
<text  x="883.77" y="1871.5" ></text>
</g>
<g >
<title>tcp_fin (199,055 samples, 0.52%)</title><rect x="526.3" y="453" width="6.1" height="15.0" fill="rgb(248,18,5)" rx="2" ry="2" />
<text  x="529.32" y="463.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (57,179 samples, 0.15%)</title><rect x="168.7" y="1765" width="1.7" height="15.0" fill="rgb(227,5,33)" rx="2" ry="2" />
<text  x="171.67" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1525" width="13.7" height="15.0" fill="rgb(223,157,10)" rx="2" ry="2" />
<text  x="427.11" y="1535.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment::next&lt;3ul&gt; (322,937 samples, 0.84%)</title><rect x="568.4" y="405" width="9.9" height="15.0" fill="rgb(243,197,48)" rx="2" ry="2" />
<text  x="571.41" y="415.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::variant (606,296 samples, 1.58%)</title><rect x="549.8" y="421" width="18.6" height="15.0" fill="rgb(223,85,50)" rx="2" ry="2" />
<text  x="552.77" y="431.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::ptr::~ptr (109,135 samples, 0.28%)</title><rect x="726.7" y="1669" width="3.3" height="15.0" fill="rgb(225,85,20)" rx="2" ry="2" />
<text  x="729.69" y="1679.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1141" width="17.4" height="15.0" fill="rgb(243,115,44)" rx="2" ry="2" />
<text  x="998.94" y="1151.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="1301" width="11.2" height="15.0" fill="rgb(227,72,40)" rx="2" ry="2" />
<text  x="1175.49" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_some_op::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1045" width="11.6" height="15.0" fill="rgb(236,90,40)" rx="2" ry="2" />
<text  x="1016.30" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;http_server::Session&lt;main::{lambda (733,234 samples, 1.91%)</title><rect x="517.7" y="1205" width="22.5" height="15.0" fill="rgb(212,226,29)" rx="2" ry="2" />
<text  x="520.66" y="1215.5" >s..</text>
</g>
<g >
<title>syscall_return_via_sysret (13,581 samples, 0.04%)</title><rect x="160.9" y="2021" width="0.5" height="15.0" fill="rgb(231,3,47)" rx="2" ry="2" />
<text  x="163.95" y="2031.5" ></text>
</g>
<g >
<title>page_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1989" width="6.2" height="15.0" fill="rgb(205,226,30)" rx="2" ry="2" />
<text  x="45.34" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_openat (234,592 samples, 0.61%)</title><rect x="981.2" y="1973" width="7.2" height="15.0" fill="rgb(254,91,22)" rx="2" ry="2" />
<text  x="984.18" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send (364,717 samples, 0.95%)</title><rect x="1172.5" y="613" width="11.2" height="15.0" fill="rgb(250,147,32)" rx="2" ry="2" />
<text  x="1175.49" y="623.5" ></text>
</g>
<g >
<title>boost::asio::get_associated_executor&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (440,260 samples, 1.15%)</title><rect x="336.5" y="1077" width="13.6" height="15.0" fill="rgb(247,177,19)" rx="2" ry="2" />
<text  x="339.53" y="1087.5" ></text>
</g>
<g >
<title>___sys_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="517" width="11.2" height="15.0" fill="rgb(218,115,40)" rx="2" ry="2" />
<text  x="1175.49" y="527.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (470,246 samples, 1.22%)</title><rect x="912.9" y="1925" width="14.5" height="15.0" fill="rgb(218,119,16)" rx="2" ry="2" />
<text  x="915.93" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (245,495 samples, 0.64%)</title><rect x="988.4" y="2021" width="7.5" height="15.0" fill="rgb(205,53,3)" rx="2" ry="2" />
<text  x="991.39" y="2031.5" ></text>
</g>
<g >
<title>psi_task_change (506,454 samples, 1.32%)</title><rect x="1130.7" y="1893" width="15.6" height="15.0" fill="rgb(227,220,32)" rx="2" ry="2" />
<text  x="1133.71" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="837" width="13.7" height="15.0" fill="rgb(242,16,18)" rx="2" ry="2" />
<text  x="427.11" y="847.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1557" width="50.4" height="15.0" fill="rgb(234,96,33)" rx="2" ry="2" />
<text  x="197.29" y="1567.5" >boost..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::~executor_function (199,240 samples, 0.52%)</title><rect x="194.3" y="1509" width="6.1" height="15.0" fill="rgb(230,59,29)" rx="2" ry="2" />
<text  x="197.29" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="1125" width="12.3" height="15.0" fill="rgb(211,86,8)" rx="2" ry="2" />
<text  x="210.71" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (398,295 samples, 1.04%)</title><rect x="207.7" y="965" width="12.3" height="15.0" fill="rgb(235,104,20)" rx="2" ry="2" />
<text  x="210.71" y="975.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1461" width="22.5" height="15.0" fill="rgb(246,92,12)" rx="2" ry="2" />
<text  x="891.14" y="1471.5" >b..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="1317" width="6.9" height="15.0" fill="rgb(216,123,33)" rx="2" ry="2" />
<text  x="839.05" y="1327.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::do_visit&lt;2ul, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="981" width="11.6" height="15.0" fill="rgb(242,76,22)" rx="2" ry="2" />
<text  x="1016.30" y="991.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_read_some&lt;boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (2,187,879 samples, 5.70%)</title><rect x="282.8" y="1189" width="67.3" height="15.0" fill="rgb(227,157,50)" rx="2" ry="2" />
<text  x="285.81" y="1199.5" >boost::..</text>
</g>
<g >
<title>__perf_event_task_sched_in (4,838 samples, 0.01%)</title><rect x="803.0" y="1669" width="0.2" height="15.0" fill="rgb(254,171,52)" rx="2" ry="2" />
<text  x="806.01" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_some_op::operator (271,965 samples, 0.71%)</title><rect x="443.9" y="869" width="8.4" height="15.0" fill="rgb(234,95,23)" rx="2" ry="2" />
<text  x="446.93" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="837" width="11.2" height="15.0" fill="rgb(239,21,14)" rx="2" ry="2" />
<text  x="1175.49" y="847.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (390,290 samples, 1.02%)</title><rect x="1160.5" y="1669" width="12.0" height="15.0" fill="rgb(209,130,33)" rx="2" ry="2" />
<text  x="1163.49" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1301" width="12.0" height="15.0" fill="rgb(211,83,42)" rx="2" ry="2" />
<text  x="1163.49" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1557" width="22.5" height="15.0" fill="rgb(246,18,31)" rx="2" ry="2" />
<text  x="891.14" y="1567.5" >b..</text>
</g>
<g >
<title>deactivate_task (547,874 samples, 1.43%)</title><rect x="786.2" y="1685" width="16.8" height="15.0" fill="rgb(252,4,28)" rx="2" ry="2" />
<text  x="789.17" y="1695.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1749" width="22.5" height="15.0" fill="rgb(211,159,29)" rx="2" ry="2" />
<text  x="891.14" y="1759.5" >b..</text>
</g>
<g >
<title>http_server::Listener&lt;main::{lambda (224,219 samples, 0.58%)</title><rect x="1024.9" y="1413" width="6.9" height="15.0" fill="rgb(215,72,12)" rx="2" ry="2" />
<text  x="1027.92" y="1423.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1525" width="6.1" height="15.0" fill="rgb(247,85,37)" rx="2" ry="2" />
<text  x="871.52" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1557" width="126.5" height="15.0" fill="rgb(208,116,33)" rx="2" ry="2" />
<text  x="285.81" y="1567.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1317" width="17.4" height="15.0" fill="rgb(228,146,36)" rx="2" ry="2" />
<text  x="998.94" y="1327.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_object&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1733" width="6.1" height="15.0" fill="rgb(227,113,24)" rx="2" ry="2" />
<text  x="818.40" y="1743.5" ></text>
</g>
<g >
<title>mmap_region (606,765 samples, 1.58%)</title><rect x="1056.4" y="1941" width="18.6" height="15.0" fill="rgb(247,12,20)" rx="2" ry="2" />
<text  x="1059.37" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1797" width="11.2" height="15.0" fill="rgb(234,226,46)" rx="2" ry="2" />
<text  x="1175.49" y="1807.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1477" width="5.4" height="15.0" fill="rgb(244,79,54)" rx="2" ry="2" />
<text  x="724.29" y="1487.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,060,917 samples, 5.37%)</title><rect x="97.6" y="2021" width="63.3" height="15.0" fill="rgb(205,26,44)" rx="2" ry="2" />
<text  x="100.60" y="2031.5" >entry_..</text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1253" width="12.0" height="15.0" fill="rgb(245,158,50)" rx="2" ry="2" />
<text  x="1163.49" y="1263.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1125" width="6.9" height="15.0" fill="rgb(235,215,33)" rx="2" ry="2" />
<text  x="839.05" y="1135.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="725" width="12.0" height="15.0" fill="rgb(242,225,48)" rx="2" ry="2" />
<text  x="1163.49" y="735.5" ></text>
</g>
<g >
<title>ip_local_out (564,935 samples, 1.47%)</title><rect x="995.9" y="261" width="17.4" height="15.0" fill="rgb(246,125,12)" rx="2" ry="2" />
<text  x="998.94" y="271.5" ></text>
</g>
<g >
<title>ret_from_fork (13,264 samples, 0.03%)</title><rect x="827.6" y="1925" width="0.4" height="15.0" fill="rgb(213,199,24)" rx="2" ry="2" />
<text  x="830.60" y="1935.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1493" width="11.6" height="15.0" fill="rgb(218,44,48)" rx="2" ry="2" />
<text  x="1016.30" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (469,881 samples, 1.22%)</title><rect x="828.5" y="1637" width="14.5" height="15.0" fill="rgb(233,81,49)" rx="2" ry="2" />
<text  x="831.53" y="1647.5" ></text>
</g>
<g >
<title>__ip_finish_output (390,290 samples, 1.02%)</title><rect x="1160.5" y="117" width="12.0" height="15.0" fill="rgb(207,61,35)" rx="2" ry="2" />
<text  x="1163.49" y="127.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="709" width="6.9" height="15.0" fill="rgb(234,219,3)" rx="2" ry="2" />
<text  x="839.05" y="719.5" ></text>
</g>
<g >
<title>elf_map (102,347 samples, 0.27%)</title><rect x="91.6" y="1941" width="3.2" height="15.0" fill="rgb(252,172,12)" rx="2" ry="2" />
<text  x="94.62" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (199,055 samples, 0.52%)</title><rect x="526.3" y="725" width="6.1" height="15.0" fill="rgb(220,94,39)" rx="2" ry="2" />
<text  x="529.32" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output2 (364,717 samples, 0.95%)</title><rect x="1172.5" y="261" width="11.2" height="15.0" fill="rgb(252,96,6)" rx="2" ry="2" />
<text  x="1175.49" y="271.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1285" width="11.6" height="15.0" fill="rgb(254,148,5)" rx="2" ry="2" />
<text  x="1016.30" y="1295.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1333" width="163.7" height="15.0" fill="rgb(215,18,44)" rx="2" ry="2" />
<text  x="543.19" y="1343.5" >boost::beast::detail:..</text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (175,630 samples, 0.46%)</title><rect x="721.3" y="1573" width="5.4" height="15.0" fill="rgb(217,189,24)" rx="2" ry="2" />
<text  x="724.29" y="1583.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1637" width="11.9" height="15.0" fill="rgb(217,16,15)" rx="2" ry="2" />
<text  x="915.93" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (364,717 samples, 0.95%)</title><rect x="1172.5" y="85" width="11.2" height="15.0" fill="rgb(214,39,9)" rx="2" ry="2" />
<text  x="1175.49" y="95.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (377,915 samples, 0.98%)</title><rect x="1013.3" y="725" width="11.6" height="15.0" fill="rgb(252,31,29)" rx="2" ry="2" />
<text  x="1016.30" y="735.5" ></text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::const_iterator::const_iterator (606,296 samples, 1.58%)</title><rect x="549.8" y="549" width="18.6" height="15.0" fill="rgb(236,136,42)" rx="2" ry="2" />
<text  x="552.77" y="559.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,423 samples, 1.04%)</title><rect x="868.5" y="1861" width="12.3" height="15.0" fill="rgb(225,152,26)" rx="2" ry="2" />
<text  x="871.52" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (199,055 samples, 0.52%)</title><rect x="526.3" y="581" width="6.1" height="15.0" fill="rgb(209,135,39)" rx="2" ry="2" />
<text  x="529.32" y="591.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::new_element (318,871 samples, 0.83%)</title><rect x="677.2" y="1141" width="9.8" height="15.0" fill="rgb(225,43,10)" rx="2" ry="2" />
<text  x="680.25" y="1151.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="533" width="20.8" height="15.0" fill="rgb(233,40,3)" rx="2" ry="2" />
<text  x="581.34" y="543.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1637" width="12.0" height="15.0" fill="rgb(254,148,30)" rx="2" ry="2" />
<text  x="1163.49" y="1647.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (165,800 samples, 0.43%)</title><rect x="912.9" y="1173" width="5.1" height="15.0" fill="rgb(230,166,16)" rx="2" ry="2" />
<text  x="915.93" y="1183.5" ></text>
</g>
<g >
<title>tcp_send_fin (199,055 samples, 0.52%)</title><rect x="526.3" y="901" width="6.1" height="15.0" fill="rgb(222,153,20)" rx="2" ry="2" />
<text  x="529.32" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (225,146 samples, 0.59%)</title><rect x="836.1" y="1061" width="6.9" height="15.0" fill="rgb(253,186,5)" rx="2" ry="2" />
<text  x="839.05" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1765" width="131.3" height="15.0" fill="rgb(235,103,25)" rx="2" ry="2" />
<text  x="281.00" y="1775.5" >boost::asio::det..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="757" width="6.9" height="15.0" fill="rgb(224,100,47)" rx="2" ry="2" />
<text  x="839.05" y="767.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="741" width="17.4" height="15.0" fill="rgb(222,144,43)" rx="2" ry="2" />
<text  x="998.94" y="751.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (239,731 samples, 0.62%)</title><rect x="880.8" y="1877" width="7.3" height="15.0" fill="rgb(240,83,53)" rx="2" ry="2" />
<text  x="883.77" y="1887.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1749" width="11.6" height="15.0" fill="rgb(233,80,53)" rx="2" ry="2" />
<text  x="1016.30" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::buffer_sequence_begin&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt; &gt; (311,653 samples, 0.81%)</title><rect x="540.2" y="549" width="9.6" height="15.0" fill="rgb(240,154,46)" rx="2" ry="2" />
<text  x="543.19" y="559.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1237" width="6.9" height="15.0" fill="rgb(216,104,50)" rx="2" ry="2" />
<text  x="1027.92" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="933" width="12.0" height="15.0" fill="rgb(221,62,25)" rx="2" ry="2" />
<text  x="1163.49" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output (364,717 samples, 0.95%)</title><rect x="1172.5" y="293" width="11.2" height="15.0" fill="rgb(234,171,22)" rx="2" ry="2" />
<text  x="1175.49" y="303.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::do_visit&lt;2ul, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="741" width="12.0" height="15.0" fill="rgb(249,160,35)" rx="2" ry="2" />
<text  x="1163.49" y="751.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1269" width="13.7" height="15.0" fill="rgb(210,50,14)" rx="2" ry="2" />
<text  x="427.11" y="1279.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_msg_op::operator (1,915,375 samples, 4.99%)</title><rect x="540.2" y="901" width="58.9" height="15.0" fill="rgb(225,51,54)" rx="2" ry="2" />
<text  x="543.19" y="911.5" >boost:..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1477" width="163.7" height="15.0" fill="rgb(242,158,14)" rx="2" ry="2" />
<text  x="543.19" y="1487.5" >boost_asio_handler_in..</text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1525" width="11.9" height="15.0" fill="rgb(215,130,47)" rx="2" ry="2" />
<text  x="915.93" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1365" width="44.3" height="15.0" fill="rgb(221,125,1)" rx="2" ry="2" />
<text  x="203.41" y="1375.5" >boos..</text>
</g>
<g >
<title>[unknown] (5,883 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(215,38,37)" rx="2" ry="2" />
<text  x="1192.82" y="2063.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_deallocate (199,120 samples, 0.52%)</title><rect x="264.1" y="1749" width="6.1" height="15.0" fill="rgb(225,45,10)" rx="2" ry="2" />
<text  x="267.13" y="1759.5" ></text>
</g>
<g >
<title>record_times (459,947 samples, 1.20%)</title><rect x="1132.1" y="1877" width="14.2" height="15.0" fill="rgb(232,198,7)" rx="2" ry="2" />
<text  x="1135.14" y="1887.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1637" width="50.4" height="15.0" fill="rgb(218,144,30)" rx="2" ry="2" />
<text  x="197.29" y="1647.5" >boost..</text>
</g>
<g >
<title>boost::json::parser::write (198,372 samples, 0.52%)</title><rect x="815.4" y="1957" width="6.1" height="15.0" fill="rgb(226,28,3)" rx="2" ry="2" />
<text  x="818.40" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (390,290 samples, 1.02%)</title><rect x="1160.5" y="1957" width="12.0" height="15.0" fill="rgb(213,169,22)" rx="2" ry="2" />
<text  x="1163.49" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="869" width="58.9" height="15.0" fill="rgb(237,114,37)" rx="2" ry="2" />
<text  x="543.19" y="879.5" >boost:..</text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (377,915 samples, 0.98%)</title><rect x="1013.3" y="1381" width="11.6" height="15.0" fill="rgb(244,15,13)" rx="2" ry="2" />
<text  x="1016.30" y="1391.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1301" width="6.9" height="15.0" fill="rgb(250,182,38)" rx="2" ry="2" />
<text  x="1027.92" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1445" width="14.5" height="15.0" fill="rgb(237,156,46)" rx="2" ry="2" />
<text  x="446.93" y="1455.5" ></text>
</g>
<g >
<title>tcp_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="293" width="12.0" height="15.0" fill="rgb(231,186,4)" rx="2" ry="2" />
<text  x="1163.49" y="303.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1221" width="6.9" height="15.0" fill="rgb(253,151,10)" rx="2" ry="2" />
<text  x="1027.92" y="1231.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;http_server::SessionBase&gt;::~shared_ptr (733,234 samples, 1.91%)</title><rect x="517.7" y="1285" width="22.5" height="15.0" fill="rgb(246,176,17)" rx="2" ry="2" />
<text  x="520.66" y="1295.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (788,165 samples, 2.05%)</title><rect x="778.9" y="1813" width="24.3" height="15.0" fill="rgb(229,141,0)" rx="2" ry="2" />
<text  x="781.93" y="1823.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (124,279 samples, 0.32%)</title><rect x="91.6" y="2021" width="3.8" height="15.0" fill="rgb(210,45,27)" rx="2" ry="2" />
<text  x="94.62" y="2031.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1653" width="11.9" height="15.0" fill="rgb(242,202,53)" rx="2" ry="2" />
<text  x="915.93" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (209,856 samples, 0.55%)</title><rect x="48.5" y="1925" width="6.4" height="15.0" fill="rgb(212,61,47)" rx="2" ry="2" />
<text  x="51.48" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1877" width="11.2" height="15.0" fill="rgb(229,6,5)" rx="2" ry="2" />
<text  x="1175.49" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1205" width="126.5" height="15.0" fill="rgb(244,179,48)" rx="2" ry="2" />
<text  x="285.81" y="1215.5" >boost::beast::h..</text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="837" width="8.4" height="15.0" fill="rgb(241,112,39)" rx="2" ry="2" />
<text  x="446.93" y="847.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1781" width="14.5" height="15.0" fill="rgb(248,137,53)" rx="2" ry="2" />
<text  x="831.53" y="1791.5" ></text>
</g>
<g >
<title>__sys_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="373" width="12.0" height="15.0" fill="rgb(235,199,29)" rx="2" ry="2" />
<text  x="1163.49" y="383.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="565" width="12.0" height="15.0" fill="rgb(231,85,23)" rx="2" ry="2" />
<text  x="1163.49" y="575.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1733" width="12.3" height="15.0" fill="rgb(249,178,47)" rx="2" ry="2" />
<text  x="871.52" y="1743.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::basic_stream&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;, , void&gt; (538,866 samples, 1.40%)</title><rect x="220.0" y="1077" width="16.5" height="15.0" fill="rgb(232,178,3)" rx="2" ry="2" />
<text  x="222.95" y="1087.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1653" width="20.6" height="15.0" fill="rgb(239,204,40)" rx="2" ry="2" />
<text  x="440.79" y="1663.5" ></text>
</g>
<g >
<title>boost::asio::detail::op_queue&lt;boost::asio::detail::scheduler_operation&gt;::pop (16,916 samples, 0.04%)</title><rect x="828.0" y="1957" width="0.5" height="15.0" fill="rgb(254,46,37)" rx="2" ry="2" />
<text  x="831.01" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (564,935 samples, 1.47%)</title><rect x="995.9" y="197" width="17.4" height="15.0" fill="rgb(238,27,13)" rx="2" ry="2" />
<text  x="998.94" y="207.5" ></text>
</g>
<g >
<title>boost::beast::http::parser&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::on_request_impl (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1141" width="33.2" height="15.0" fill="rgb(222,11,52)" rx="2" ry="2" />
<text  x="379.10" y="1151.5" >bo..</text>
</g>
<g >
<title>do_page_fault (198,923 samples, 0.52%)</title><rect x="950.7" y="1989" width="6.2" height="15.0" fill="rgb(223,223,23)" rx="2" ry="2" />
<text  x="953.75" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::copy::operator (606,296 samples, 1.58%)</title><rect x="549.8" y="453" width="18.6" height="15.0" fill="rgb(254,221,20)" rx="2" ry="2" />
<text  x="552.77" y="463.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="789" width="12.0" height="15.0" fill="rgb(245,23,27)" rx="2" ry="2" />
<text  x="1163.49" y="799.5" ></text>
</g>
<g >
<title>ctx_resched (5,883 samples, 0.02%)</title><rect x="1189.8" y="1909" width="0.2" height="15.0" fill="rgb(234,157,29)" rx="2" ry="2" />
<text  x="1192.82" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::async_compose&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="389" width="6.9" height="15.0" fill="rgb(227,47,1)" rx="2" ry="2" />
<text  x="1027.92" y="399.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1845" width="14.5" height="15.0" fill="rgb(240,64,42)" rx="2" ry="2" />
<text  x="831.53" y="1855.5" ></text>
</g>
<g >
<title>add_disk_randomness (244,735 samples, 0.64%)</title><rect x="828.5" y="1045" width="7.6" height="15.0" fill="rgb(221,65,19)" rx="2" ry="2" />
<text  x="831.53" y="1055.5" ></text>
</g>
<g >
<title>wake_up_new_task (199,005 samples, 0.52%)</title><rect x="84.6" y="1957" width="6.1" height="15.0" fill="rgb(211,161,14)" rx="2" ry="2" />
<text  x="87.57" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::operator++ (322,937 samples, 0.84%)</title><rect x="568.4" y="469" width="9.9" height="15.0" fill="rgb(232,102,53)" rx="2" ry="2" />
<text  x="571.41" y="479.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1861" width="6.1" height="15.0" fill="rgb(214,75,20)" rx="2" ry="2" />
<text  x="70.21" y="1871.5" ></text>
</g>
<g >
<title>boost::beast::http::validate_list&lt;boost::beast::http::detail::opt_token_list_policy&gt; (645,076 samples, 1.68%)</title><rect x="350.1" y="1125" width="19.8" height="15.0" fill="rgb(214,45,43)" rx="2" ry="2" />
<text  x="353.06" y="1135.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1557" width="14.5" height="15.0" fill="rgb(234,85,36)" rx="2" ry="2" />
<text  x="831.53" y="1567.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1381" width="6.1" height="15.0" fill="rgb(247,14,48)" rx="2" ry="2" />
<text  x="871.52" y="1391.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (606,296 samples, 1.58%)</title><rect x="171.6" y="1797" width="18.6" height="15.0" fill="rgb(247,227,16)" rx="2" ry="2" />
<text  x="174.57" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="821" width="11.6" height="15.0" fill="rgb(226,5,7)" rx="2" ry="2" />
<text  x="1016.30" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="997" width="13.7" height="15.0" fill="rgb(209,99,53)" rx="2" ry="2" />
<text  x="427.11" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::do_complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="1989" width="6.9" height="15.0" fill="rgb(234,99,31)" rx="2" ry="2" />
<text  x="1027.92" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::do_visit&lt;2ul, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="901" width="11.2" height="15.0" fill="rgb(207,107,29)" rx="2" ry="2" />
<text  x="1175.49" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (6,174,371 samples, 16.08%)</title><rect x="517.7" y="1573" width="189.7" height="15.0" fill="rgb(228,95,24)" rx="2" ry="2" />
<text  x="520.66" y="1583.5" >boost::asio::detail::sch..</text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;4ul&gt;::call&lt;0ul, boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::copy&gt; (606,296 samples, 1.58%)</title><rect x="549.8" y="469" width="18.6" height="15.0" fill="rgb(223,47,44)" rx="2" ry="2" />
<text  x="552.77" y="479.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::require (75,343 samples, 0.20%)</title><rect x="910.6" y="1733" width="2.3" height="15.0" fill="rgb(231,62,33)" rx="2" ry="2" />
<text  x="913.61" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_send::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="709" width="11.2" height="15.0" fill="rgb(221,79,11)" rx="2" ry="2" />
<text  x="1175.49" y="719.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1333" width="126.5" height="15.0" fill="rgb(219,119,14)" rx="2" ry="2" />
<text  x="285.81" y="1343.5" >boost_asio_hand..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1461" width="163.7" height="15.0" fill="rgb(218,124,30)" rx="2" ry="2" />
<text  x="543.19" y="1471.5" >boost::asio::detail::..</text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::signal_set_service, boost::asio::any_io_executor&gt;::io_object_impl&lt;boost::asio::io_context&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="2005" width="6.1" height="15.0" fill="rgb(225,162,15)" rx="2" ry="2" />
<text  x="812.29" y="2015.5" ></text>
</g>
<g >
<title>record_times (588,445 samples, 1.53%)</title><rect x="127.7" y="1861" width="18.1" height="15.0" fill="rgb(233,60,27)" rx="2" ry="2" />
<text  x="130.67" y="1871.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1365" width="126.5" height="15.0" fill="rgb(250,120,31)" rx="2" ry="2" />
<text  x="285.81" y="1375.5" >boost_asio_hand..</text>
</g>
<g >
<title>native_write_msr (4,838 samples, 0.01%)</title><rect x="803.0" y="1621" width="0.2" height="15.0" fill="rgb(205,224,16)" rx="2" ry="2" />
<text  x="806.01" y="1631.5" ></text>
</g>
<g >
<title>do_lookup_x (199,805 samples, 0.52%)</title><rect x="1050.2" y="2053" width="6.2" height="15.0" fill="rgb(222,25,24)" rx="2" ry="2" />
<text  x="1053.23" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_move_accept::operator (244,735 samples, 0.64%)</title><rect x="828.5" y="1301" width="7.6" height="15.0" fill="rgb(234,79,47)" rx="2" ry="2" />
<text  x="831.53" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::get_associated_executor&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="757" width="13.7" height="15.0" fill="rgb(207,27,2)" rx="2" ry="2" />
<text  x="427.11" y="767.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1701" width="11.6" height="15.0" fill="rgb(212,33,5)" rx="2" ry="2" />
<text  x="1016.30" y="1711.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::count (1,266,143 samples, 3.30%)</title><rect x="638.3" y="1141" width="38.9" height="15.0" fill="rgb(238,99,25)" rx="2" ry="2" />
<text  x="641.33" y="1151.5" >boo..</text>
</g>
<g >
<title>check_match (599,128 samples, 1.56%)</title><rect x="1031.8" y="2053" width="18.4" height="15.0" fill="rgb(219,185,11)" rx="2" ry="2" />
<text  x="1034.81" y="2063.5" ></text>
</g>
<g >
<title>blk_done_softirq (244,735 samples, 0.64%)</title><rect x="828.5" y="1109" width="7.6" height="15.0" fill="rgb(223,211,14)" rx="2" ry="2" />
<text  x="831.53" y="1119.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="1109" width="12.3" height="15.0" fill="rgb(229,137,33)" rx="2" ry="2" />
<text  x="210.71" y="1119.5" ></text>
</g>
<g >
<title>dequeue_task_fair (143,269 samples, 0.37%)</title><rect x="786.2" y="1669" width="4.4" height="15.0" fill="rgb(233,82,46)" rx="2" ry="2" />
<text  x="789.17" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_read_msg_op::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="549" width="6.9" height="15.0" fill="rgb(226,173,41)" rx="2" ry="2" />
<text  x="1027.92" y="559.5" ></text>
</g>
<g >
<title>tcp_write_xmit (390,290 samples, 1.02%)</title><rect x="1160.5" y="229" width="12.0" height="15.0" fill="rgb(229,114,10)" rx="2" ry="2" />
<text  x="1163.49" y="239.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (6,174,371 samples, 16.08%)</title><rect x="517.7" y="1557" width="189.7" height="15.0" fill="rgb(227,48,35)" rx="2" ry="2" />
<text  x="520.66" y="1567.5" >boost::asio::detail::exe..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="837" width="12.0" height="15.0" fill="rgb(215,26,38)" rx="2" ry="2" />
<text  x="1163.49" y="847.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (199,763 samples, 0.52%)</title><rect x="23.9" y="1893" width="6.2" height="15.0" fill="rgb(238,24,49)" rx="2" ry="2" />
<text  x="26.92" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (364,717 samples, 0.95%)</title><rect x="1172.5" y="101" width="11.2" height="15.0" fill="rgb(238,156,39)" rx="2" ry="2" />
<text  x="1175.49" y="111.5" ></text>
</g>
<g >
<title>http_server::Listener&lt;main::{lambda (469,881 samples, 1.22%)</title><rect x="828.5" y="1365" width="14.5" height="15.0" fill="rgb(237,42,1)" rx="2" ry="2" />
<text  x="831.53" y="1375.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_value&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1813" width="6.1" height="15.0" fill="rgb(247,134,54)" rx="2" ry="2" />
<text  x="818.40" y="1823.5" ></text>
</g>
<g >
<title>http_handler::RequestHandler::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1205" width="17.4" height="15.0" fill="rgb(219,56,46)" rx="2" ry="2" />
<text  x="998.94" y="1215.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (271,965 samples, 0.71%)</title><rect x="443.9" y="1205" width="8.4" height="15.0" fill="rgb(235,107,0)" rx="2" ry="2" />
<text  x="446.93" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (175,630 samples, 0.46%)</title><rect x="721.3" y="1557" width="5.4" height="15.0" fill="rgb(206,0,14)" rx="2" ry="2" />
<text  x="724.29" y="1567.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="661" width="6.9" height="15.0" fill="rgb(249,61,5)" rx="2" ry="2" />
<text  x="839.05" y="671.5" ></text>
</g>
<g >
<title>epoll_wait (760,057 samples, 1.98%)</title><rect x="927.4" y="1957" width="23.3" height="15.0" fill="rgb(230,111,21)" rx="2" ry="2" />
<text  x="930.38" y="1967.5" >e..</text>
</g>
<g >
<title>boost::beast::http::async_read&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="549" width="6.9" height="15.0" fill="rgb(221,124,50)" rx="2" ry="2" />
<text  x="839.05" y="559.5" ></text>
</g>
<g >
<title>perf (5,883 samples, 0.02%)</title><rect x="1189.8" y="2069" width="0.2" height="15.0" fill="rgb(206,43,31)" rx="2" ry="2" />
<text  x="1192.82" y="2079.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1749" width="17.4" height="15.0" fill="rgb(220,94,37)" rx="2" ry="2" />
<text  x="998.94" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (806,493 samples, 2.10%)</title><rect x="888.1" y="1925" width="24.8" height="15.0" fill="rgb(205,190,41)" rx="2" ry="2" />
<text  x="891.14" y="1935.5" >b..</text>
</g>
<g >
<title>http_server::SessionBase::~SessionBase (731,150 samples, 1.90%)</title><rect x="888.1" y="1269" width="22.5" height="15.0" fill="rgb(225,107,48)" rx="2" ry="2" />
<text  x="891.14" y="1279.5" >h..</text>
</g>
<g >
<title>__handle_mm_fault (198,923 samples, 0.52%)</title><rect x="950.7" y="1925" width="6.2" height="15.0" fill="rgb(250,27,45)" rx="2" ry="2" />
<text  x="953.75" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::impl&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (169,764 samples, 0.44%)</title><rect x="501.4" y="1733" width="5.2" height="15.0" fill="rgb(242,141,15)" rx="2" ry="2" />
<text  x="504.36" y="1743.5" ></text>
</g>
<g >
<title>boost::beast::allocate_stable&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="485" width="6.9" height="15.0" fill="rgb(237,187,51)" rx="2" ry="2" />
<text  x="839.05" y="495.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="1109" width="6.9" height="15.0" fill="rgb(211,202,31)" rx="2" ry="2" />
<text  x="1027.92" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::object_pool&lt;boost::asio::detail::epoll_reactor::descriptor_state&gt;::alloc&lt;bool&gt; (112,054 samples, 0.29%)</title><rect x="244.7" y="1685" width="3.5" height="15.0" fill="rgb(238,162,7)" rx="2" ry="2" />
<text  x="247.73" y="1695.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::operator++ (322,937 samples, 0.84%)</title><rect x="568.4" y="533" width="9.9" height="15.0" fill="rgb(205,54,18)" rx="2" ry="2" />
<text  x="571.41" y="543.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::prefer&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt; (404,605 samples, 1.05%)</title><rect x="291.4" y="1029" width="12.5" height="15.0" fill="rgb(236,107,8)" rx="2" ry="2" />
<text  x="294.43" y="1039.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1509" width="12.0" height="15.0" fill="rgb(214,200,40)" rx="2" ry="2" />
<text  x="1163.49" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (450,298 samples, 1.17%)</title><rect x="707.4" y="1765" width="13.9" height="15.0" fill="rgb(236,181,12)" rx="2" ry="2" />
<text  x="710.45" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (606,296 samples, 1.58%)</title><rect x="171.6" y="1717" width="18.6" height="15.0" fill="rgb(217,131,33)" rx="2" ry="2" />
<text  x="174.57" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1253" width="163.7" height="15.0" fill="rgb(240,80,42)" rx="2" ry="2" />
<text  x="543.19" y="1263.5" >boost::asio::detail::..</text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1749" width="6.1" height="15.0" fill="rgb(245,73,30)" rx="2" ry="2" />
<text  x="461.42" y="1759.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (777,495 samples, 2.03%)</title><rect x="779.3" y="1749" width="23.9" height="15.0" fill="rgb(207,8,32)" rx="2" ry="2" />
<text  x="782.26" y="1759.5" >s..</text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::const_iterator::operator* (674,489 samples, 1.76%)</title><rect x="578.3" y="421" width="20.8" height="15.0" fill="rgb(208,119,46)" rx="2" ry="2" />
<text  x="581.34" y="431.5" ></text>
</g>
<g >
<title>tcp_current_mss (731,150 samples, 1.90%)</title><rect x="888.1" y="997" width="22.5" height="15.0" fill="rgb(208,223,27)" rx="2" ry="2" />
<text  x="891.14" y="1007.5" >t..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1541" width="6.9" height="15.0" fill="rgb(213,10,8)" rx="2" ry="2" />
<text  x="1027.92" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (469,881 samples, 1.22%)</title><rect x="828.5" y="1685" width="14.5" height="15.0" fill="rgb(247,154,6)" rx="2" ry="2" />
<text  x="831.53" y="1695.5" ></text>
</g>
<g >
<title>get_timespec64 (281,962 samples, 0.73%)</title><rect x="312.4" y="933" width="8.6" height="15.0" fill="rgb(207,206,0)" rx="2" ry="2" />
<text  x="315.37" y="943.5" ></text>
</g>
<g >
<title>_dl_map_object (467,667 samples, 1.22%)</title><rect x="974.0" y="2053" width="14.4" height="15.0" fill="rgb(230,145,30)" rx="2" ry="2" />
<text  x="977.02" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_receive&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="853" width="13.7" height="15.0" fill="rgb(253,215,54)" rx="2" ry="2" />
<text  x="427.11" y="863.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="1157" width="12.3" height="15.0" fill="rgb(222,225,39)" rx="2" ry="2" />
<text  x="210.71" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="869" width="12.3" height="15.0" fill="rgb(238,118,49)" rx="2" ry="2" />
<text  x="210.71" y="879.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1733" width="6.1" height="15.0" fill="rgb(236,208,33)" rx="2" ry="2" />
<text  x="461.42" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt; &gt;::do_perform (564,935 samples, 1.47%)</title><rect x="995.9" y="565" width="17.4" height="15.0" fill="rgb(235,175,0)" rx="2" ry="2" />
<text  x="998.94" y="575.5" ></text>
</g>
<g >
<title>ep_poll (788,165 samples, 2.05%)</title><rect x="778.9" y="1765" width="24.3" height="15.0" fill="rgb(240,52,6)" rx="2" ry="2" />
<text  x="781.93" y="1775.5" >e..</text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1733" width="40.5" height="15.0" fill="rgb(224,89,43)" rx="2" ry="2" />
<text  x="420.90" y="1743.5" >boo..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="949" width="6.9" height="15.0" fill="rgb(224,19,48)" rx="2" ry="2" />
<text  x="1027.92" y="959.5" ></text>
</g>
<g >
<title>main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="1285" width="11.2" height="15.0" fill="rgb(242,27,7)" rx="2" ry="2" />
<text  x="1175.49" y="1295.5" ></text>
</g>
<g >
<title>dequeue_entity (666,690 samples, 1.74%)</title><rect x="104.4" y="1861" width="20.5" height="15.0" fill="rgb(241,134,19)" rx="2" ry="2" />
<text  x="107.38" y="1871.5" ></text>
</g>
<g >
<title>inet_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="405" width="17.4" height="15.0" fill="rgb(224,194,51)" rx="2" ry="2" />
<text  x="998.94" y="415.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1877" width="22.5" height="15.0" fill="rgb(247,14,9)" rx="2" ry="2" />
<text  x="891.14" y="1887.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1829" width="5.4" height="15.0" fill="rgb(206,163,17)" rx="2" ry="2" />
<text  x="724.29" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder1&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::system::error_code&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt; &gt; (157,957 samples, 0.41%)</title><rect x="726.7" y="1797" width="4.8" height="15.0" fill="rgb(254,69,2)" rx="2" ry="2" />
<text  x="729.69" y="1807.5" ></text>
</g>
<g >
<title>do_futex (9,135 samples, 0.02%)</title><rect x="168.4" y="1749" width="0.3" height="15.0" fill="rgb(214,126,28)" rx="2" ry="2" />
<text  x="171.39" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="933" width="11.6" height="15.0" fill="rgb(219,73,10)" rx="2" ry="2" />
<text  x="1016.30" y="943.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1157" width="17.4" height="15.0" fill="rgb(237,201,43)" rx="2" ry="2" />
<text  x="998.94" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="869" width="6.9" height="15.0" fill="rgb(245,163,25)" rx="2" ry="2" />
<text  x="1027.92" y="879.5" ></text>
</g>
<g >
<title>put_prev_entity (194,187 samples, 0.51%)</title><rect x="149.6" y="1877" width="6.0" height="15.0" fill="rgb(247,18,17)" rx="2" ry="2" />
<text  x="152.64" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1013" width="8.4" height="15.0" fill="rgb(229,100,51)" rx="2" ry="2" />
<text  x="446.93" y="1023.5" ></text>
</g>
<g >
<title>json_loader::LoadGame (396,927 samples, 1.03%)</title><rect x="815.4" y="2021" width="12.2" height="15.0" fill="rgb(247,7,5)" rx="2" ry="2" />
<text  x="818.40" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="1701" width="6.9" height="15.0" fill="rgb(216,156,16)" rx="2" ry="2" />
<text  x="1027.92" y="1711.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1365" width="5.1" height="15.0" fill="rgb(210,21,5)" rx="2" ry="2" />
<text  x="915.93" y="1375.5" ></text>
</g>
<g >
<title>tcp_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="533" width="11.6" height="15.0" fill="rgb(253,34,49)" rx="2" ry="2" />
<text  x="1016.30" y="543.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (364,717 samples, 0.95%)</title><rect x="1172.5" y="69" width="11.2" height="15.0" fill="rgb(229,195,43)" rx="2" ry="2" />
<text  x="1175.49" y="79.5" ></text>
</g>
<g >
<title>find_get_entry (199,656 samples, 0.52%)</title><rect x="67.2" y="1813" width="6.1" height="15.0" fill="rgb(248,25,22)" rx="2" ry="2" />
<text  x="70.21" y="1823.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (108,766 samples, 0.28%)</title><rect x="1105.9" y="1893" width="3.4" height="15.0" fill="rgb(250,191,13)" rx="2" ry="2" />
<text  x="1108.92" y="1903.5" ></text>
</g>
<g >
<title>boost::json::key_value_pair::key (198,555 samples, 0.52%)</title><rect x="821.5" y="1829" width="6.1" height="15.0" fill="rgb(222,35,11)" rx="2" ry="2" />
<text  x="824.50" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,551,250 samples, 11.86%)</title><rect x="278.0" y="1781" width="139.9" height="15.0" fill="rgb(249,77,11)" rx="2" ry="2" />
<text  x="281.00" y="1791.5" >boost::asio::deta..</text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (390,290 samples, 1.02%)</title><rect x="1160.5" y="1093" width="12.0" height="15.0" fill="rgb(225,43,44)" rx="2" ry="2" />
<text  x="1163.49" y="1103.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (209,856 samples, 0.55%)</title><rect x="48.5" y="1861" width="6.4" height="15.0" fill="rgb(211,2,34)" rx="2" ry="2" />
<text  x="51.48" y="1871.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::insert (201,887 samples, 0.53%)</title><rect x="369.9" y="1125" width="6.2" height="15.0" fill="rgb(244,62,45)" rx="2" ry="2" />
<text  x="372.89" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_receive&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="117" width="6.9" height="15.0" fill="rgb(205,147,6)" rx="2" ry="2" />
<text  x="1027.92" y="127.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::parse_start_line (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1157" width="33.2" height="15.0" fill="rgb(235,138,8)" rx="2" ry="2" />
<text  x="379.10" y="1167.5" >bo..</text>
</g>
<g >
<title>boost::asio::detail::service_registry::do_use_service (198,769 samples, 0.52%)</title><rect x="809.3" y="1957" width="6.1" height="15.0" fill="rgb(216,164,14)" rx="2" ry="2" />
<text  x="812.29" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1733" width="6.3" height="15.0" fill="rgb(210,190,30)" rx="2" ry="2" />
<text  x="472.66" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57,179 samples, 0.15%)</title><rect x="168.7" y="1749" width="1.7" height="15.0" fill="rgb(229,72,50)" rx="2" ry="2" />
<text  x="171.67" y="1759.5" ></text>
</g>
<g >
<title>unlink_file_vma (200,583 samples, 0.52%)</title><rect x="1056.4" y="1877" width="6.1" height="15.0" fill="rgb(224,5,10)" rx="2" ry="2" />
<text  x="1059.37" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,883 samples, 0.02%)</title><rect x="1189.8" y="2037" width="0.2" height="15.0" fill="rgb(247,227,9)" rx="2" ry="2" />
<text  x="1192.82" y="2047.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (109,135 samples, 0.28%)</title><rect x="726.7" y="1733" width="3.3" height="15.0" fill="rgb(235,41,41)" rx="2" ry="2" />
<text  x="729.69" y="1743.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;http_server::Session&lt;main::{lambda (731,150 samples, 1.90%)</title><rect x="888.1" y="1333" width="22.5" height="15.0" fill="rgb(213,158,13)" rx="2" ry="2" />
<text  x="891.14" y="1343.5" >s..</text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1413" width="11.9" height="15.0" fill="rgb(213,96,43)" rx="2" ry="2" />
<text  x="915.93" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (199,368 samples, 0.52%)</title><rect x="868.5" y="1205" width="6.1" height="15.0" fill="rgb(217,160,50)" rx="2" ry="2" />
<text  x="871.52" y="1215.5" ></text>
</g>
<g >
<title>do_syscall_64 (252,217 samples, 0.66%)</title><rect x="532.4" y="1045" width="7.8" height="15.0" fill="rgb(248,15,14)" rx="2" ry="2" />
<text  x="535.44" y="1055.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::next&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="757" width="12.0" height="15.0" fill="rgb(237,225,10)" rx="2" ry="2" />
<text  x="1163.49" y="767.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1589" width="13.7" height="15.0" fill="rgb(234,51,4)" rx="2" ry="2" />
<text  x="427.11" y="1599.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="917" width="6.9" height="15.0" fill="rgb(239,159,40)" rx="2" ry="2" />
<text  x="1027.92" y="927.5" ></text>
</g>
<g >
<title>net_rx_action (377,915 samples, 0.98%)</title><rect x="1013.3" y="261" width="11.6" height="15.0" fill="rgb(242,180,36)" rx="2" ry="2" />
<text  x="1016.30" y="271.5" ></text>
</g>
<g >
<title>ip_local_out (377,915 samples, 0.98%)</title><rect x="1013.3" y="405" width="11.6" height="15.0" fill="rgb(248,229,7)" rx="2" ry="2" />
<text  x="1016.30" y="415.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1845" width="11.6" height="15.0" fill="rgb(212,212,11)" rx="2" ry="2" />
<text  x="1016.30" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (271,965 samples, 0.71%)</title><rect x="443.9" y="1285" width="8.4" height="15.0" fill="rgb(227,45,46)" rx="2" ry="2" />
<text  x="446.93" y="1295.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1381" width="13.7" height="15.0" fill="rgb(239,117,30)" rx="2" ry="2" />
<text  x="427.11" y="1391.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="773" width="12.0" height="15.0" fill="rgb(242,155,47)" rx="2" ry="2" />
<text  x="1163.49" y="783.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1429" width="22.5" height="15.0" fill="rgb(236,80,35)" rx="2" ry="2" />
<text  x="520.66" y="1439.5" >b..</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1397" width="11.2" height="15.0" fill="rgb(242,79,11)" rx="2" ry="2" />
<text  x="1175.49" y="1407.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="357" width="6.9" height="15.0" fill="rgb(249,44,12)" rx="2" ry="2" />
<text  x="1027.92" y="367.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (13,342 samples, 0.03%)</title><rect x="160.5" y="2005" width="0.4" height="15.0" fill="rgb(216,218,51)" rx="2" ry="2" />
<text  x="163.54" y="2015.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="629" width="12.0" height="15.0" fill="rgb(251,114,6)" rx="2" ry="2" />
<text  x="1163.49" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,803,467 samples, 12.51%)</title><rect x="270.2" y="1797" width="147.7" height="15.0" fill="rgb(228,89,26)" rx="2" ry="2" />
<text  x="273.25" y="1807.5" >boost::asio::detai..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1173" width="6.9" height="15.0" fill="rgb(235,186,26)" rx="2" ry="2" />
<text  x="839.05" y="1183.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::~const_iterator (220,784 samples, 0.58%)</title><rect x="918.0" y="1221" width="6.8" height="15.0" fill="rgb(223,107,38)" rx="2" ry="2" />
<text  x="921.02" y="1231.5" ></text>
</g>
<g >
<title>activate_task (1,204,012 samples, 3.14%)</title><rect x="1109.3" y="1909" width="37.0" height="15.0" fill="rgb(219,210,45)" rx="2" ry="2" />
<text  x="1112.27" y="1919.5" >act..</text>
</g>
<g >
<title>__do_execve_file.isra.0 (5,883 samples, 0.02%)</title><rect x="1189.8" y="1989" width="0.2" height="15.0" fill="rgb(207,182,27)" rx="2" ry="2" />
<text  x="1192.82" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::close (733,234 samples, 1.91%)</title><rect x="517.7" y="1093" width="22.5" height="15.0" fill="rgb(227,202,30)" rx="2" ry="2" />
<text  x="520.66" y="1103.5" >b..</text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (271,965 samples, 0.71%)</title><rect x="443.9" y="1157" width="8.4" height="15.0" fill="rgb(246,199,31)" rx="2" ry="2" />
<text  x="446.93" y="1167.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (777,495 samples, 2.03%)</title><rect x="779.3" y="1733" width="23.9" height="15.0" fill="rgb(216,174,8)" rx="2" ry="2" />
<text  x="782.26" y="1743.5" >s..</text>
</g>
<g >
<title>__vma_adjust (160,702 samples, 0.42%)</title><rect x="963.0" y="1925" width="4.9" height="15.0" fill="rgb(240,218,7)" rx="2" ry="2" />
<text  x="965.98" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (364,717 samples, 0.95%)</title><rect x="1172.5" y="565" width="11.2" height="15.0" fill="rgb(209,38,53)" rx="2" ry="2" />
<text  x="1175.49" y="575.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::any_io_executor (280,330 samples, 0.73%)</title><rect x="409.3" y="1749" width="8.6" height="15.0" fill="rgb(235,182,28)" rx="2" ry="2" />
<text  x="412.28" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt;::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="981" width="12.3" height="15.0" fill="rgb(254,93,12)" rx="2" ry="2" />
<text  x="210.71" y="991.5" ></text>
</g>
<g >
<title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (322,937 samples, 0.84%)</title><rect x="599.1" y="965" width="9.9" height="15.0" fill="rgb(229,26,39)" rx="2" ry="2" />
<text  x="602.07" y="975.5" ></text>
</g>
<g >
<title>try_to_wake_up (20,733 samples, 0.05%)</title><rect x="159.9" y="1925" width="0.6" height="15.0" fill="rgb(216,42,14)" rx="2" ry="2" />
<text  x="162.90" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1477" width="126.5" height="15.0" fill="rgb(220,127,17)" rx="2" ry="2" />
<text  x="285.81" y="1487.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::strand (445,208 samples, 1.16%)</title><rect x="424.1" y="629" width="13.7" height="15.0" fill="rgb(222,26,41)" rx="2" ry="2" />
<text  x="427.11" y="639.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="613" width="20.8" height="15.0" fill="rgb(236,110,45)" rx="2" ry="2" />
<text  x="581.34" y="623.5" ></text>
</g>
<g >
<title>boost_asio_handler_alloc_helpers::deallocate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (632,043 samples, 1.65%)</title><rect x="849.1" y="1861" width="19.4" height="15.0" fill="rgb(252,211,50)" rx="2" ry="2" />
<text  x="852.09" y="1871.5" ></text>
</g>
<g >
<title>dput (281,962 samples, 0.73%)</title><rect x="517.7" y="965" width="8.6" height="15.0" fill="rgb(205,118,48)" rx="2" ry="2" />
<text  x="520.66" y="975.5" ></text>
</g>
<g >
<title>boost::asio::dispatch&lt;boost::asio::any_io_executor, boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="1333" width="6.9" height="15.0" fill="rgb(216,97,54)" rx="2" ry="2" />
<text  x="839.05" y="1343.5" ></text>
</g>
<g >
<title>boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;::buffers_prefix_view (674,489 samples, 1.76%)</title><rect x="578.3" y="469" width="20.8" height="15.0" fill="rgb(228,108,41)" rx="2" ry="2" />
<text  x="581.34" y="479.5" ></text>
</g>
<g >
<title>boost::empty_::empty_value&lt;std::allocator&lt;void&gt;, 0u, true&gt;::get (258,401 samples, 0.67%)</title><rect x="615.3" y="1093" width="7.9" height="15.0" fill="rgb(216,80,24)" rx="2" ry="2" />
<text  x="618.29" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::buffer_size&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1253" width="5.4" height="15.0" fill="rgb(216,166,8)" rx="2" ry="2" />
<text  x="724.29" y="1263.5" ></text>
</g>
<g >
<title>futex_wait_setup (31,445 samples, 0.08%)</title><rect x="156.9" y="1941" width="1.0" height="15.0" fill="rgb(232,9,48)" rx="2" ry="2" />
<text  x="159.91" y="1951.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="885" width="17.4" height="15.0" fill="rgb(247,141,33)" rx="2" ry="2" />
<text  x="998.94" y="895.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (37,189 samples, 0.10%)</title><rect x="170.4" y="1781" width="1.2" height="15.0" fill="rgb(251,97,53)" rx="2" ry="2" />
<text  x="173.43" y="1791.5" ></text>
</g>
<g >
<title>____fput (481,017 samples, 1.25%)</title><rect x="517.7" y="997" width="14.7" height="15.0" fill="rgb(215,226,36)" rx="2" ry="2" />
<text  x="520.66" y="1007.5" ></text>
</g>
<g >
<title>ip_queue_xmit (364,717 samples, 0.95%)</title><rect x="1172.5" y="357" width="11.2" height="15.0" fill="rgb(225,227,20)" rx="2" ry="2" />
<text  x="1175.49" y="367.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::~any_io_executor (19,781 samples, 0.05%)</title><rect x="759.0" y="1749" width="0.6" height="15.0" fill="rgb(209,153,43)" rx="2" ry="2" />
<text  x="761.97" y="1759.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (377,915 samples, 0.98%)</title><rect x="1013.3" y="133" width="11.6" height="15.0" fill="rgb(207,210,45)" rx="2" ry="2" />
<text  x="1016.30" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="549" width="11.2" height="15.0" fill="rgb(237,70,31)" rx="2" ry="2" />
<text  x="1175.49" y="559.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="741" width="6.9" height="15.0" fill="rgb(224,150,23)" rx="2" ry="2" />
<text  x="1027.92" y="751.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1061" width="11.6" height="15.0" fill="rgb(240,168,4)" rx="2" ry="2" />
<text  x="1016.30" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="1189" width="12.3" height="15.0" fill="rgb(238,29,17)" rx="2" ry="2" />
<text  x="210.71" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (760,057 samples, 1.98%)</title><rect x="927.4" y="1925" width="23.3" height="15.0" fill="rgb(240,85,0)" rx="2" ry="2" />
<text  x="930.38" y="1935.5" >d..</text>
</g>
<g >
<title>boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1525" width="6.9" height="15.0" fill="rgb(248,203,38)" rx="2" ry="2" />
<text  x="1027.92" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (6,058,823 samples, 15.78%)</title><rect x="517.7" y="1493" width="186.2" height="15.0" fill="rgb(254,133,29)" rx="2" ry="2" />
<text  x="520.66" y="1503.5" >boost::asio::detail::exe..</text>
</g>
<g >
<title>std::__invoke&lt;main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1941" width="635.7" height="15.0" fill="rgb(241,17,4)" rx="2" ry="2" />
<text  x="170.50" y="1951.5" >std::__invoke&lt;main::{lambda</text>
</g>
<g >
<title>___sys_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="453" width="17.4" height="15.0" fill="rgb(249,188,0)" rx="2" ry="2" />
<text  x="998.94" y="463.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_composed_op&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1189" width="13.7" height="15.0" fill="rgb(232,169,8)" rx="2" ry="2" />
<text  x="427.11" y="1199.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1365" width="22.5" height="15.0" fill="rgb(211,197,22)" rx="2" ry="2" />
<text  x="891.14" y="1375.5" >s..</text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::any_executor (871,147 samples, 2.27%)</title><rect x="732.2" y="1765" width="26.8" height="15.0" fill="rgb(247,35,34)" rx="2" ry="2" />
<text  x="735.19" y="1775.5" >b..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1285" width="44.3" height="15.0" fill="rgb(230,175,25)" rx="2" ry="2" />
<text  x="203.41" y="1295.5" >std:..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_write_op::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="757" width="17.4" height="15.0" fill="rgb(241,142,17)" rx="2" ry="2" />
<text  x="998.94" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (377,915 samples, 0.98%)</title><rect x="1013.3" y="661" width="11.6" height="15.0" fill="rgb(209,59,35)" rx="2" ry="2" />
<text  x="1016.30" y="671.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;model::Office  (198,555 samples, 0.52%)</title><rect x="821.5" y="1941" width="6.1" height="15.0" fill="rgb(249,4,39)" rx="2" ry="2" />
<text  x="824.50" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, void, boost::asio::io_context, boost::asio::executor, void&gt;::handler_work_base (280,330 samples, 0.73%)</title><rect x="409.3" y="1765" width="8.6" height="15.0" fill="rgb(231,78,3)" rx="2" ry="2" />
<text  x="412.28" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt;::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1141" width="6.9" height="15.0" fill="rgb(238,128,22)" rx="2" ry="2" />
<text  x="1027.92" y="1151.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1445" width="22.5" height="15.0" fill="rgb(217,66,52)" rx="2" ry="2" />
<text  x="520.66" y="1455.5" >b..</text>
</g>
<g >
<title>boost::asio::any_io_executor::any_io_executor&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1093" width="5.1" height="15.0" fill="rgb(217,0,42)" rx="2" ry="2" />
<text  x="915.93" y="1103.5" ></text>
</g>
<g >
<title>task_work_run (731,150 samples, 1.90%)</title><rect x="888.1" y="1125" width="22.5" height="15.0" fill="rgb(206,44,13)" rx="2" ry="2" />
<text  x="891.14" y="1135.5" >t..</text>
</g>
<g >
<title>std::__invoke&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1349" width="11.2" height="15.0" fill="rgb(251,145,24)" rx="2" ry="2" />
<text  x="1175.49" y="1359.5" ></text>
</g>
<g >
<title>native_write_msr (86,230 samples, 0.22%)</title><rect x="145.8" y="1829" width="2.6" height="15.0" fill="rgb(220,20,14)" rx="2" ry="2" />
<text  x="148.75" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (731,150 samples, 1.90%)</title><rect x="888.1" y="1173" width="22.5" height="15.0" fill="rgb(236,163,49)" rx="2" ry="2" />
<text  x="891.14" y="1183.5" >e..</text>
</g>
<g >
<title>tcp_established_options (731,150 samples, 1.90%)</title><rect x="888.1" y="981" width="22.5" height="15.0" fill="rgb(251,77,18)" rx="2" ry="2" />
<text  x="891.14" y="991.5" >t..</text>
</g>
<g >
<title>boost::empty_::empty_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0u, false&gt;::operator= (199,055 samples, 0.52%)</title><rect x="207.7" y="437" width="6.1" height="15.0" fill="rgb(209,183,23)" rx="2" ry="2" />
<text  x="210.71" y="447.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1893" width="11.6" height="15.0" fill="rgb(235,226,2)" rx="2" ry="2" />
<text  x="1016.30" y="1903.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (245,495 samples, 0.64%)</title><rect x="623.2" y="1157" width="7.6" height="15.0" fill="rgb(252,40,21)" rx="2" ry="2" />
<text  x="626.24" y="1167.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::async_write_some_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1093" width="11.6" height="15.0" fill="rgb(251,165,18)" rx="2" ry="2" />
<text  x="1016.30" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1077" width="68.8" height="15.0" fill="rgb(249,59,18)" rx="2" ry="2" />
<text  x="543.19" y="1087.5" >std::__..</text>
</g>
<g >
<title>remove_wait_queue (252,217 samples, 0.66%)</title><rect x="532.4" y="981" width="7.8" height="15.0" fill="rgb(251,19,53)" rx="2" ry="2" />
<text  x="535.44" y="991.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1525" width="50.4" height="15.0" fill="rgb(222,149,28)" rx="2" ry="2" />
<text  x="197.29" y="1535.5" >boost..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,780,498 samples, 7.24%)</title><rect x="1075.0" y="2037" width="85.5" height="15.0" fill="rgb(234,115,37)" rx="2" ry="2" />
<text  x="1078.02" y="2047.5" >entry_SYSC..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_write_op::operator (674,489 samples, 1.76%)</title><rect x="578.3" y="549" width="20.8" height="15.0" fill="rgb(216,45,10)" rx="2" ry="2" />
<text  x="581.34" y="559.5" ></text>
</g>
<g >
<title>ip_rcv (199,055 samples, 0.52%)</title><rect x="526.3" y="597" width="6.1" height="15.0" fill="rgb(209,157,42)" rx="2" ry="2" />
<text  x="529.32" y="607.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt; (558,783 samples, 1.46%)</title><rect x="303.9" y="1013" width="17.1" height="15.0" fill="rgb(213,100,30)" rx="2" ry="2" />
<text  x="306.86" y="1023.5" ></text>
</g>
<g >
<title>boost::asio::make_strand&lt;boost::asio::io_context&gt; (237,370 samples, 0.62%)</title><rect x="200.4" y="1237" width="7.3" height="15.0" fill="rgb(247,168,51)" rx="2" ry="2" />
<text  x="203.41" y="1247.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1429" width="13.7" height="15.0" fill="rgb(210,31,28)" rx="2" ry="2" />
<text  x="427.11" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (239,731 samples, 0.62%)</title><rect x="880.8" y="1813" width="7.3" height="15.0" fill="rgb(215,185,49)" rx="2" ry="2" />
<text  x="883.77" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_dispatch_with_executor&lt;boost::asio::any_io_executor&gt;::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1333" width="6.9" height="15.0" fill="rgb(252,57,1)" rx="2" ry="2" />
<text  x="1027.92" y="1343.5" ></text>
</g>
<g >
<title>__handle_mm_fault (245,495 samples, 0.64%)</title><rect x="988.4" y="1957" width="7.5" height="15.0" fill="rgb(213,160,2)" rx="2" ry="2" />
<text  x="991.39" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="869" width="17.4" height="15.0" fill="rgb(207,152,24)" rx="2" ry="2" />
<text  x="998.94" y="879.5" ></text>
</g>
<g >
<title>____sys_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="341" width="12.0" height="15.0" fill="rgb(244,48,38)" rx="2" ry="2" />
<text  x="1163.49" y="351.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1829" width="6.9" height="15.0" fill="rgb(250,71,28)" rx="2" ry="2" />
<text  x="1027.92" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::async_move_accept&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (244,735 samples, 0.64%)</title><rect x="828.5" y="1285" width="7.6" height="15.0" fill="rgb(227,209,18)" rx="2" ry="2" />
<text  x="831.53" y="1295.5" ></text>
</g>
<g >
<title>tcp_write_xmit (199,055 samples, 0.52%)</title><rect x="526.3" y="869" width="6.1" height="15.0" fill="rgb(218,217,26)" rx="2" ry="2" />
<text  x="529.32" y="879.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1573" width="17.4" height="15.0" fill="rgb(231,21,39)" rx="2" ry="2" />
<text  x="998.94" y="1583.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (244,735 samples, 0.64%)</title><rect x="828.5" y="1221" width="7.6" height="15.0" fill="rgb(254,82,20)" rx="2" ry="2" />
<text  x="831.53" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1861" width="11.6" height="15.0" fill="rgb(206,126,17)" rx="2" ry="2" />
<text  x="1016.30" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (377,915 samples, 0.98%)</title><rect x="1013.3" y="1941" width="11.6" height="15.0" fill="rgb(209,24,3)" rx="2" ry="2" />
<text  x="1016.30" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1029" width="12.0" height="15.0" fill="rgb(209,36,46)" rx="2" ry="2" />
<text  x="1163.49" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1125" width="17.4" height="15.0" fill="rgb(237,22,26)" rx="2" ry="2" />
<text  x="998.94" y="1135.5" ></text>
</g>
<g >
<title>process_backlog (199,055 samples, 0.52%)</title><rect x="526.3" y="645" width="6.1" height="15.0" fill="rgb(226,1,50)" rx="2" ry="2" />
<text  x="529.32" y="655.5" ></text>
</g>
<g >
<title>x86_pmu_enable_all (5,696 samples, 0.01%)</title><rect x="148.4" y="1829" width="0.2" height="15.0" fill="rgb(222,139,19)" rx="2" ry="2" />
<text  x="151.40" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="1685" width="6.9" height="15.0" fill="rgb(206,29,36)" rx="2" ry="2" />
<text  x="1027.92" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (199,526 samples, 0.52%)</title><rect x="803.2" y="1989" width="6.1" height="15.0" fill="rgb(239,29,26)" rx="2" ry="2" />
<text  x="806.16" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1493" width="12.0" height="15.0" fill="rgb(224,158,22)" rx="2" ry="2" />
<text  x="1163.49" y="1503.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,512,018 samples, 3.94%)</title><rect x="1099.8" y="1941" width="46.5" height="15.0" fill="rgb(232,126,36)" rx="2" ry="2" />
<text  x="1102.80" y="1951.5" >try_..</text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::realloc_target (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1077" width="33.2" height="15.0" fill="rgb(220,164,11)" rx="2" ry="2" />
<text  x="379.10" y="1087.5" >bo..</text>
</g>
<g >
<title>ip_local_deliver (377,915 samples, 0.98%)</title><rect x="1013.3" y="165" width="11.6" height="15.0" fill="rgb(244,22,54)" rx="2" ry="2" />
<text  x="1016.30" y="175.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="1253" width="6.9" height="15.0" fill="rgb(220,13,50)" rx="2" ry="2" />
<text  x="839.05" y="1263.5" ></text>
</g>
<g >
<title>boost::beast::detail::tuple_impl&lt;boost::mp11::integer_sequence&lt;unsigned long, 0ul&gt;, std::shared_ptr&lt;http_server::SessionBase&gt; &gt;::~tuple_impl (733,234 samples, 1.91%)</title><rect x="517.7" y="1317" width="22.5" height="15.0" fill="rgb(211,113,11)" rx="2" ry="2" />
<text  x="520.66" y="1327.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1589" width="17.4" height="15.0" fill="rgb(216,218,4)" rx="2" ry="2" />
<text  x="998.94" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (606,296 samples, 1.58%)</title><rect x="171.6" y="1701" width="18.6" height="15.0" fill="rgb(215,222,19)" rx="2" ry="2" />
<text  x="174.57" y="1711.5" ></text>
</g>
<g >
<title>operator new (165,800 samples, 0.43%)</title><rect x="912.9" y="1045" width="5.1" height="15.0" fill="rgb(254,83,3)" rx="2" ry="2" />
<text  x="915.93" y="1055.5" ></text>
</g>
<g >
<title>__handle_mm_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="1941" width="7.2" height="15.0" fill="rgb(235,195,25)" rx="2" ry="2" />
<text  x="977.02" y="1951.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1125" width="68.8" height="15.0" fill="rgb(253,2,14)" rx="2" ry="2" />
<text  x="543.19" y="1135.5" >boost::..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (398,423 samples, 1.04%)</title><rect x="868.5" y="1685" width="12.3" height="15.0" fill="rgb(227,66,30)" rx="2" ry="2" />
<text  x="871.52" y="1695.5" ></text>
</g>
<g >
<title>do_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1893" width="6.2" height="15.0" fill="rgb(218,226,5)" rx="2" ry="2" />
<text  x="45.34" y="1903.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1605" width="17.4" height="15.0" fill="rgb(238,152,50)" rx="2" ry="2" />
<text  x="998.94" y="1615.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1493" width="6.9" height="15.0" fill="rgb(217,205,1)" rx="2" ry="2" />
<text  x="1027.92" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="1093" width="6.9" height="15.0" fill="rgb(210,201,11)" rx="2" ry="2" />
<text  x="1027.92" y="1103.5" ></text>
</g>
<g >
<title>ip_rcv (364,717 samples, 0.95%)</title><rect x="1172.5" y="117" width="11.2" height="15.0" fill="rgb(249,33,30)" rx="2" ry="2" />
<text  x="1175.49" y="127.5" ></text>
</g>
<g >
<title>do_page_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="2005" width="7.2" height="15.0" fill="rgb(223,169,45)" rx="2" ry="2" />
<text  x="977.02" y="2015.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1749" width="12.0" height="15.0" fill="rgb(249,179,30)" rx="2" ry="2" />
<text  x="1163.49" y="1759.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1701" width="6.3" height="15.0" fill="rgb(237,154,33)" rx="2" ry="2" />
<text  x="472.66" y="1711.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::work_started (75,343 samples, 0.20%)</title><rect x="910.6" y="1701" width="2.3" height="15.0" fill="rgb(223,67,6)" rx="2" ry="2" />
<text  x="913.61" y="1711.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1477" width="12.0" height="15.0" fill="rgb(251,166,8)" rx="2" ry="2" />
<text  x="1163.49" y="1487.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1621" width="13.7" height="15.0" fill="rgb(244,193,52)" rx="2" ry="2" />
<text  x="427.11" y="1631.5" ></text>
</g>
<g >
<title>boost::beast::http::async_read&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1253" width="13.7" height="15.0" fill="rgb(218,111,26)" rx="2" ry="2" />
<text  x="427.11" y="1263.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1397" width="17.4" height="15.0" fill="rgb(226,140,37)" rx="2" ry="2" />
<text  x="998.94" y="1407.5" ></text>
</g>
<g >
<title>http_server::SessionBase::~SessionBase (733,234 samples, 1.91%)</title><rect x="517.7" y="1157" width="22.5" height="15.0" fill="rgb(221,214,19)" rx="2" ry="2" />
<text  x="520.66" y="1167.5" >h..</text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1381" width="5.4" height="15.0" fill="rgb(232,209,1)" rx="2" ry="2" />
<text  x="724.29" y="1391.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1077" width="6.9" height="15.0" fill="rgb(234,181,35)" rx="2" ry="2" />
<text  x="1027.92" y="1087.5" ></text>
</g>
<g >
<title>inet_release (731,150 samples, 1.90%)</title><rect x="888.1" y="1045" width="22.5" height="15.0" fill="rgb(228,120,23)" rx="2" ry="2" />
<text  x="891.14" y="1055.5" >i..</text>
</g>
<g >
<title>tcp_data_queue (199,055 samples, 0.52%)</title><rect x="526.3" y="469" width="6.1" height="15.0" fill="rgb(217,125,6)" rx="2" ry="2" />
<text  x="529.32" y="479.5" ></text>
</g>
<g >
<title>boost::beast::detail::make_work_guard&lt;boost::asio::any_io_executor&gt; (404,605 samples, 1.05%)</title><rect x="291.4" y="1093" width="12.5" height="15.0" fill="rgb(217,136,42)" rx="2" ry="2" />
<text  x="294.43" y="1103.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;boost::asio::detail::strand_executor_service::strand_impl&gt;::shared_ptr (445,208 samples, 1.16%)</title><rect x="424.1" y="613" width="13.7" height="15.0" fill="rgb(240,98,29)" rx="2" ry="2" />
<text  x="427.11" y="623.5" ></text>
</g>
<g >
<title>sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="437" width="12.0" height="15.0" fill="rgb(249,59,22)" rx="2" ry="2" />
<text  x="1163.49" y="447.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1893" width="6.9" height="15.0" fill="rgb(212,132,0)" rx="2" ry="2" />
<text  x="1027.92" y="1903.5" ></text>
</g>
<g >
<title>__schedule (552,712 samples, 1.44%)</title><rect x="786.2" y="1701" width="17.0" height="15.0" fill="rgb(214,130,22)" rx="2" ry="2" />
<text  x="789.17" y="1711.5" ></text>
</g>
<g >
<title>__handle_mm_fault (209,856 samples, 0.55%)</title><rect x="48.5" y="1909" width="6.4" height="15.0" fill="rgb(251,130,27)" rx="2" ry="2" />
<text  x="51.48" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_send::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="645" width="17.4" height="15.0" fill="rgb(246,35,2)" rx="2" ry="2" />
<text  x="998.94" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (199,055 samples, 0.52%)</title><rect x="526.3" y="501" width="6.1" height="15.0" fill="rgb(239,200,13)" rx="2" ry="2" />
<text  x="529.32" y="511.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (199,055 samples, 0.52%)</title><rect x="526.3" y="821" width="6.1" height="15.0" fill="rgb(249,218,46)" rx="2" ry="2" />
<text  x="529.32" y="831.5" ></text>
</g>
<g >
<title>__ip_finish_output (364,717 samples, 0.95%)</title><rect x="1172.5" y="277" width="11.2" height="15.0" fill="rgb(253,106,47)" rx="2" ry="2" />
<text  x="1175.49" y="287.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1653" width="11.6" height="15.0" fill="rgb(245,127,39)" rx="2" ry="2" />
<text  x="1016.30" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (199,055 samples, 0.52%)</title><rect x="207.7" y="485" width="6.1" height="15.0" fill="rgb(252,131,37)" rx="2" ry="2" />
<text  x="210.71" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (20,733 samples, 0.05%)</title><rect x="159.9" y="1877" width="0.6" height="15.0" fill="rgb(242,95,11)" rx="2" ry="2" />
<text  x="162.90" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op (390,290 samples, 1.02%)</title><rect x="1160.5" y="501" width="12.0" height="15.0" fill="rgb(248,140,29)" rx="2" ry="2" />
<text  x="1163.49" y="511.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (469,881 samples, 1.22%)</title><rect x="828.5" y="1749" width="14.5" height="15.0" fill="rgb(243,12,7)" rx="2" ry="2" />
<text  x="831.53" y="1759.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::key_compare::operator (199,368 samples, 0.52%)</title><rect x="868.5" y="1157" width="6.1" height="15.0" fill="rgb(219,154,37)" rx="2" ry="2" />
<text  x="871.52" y="1167.5" ></text>
</g>
<g >
<title>ip_queue_xmit (390,290 samples, 1.02%)</title><rect x="1160.5" y="197" width="12.0" height="15.0" fill="rgb(227,97,1)" rx="2" ry="2" />
<text  x="1163.49" y="207.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1717" width="50.4" height="15.0" fill="rgb(211,144,3)" rx="2" ry="2" />
<text  x="197.29" y="1727.5" >boost..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="2053" width="11.2" height="15.0" fill="rgb(247,194,37)" rx="2" ry="2" />
<text  x="1175.49" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_work_guard&lt;boost::asio::any_io_executor, void&gt;::get_executor (445,208 samples, 1.16%)</title><rect x="424.1" y="709" width="13.7" height="15.0" fill="rgb(209,228,7)" rx="2" ry="2" />
<text  x="427.11" y="719.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (20,543 samples, 0.05%)</title><rect x="148.6" y="1845" width="0.6" height="15.0" fill="rgb(245,115,54)" rx="2" ry="2" />
<text  x="151.58" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1461" width="13.7" height="15.0" fill="rgb(225,101,4)" rx="2" ry="2" />
<text  x="427.11" y="1471.5" ></text>
</g>
<g >
<title>boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;::setup (674,489 samples, 1.76%)</title><rect x="578.3" y="453" width="20.8" height="15.0" fill="rgb(238,34,38)" rx="2" ry="2" />
<text  x="581.34" y="463.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="549" width="12.3" height="15.0" fill="rgb(237,13,53)" rx="2" ry="2" />
<text  x="210.71" y="559.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1509" width="22.5" height="15.0" fill="rgb(222,188,23)" rx="2" ry="2" />
<text  x="891.14" y="1519.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1189" width="11.2" height="15.0" fill="rgb(213,70,29)" rx="2" ry="2" />
<text  x="1175.49" y="1199.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1605" width="6.9" height="15.0" fill="rgb(248,207,54)" rx="2" ry="2" />
<text  x="1027.92" y="1615.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::task_cleanup::~task_cleanup (9,135 samples, 0.02%)</title><rect x="168.4" y="1845" width="0.3" height="15.0" fill="rgb(212,58,9)" rx="2" ry="2" />
<text  x="171.39" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="949" width="13.7" height="15.0" fill="rgb(233,35,32)" rx="2" ry="2" />
<text  x="427.11" y="959.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::put&lt;boost::asio::mutable_buffer&gt; (199,368 samples, 0.52%)</title><rect x="868.5" y="1301" width="6.1" height="15.0" fill="rgb(207,176,21)" rx="2" ry="2" />
<text  x="871.52" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1317" width="13.7" height="15.0" fill="rgb(234,174,37)" rx="2" ry="2" />
<text  x="427.11" y="1327.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="533" width="12.3" height="15.0" fill="rgb(205,137,20)" rx="2" ry="2" />
<text  x="210.71" y="543.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1845" width="6.9" height="15.0" fill="rgb(236,12,23)" rx="2" ry="2" />
<text  x="1027.92" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1461" width="6.9" height="15.0" fill="rgb(225,129,13)" rx="2" ry="2" />
<text  x="1027.92" y="1471.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="725" width="6.9" height="15.0" fill="rgb(240,26,39)" rx="2" ry="2" />
<text  x="1027.92" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (198,769 samples, 0.52%)</title><rect x="809.3" y="1797" width="6.1" height="15.0" fill="rgb(210,148,40)" rx="2" ry="2" />
<text  x="812.29" y="1807.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1333" width="14.5" height="15.0" fill="rgb(206,41,11)" rx="2" ry="2" />
<text  x="446.93" y="1343.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_dispatch_with_executor&lt;boost::asio::any_io_executor&gt;::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="1285" width="6.9" height="15.0" fill="rgb(250,1,5)" rx="2" ry="2" />
<text  x="839.05" y="1295.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1381" width="12.0" height="15.0" fill="rgb(212,12,54)" rx="2" ry="2" />
<text  x="1163.49" y="1391.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;boost::asio::any_io_executor&gt;::optional_base (252,217 samples, 0.66%)</title><rect x="270.2" y="1701" width="7.8" height="15.0" fill="rgb(208,11,3)" rx="2" ry="2" />
<text  x="273.25" y="1711.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt; &gt;::do_perform (390,290 samples, 1.02%)</title><rect x="1160.5" y="469" width="12.0" height="15.0" fill="rgb(224,229,50)" rx="2" ry="2" />
<text  x="1163.49" y="479.5" ></text>
</g>
<g >
<title>__close (731,150 samples, 1.90%)</title><rect x="888.1" y="1189" width="22.5" height="15.0" fill="rgb(231,90,27)" rx="2" ry="2" />
<text  x="891.14" y="1199.5" >_..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (6,174,371 samples, 16.08%)</title><rect x="517.7" y="1621" width="189.7" height="15.0" fill="rgb(229,213,35)" rx="2" ry="2" />
<text  x="520.66" y="1631.5" >boost::asio::asio_handle..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="805" width="11.6" height="15.0" fill="rgb(253,70,15)" rx="2" ry="2" />
<text  x="1016.30" y="815.5" ></text>
</g>
<g >
<title>native_sched_clock (588,445 samples, 1.53%)</title><rect x="127.7" y="1829" width="18.1" height="15.0" fill="rgb(231,85,47)" rx="2" ry="2" />
<text  x="130.67" y="1839.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_string&lt;true, true&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1717" width="6.1" height="15.0" fill="rgb(240,111,52)" rx="2" ry="2" />
<text  x="818.40" y="1727.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1285" width="163.7" height="15.0" fill="rgb(238,57,52)" rx="2" ry="2" />
<text  x="543.19" y="1295.5" >boost::beast::basic_s..</text>
</g>
<g >
<title>irq_exit (244,735 samples, 0.64%)</title><rect x="828.5" y="1141" width="7.6" height="15.0" fill="rgb(240,153,10)" rx="2" ry="2" />
<text  x="831.53" y="1151.5" ></text>
</g>
<g >
<title>process_backlog (564,935 samples, 1.47%)</title><rect x="995.9" y="101" width="17.4" height="15.0" fill="rgb(219,11,3)" rx="2" ry="2" />
<text  x="998.94" y="111.5" ></text>
</g>
<g >
<title>update_load_avg (467,635 samples, 1.22%)</title><rect x="110.5" y="1845" width="14.4" height="15.0" fill="rgb(252,169,6)" rx="2" ry="2" />
<text  x="113.50" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="389" width="12.0" height="15.0" fill="rgb(226,164,23)" rx="2" ry="2" />
<text  x="1163.49" y="399.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1989" width="17.4" height="15.0" fill="rgb(213,11,13)" rx="2" ry="2" />
<text  x="998.94" y="1999.5" ></text>
</g>
<g >
<title>select_task_rq_fair (199,240 samples, 0.52%)</title><rect x="1099.8" y="1925" width="6.1" height="15.0" fill="rgb(238,67,9)" rx="2" ry="2" />
<text  x="1102.80" y="1935.5" ></text>
</g>
<g >
<title>____fput (731,150 samples, 1.90%)</title><rect x="888.1" y="1109" width="22.5" height="15.0" fill="rgb(242,150,35)" rx="2" ry="2" />
<text  x="891.14" y="1119.5" >_..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::strand (245,495 samples, 0.64%)</title><rect x="707.4" y="1685" width="7.6" height="15.0" fill="rgb(220,175,0)" rx="2" ry="2" />
<text  x="710.45" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::bounded_range&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, boost::intrusive::detail::key_nodeptr_comp&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::key_compare, boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (199,368 samples, 0.52%)</title><rect x="868.5" y="1173" width="6.1" height="15.0" fill="rgb(249,158,27)" rx="2" ry="2" />
<text  x="871.52" y="1183.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment::next&lt;1ul&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1077" width="5.4" height="15.0" fill="rgb(206,132,4)" rx="2" ry="2" />
<text  x="724.29" y="1087.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Read (445,208 samples, 1.16%)</title><rect x="424.1" y="1349" width="13.7" height="15.0" fill="rgb(230,13,41)" rx="2" ry="2" />
<text  x="427.11" y="1359.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1573" width="22.5" height="15.0" fill="rgb(236,61,46)" rx="2" ry="2" />
<text  x="891.14" y="1583.5" >b..</text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::begin (311,653 samples, 0.81%)</title><rect x="540.2" y="581" width="9.6" height="15.0" fill="rgb(230,225,53)" rx="2" ry="2" />
<text  x="543.19" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::thread_info_base::deallocate (632,043 samples, 1.65%)</title><rect x="849.1" y="1829" width="19.4" height="15.0" fill="rgb(235,192,18)" rx="2" ry="2" />
<text  x="852.09" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::call_stack&lt;boost::asio::detail::thread_context, boost::asio::detail::thread_info_base&gt;::context::context (28,776 samples, 0.07%)</title><rect x="167.5" y="1861" width="0.9" height="15.0" fill="rgb(205,103,29)" rx="2" ry="2" />
<text  x="170.50" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (564,935 samples, 1.47%)</title><rect x="995.9" y="517" width="17.4" height="15.0" fill="rgb(209,222,25)" rx="2" ry="2" />
<text  x="998.94" y="527.5" ></text>
</g>
<g >
<title>do_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1893" width="6.1" height="15.0" fill="rgb(235,203,8)" rx="2" ry="2" />
<text  x="70.21" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="645" width="12.3" height="15.0" fill="rgb(213,57,44)" rx="2" ry="2" />
<text  x="210.71" y="655.5" ></text>
</g>
<g >
<title>boost::beast::http::header&lt;true, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::target (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1109" width="33.2" height="15.0" fill="rgb(238,46,36)" rx="2" ry="2" />
<text  x="379.10" y="1119.5" >bo..</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1317" width="44.3" height="15.0" fill="rgb(237,50,36)" rx="2" ry="2" />
<text  x="203.41" y="1327.5" >std:..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="1221" width="6.9" height="15.0" fill="rgb(206,75,30)" rx="2" ry="2" />
<text  x="839.05" y="1231.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="917" width="12.3" height="15.0" fill="rgb(221,15,7)" rx="2" ry="2" />
<text  x="210.71" y="927.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_accept (606,296 samples, 1.58%)</title><rect x="171.6" y="1765" width="18.6" height="15.0" fill="rgb(235,131,52)" rx="2" ry="2" />
<text  x="174.57" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (564,935 samples, 1.47%)</title><rect x="995.9" y="1765" width="17.4" height="15.0" fill="rgb(210,88,10)" rx="2" ry="2" />
<text  x="998.94" y="1775.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::copy_construct (606,296 samples, 1.58%)</title><rect x="549.8" y="501" width="18.6" height="15.0" fill="rgb(233,155,5)" rx="2" ry="2" />
<text  x="552.77" y="511.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1733" width="50.4" height="15.0" fill="rgb(251,128,28)" rx="2" ry="2" />
<text  x="197.29" y="1743.5" >boost..</text>
</g>
<g >
<title>http_handler::RequestHandler::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1349" width="11.6" height="15.0" fill="rgb(226,180,41)" rx="2" ry="2" />
<text  x="1016.30" y="1359.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1765" width="6.9" height="15.0" fill="rgb(227,20,35)" rx="2" ry="2" />
<text  x="1027.92" y="1775.5" ></text>
</g>
<g >
<title>__sys_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="533" width="11.2" height="15.0" fill="rgb(221,187,27)" rx="2" ry="2" />
<text  x="1175.49" y="543.5" ></text>
</g>
<g >
<title>__do_munmap (199,763 samples, 0.52%)</title><rect x="23.9" y="1941" width="6.2" height="15.0" fill="rgb(227,64,51)" rx="2" ry="2" />
<text  x="26.92" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1813" width="17.4" height="15.0" fill="rgb(227,1,38)" rx="2" ry="2" />
<text  x="998.94" y="1823.5" ></text>
</g>
<g >
<title>__update_load_avg_blocked_se (108,766 samples, 0.28%)</title><rect x="1105.9" y="1877" width="3.4" height="15.0" fill="rgb(250,191,40)" rx="2" ry="2" />
<text  x="1108.92" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1221" width="11.6" height="15.0" fill="rgb(209,192,27)" rx="2" ry="2" />
<text  x="1016.30" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (564,935 samples, 1.47%)</title><rect x="995.9" y="613" width="17.4" height="15.0" fill="rgb(207,159,2)" rx="2" ry="2" />
<text  x="998.94" y="623.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1573" width="126.5" height="15.0" fill="rgb(252,41,12)" rx="2" ry="2" />
<text  x="285.81" y="1583.5" >boost::asio::de..</text>
</g>
<g >
<title>finish_task_switch (13,264 samples, 0.03%)</title><rect x="827.6" y="1893" width="0.4" height="15.0" fill="rgb(217,46,34)" rx="2" ry="2" />
<text  x="830.60" y="1903.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;void&gt; &gt; (115,548 samples, 0.30%)</title><rect x="703.9" y="1541" width="3.5" height="15.0" fill="rgb(211,86,1)" rx="2" ry="2" />
<text  x="706.90" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (6,174,371 samples, 16.08%)</title><rect x="517.7" y="1589" width="189.7" height="15.0" fill="rgb(245,20,40)" rx="2" ry="2" />
<text  x="520.66" y="1599.5" >boost::asio::detail::str..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="229" width="6.9" height="15.0" fill="rgb(225,69,20)" rx="2" ry="2" />
<text  x="1027.92" y="239.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1557" width="11.9" height="15.0" fill="rgb(243,198,3)" rx="2" ry="2" />
<text  x="915.93" y="1567.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (377,915 samples, 0.98%)</title><rect x="1013.3" y="517" width="11.6" height="15.0" fill="rgb(215,137,16)" rx="2" ry="2" />
<text  x="1016.30" y="527.5" ></text>
</g>
<g >
<title>split_vma (160,702 samples, 0.42%)</title><rect x="963.0" y="1957" width="4.9" height="15.0" fill="rgb(213,51,24)" rx="2" ry="2" />
<text  x="965.98" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="949" width="8.4" height="15.0" fill="rgb(208,35,43)" rx="2" ry="2" />
<text  x="446.93" y="959.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (377,915 samples, 0.98%)</title><rect x="1013.3" y="1925" width="11.6" height="15.0" fill="rgb(226,124,0)" rx="2" ry="2" />
<text  x="1016.30" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output2 (390,290 samples, 1.02%)</title><rect x="1160.5" y="101" width="12.0" height="15.0" fill="rgb(254,38,43)" rx="2" ry="2" />
<text  x="1163.49" y="111.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_op::operator (271,965 samples, 0.71%)</title><rect x="443.9" y="981" width="8.4" height="15.0" fill="rgb(222,201,39)" rx="2" ry="2" />
<text  x="446.93" y="991.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1589" width="11.6" height="15.0" fill="rgb(242,102,27)" rx="2" ry="2" />
<text  x="1016.30" y="1599.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (471,598 samples, 1.23%)</title><rect x="443.9" y="1365" width="14.5" height="15.0" fill="rgb(232,198,12)" rx="2" ry="2" />
<text  x="446.93" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1765" width="14.5" height="15.0" fill="rgb(233,146,33)" rx="2" ry="2" />
<text  x="831.53" y="1775.5" ></text>
</g>
<g >
<title>do_epoll_wait (788,165 samples, 2.05%)</title><rect x="778.9" y="1781" width="24.3" height="15.0" fill="rgb(253,170,52)" rx="2" ry="2" />
<text  x="781.93" y="1791.5" >d..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_move_accept_op&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1957" width="6.9" height="15.0" fill="rgb(216,192,41)" rx="2" ry="2" />
<text  x="1027.92" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::const_iterator (311,653 samples, 0.81%)</title><rect x="540.2" y="565" width="9.6" height="15.0" fill="rgb(252,142,17)" rx="2" ry="2" />
<text  x="543.19" y="575.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_document&lt;true&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1893" width="6.1" height="15.0" fill="rgb(218,136,41)" rx="2" ry="2" />
<text  x="818.40" y="1903.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1621" width="11.6" height="15.0" fill="rgb(239,137,50)" rx="2" ry="2" />
<text  x="1016.30" y="1631.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::consume (220,784 samples, 0.58%)</title><rect x="918.0" y="1397" width="6.8" height="15.0" fill="rgb(212,18,6)" rx="2" ry="2" />
<text  x="921.02" y="1407.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::begin (311,653 samples, 0.81%)</title><rect x="540.2" y="501" width="9.6" height="15.0" fill="rgb(226,83,17)" rx="2" ry="2" />
<text  x="543.19" y="511.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="773" width="6.9" height="15.0" fill="rgb(249,95,6)" rx="2" ry="2" />
<text  x="1027.92" y="783.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::ptr::reset (109,135 samples, 0.28%)</title><rect x="726.7" y="1653" width="3.3" height="15.0" fill="rgb(229,191,24)" rx="2" ry="2" />
<text  x="729.69" y="1663.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::recycling_allocator&lt;void, boost::asio::detail::thread_info_base::default_tag&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1829" width="40.5" height="15.0" fill="rgb(217,95,25)" rx="2" ry="2" />
<text  x="420.90" y="1839.5" >boo..</text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1413" width="12.0" height="15.0" fill="rgb(253,164,33)" rx="2" ry="2" />
<text  x="1163.49" y="1423.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::basic_parsed_list&lt;boost::beast::http::detail::opt_token_list_policy&gt;::const_iterator::const_iterator (645,076 samples, 1.68%)</title><rect x="350.1" y="1093" width="19.8" height="15.0" fill="rgb(216,50,31)" rx="2" ry="2" />
<text  x="353.06" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1493" width="14.5" height="15.0" fill="rgb(233,104,9)" rx="2" ry="2" />
<text  x="831.53" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (386,584 samples, 1.01%)</title><rect x="912.9" y="1701" width="11.9" height="15.0" fill="rgb(242,169,15)" rx="2" ry="2" />
<text  x="915.93" y="1711.5" ></text>
</g>
<g >
<title>__sys_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="469" width="17.4" height="15.0" fill="rgb(239,175,4)" rx="2" ry="2" />
<text  x="998.94" y="479.5" ></text>
</g>
<g >
<title>ip_output (564,935 samples, 1.47%)</title><rect x="995.9" y="245" width="17.4" height="15.0" fill="rgb(250,63,13)" rx="2" ry="2" />
<text  x="998.94" y="255.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1925" width="6.9" height="15.0" fill="rgb(214,123,8)" rx="2" ry="2" />
<text  x="1027.92" y="1935.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (91,926 samples, 0.24%)</title><rect x="145.8" y="1861" width="2.8" height="15.0" fill="rgb(233,29,34)" rx="2" ry="2" />
<text  x="148.75" y="1871.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::begin (271,965 samples, 0.71%)</title><rect x="443.9" y="757" width="8.4" height="15.0" fill="rgb(224,47,52)" rx="2" ry="2" />
<text  x="446.93" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (252,217 samples, 0.66%)</title><rect x="532.4" y="1029" width="7.8" height="15.0" fill="rgb(236,124,29)" rx="2" ry="2" />
<text  x="535.44" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1509" width="5.4" height="15.0" fill="rgb(212,138,4)" rx="2" ry="2" />
<text  x="724.29" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::buffer_sequence_begin&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt; (311,653 samples, 0.81%)</title><rect x="540.2" y="517" width="9.6" height="15.0" fill="rgb(219,94,23)" rx="2" ry="2" />
<text  x="543.19" y="527.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (21,389 samples, 0.06%)</title><rect x="103.7" y="1813" width="0.7" height="15.0" fill="rgb(218,25,38)" rx="2" ry="2" />
<text  x="106.73" y="1823.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="2021" width="11.6" height="15.0" fill="rgb(250,177,45)" rx="2" ry="2" />
<text  x="1016.30" y="2031.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1509" width="11.2" height="15.0" fill="rgb(227,90,25)" rx="2" ry="2" />
<text  x="1175.49" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::register_descriptor (112,054 samples, 0.29%)</title><rect x="244.7" y="1717" width="3.5" height="15.0" fill="rgb(217,157,31)" rx="2" ry="2" />
<text  x="247.73" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (390,290 samples, 1.02%)</title><rect x="1160.5" y="517" width="12.0" height="15.0" fill="rgb(248,117,0)" rx="2" ry="2" />
<text  x="1163.49" y="527.5" ></text>
</g>
<g >
<title>boost::beast::stable_async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1717" width="6.3" height="15.0" fill="rgb(207,211,36)" rx="2" ry="2" />
<text  x="472.66" y="1727.5" ></text>
</g>
<g >
<title>__schedule (9,135 samples, 0.02%)</title><rect x="168.4" y="1685" width="0.3" height="15.0" fill="rgb(230,90,17)" rx="2" ry="2" />
<text  x="171.39" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base (280,330 samples, 0.73%)</title><rect x="409.3" y="1717" width="8.6" height="15.0" fill="rgb(251,90,42)" rx="2" ry="2" />
<text  x="412.28" y="1727.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (31,025 samples, 0.08%)</title><rect x="110.5" y="1829" width="1.0" height="15.0" fill="rgb(229,173,53)" rx="2" ry="2" />
<text  x="113.50" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_common (199,055 samples, 0.52%)</title><rect x="526.3" y="325" width="6.1" height="15.0" fill="rgb(223,196,13)" rx="2" ry="2" />
<text  x="529.32" y="335.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::operator* (674,489 samples, 1.76%)</title><rect x="578.3" y="405" width="20.8" height="15.0" fill="rgb(221,13,44)" rx="2" ry="2" />
<text  x="581.34" y="415.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1413" width="6.1" height="15.0" fill="rgb(220,223,30)" rx="2" ry="2" />
<text  x="871.52" y="1423.5" ></text>
</g>
<g >
<title>ip_rcv (377,915 samples, 0.98%)</title><rect x="1013.3" y="197" width="11.6" height="15.0" fill="rgb(228,222,51)" rx="2" ry="2" />
<text  x="1016.30" y="207.5" ></text>
</g>
<g >
<title>__fput (731,150 samples, 1.90%)</title><rect x="888.1" y="1093" width="22.5" height="15.0" fill="rgb(221,24,33)" rx="2" ry="2" />
<text  x="891.14" y="1103.5" >_..</text>
</g>
<g >
<title>boost::beast::http::detail::run_write_msg_op::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1173" width="11.2" height="15.0" fill="rgb(223,87,15)" rx="2" ry="2" />
<text  x="1175.49" y="1183.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (48,822 samples, 0.13%)</title><rect x="730.0" y="1781" width="1.5" height="15.0" fill="rgb(229,149,10)" rx="2" ry="2" />
<text  x="733.04" y="1791.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1349" width="17.4" height="15.0" fill="rgb(227,133,46)" rx="2" ry="2" />
<text  x="998.94" y="1359.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_suffix&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;, boost::beast::buffers_suffix&lt;boost::asio::const_buffer&gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; &gt;::emplace&lt;2ul, boost::optional_ns::in_place_init_t const&amp;, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&amp;&gt; (311,653 samples, 0.81%)</title><rect x="540.2" y="629" width="9.6" height="15.0" fill="rgb(217,197,23)" rx="2" ry="2" />
<text  x="543.19" y="639.5" ></text>
</g>
<g >
<title>std::error_code::default_error_condition (20,679,395 samples, 53.87%)</title><rect x="167.5" y="2005" width="635.7" height="15.0" fill="rgb(213,78,16)" rx="2" ry="2" />
<text  x="170.50" y="2015.5" >std::error_code::default_error_condition</text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::any_io_executor&gt;::cancel (199,633 samples, 0.52%)</title><rect x="437.8" y="1445" width="6.1" height="15.0" fill="rgb(209,47,51)" rx="2" ry="2" />
<text  x="440.79" y="1455.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder1&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::system::error_code&gt; &gt; (109,135 samples, 0.28%)</title><rect x="726.7" y="1765" width="3.3" height="15.0" fill="rgb(221,23,37)" rx="2" ry="2" />
<text  x="729.69" y="1775.5" ></text>
</g>
<g >
<title>perf_event_mmap (102,347 samples, 0.27%)</title><rect x="91.6" y="1861" width="3.2" height="15.0" fill="rgb(234,133,4)" rx="2" ry="2" />
<text  x="94.62" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_accept_op (244,735 samples, 0.64%)</title><rect x="828.5" y="1269" width="7.6" height="15.0" fill="rgb(226,105,1)" rx="2" ry="2" />
<text  x="831.53" y="1279.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op (244,735 samples, 0.64%)</title><rect x="828.5" y="1237" width="7.6" height="15.0" fill="rgb(242,64,37)" rx="2" ry="2" />
<text  x="831.53" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_write_some&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="597" width="12.0" height="15.0" fill="rgb(208,25,38)" rx="2" ry="2" />
<text  x="1163.49" y="607.5" ></text>
</g>
<g >
<title>__do_munmap (200,583 samples, 0.52%)</title><rect x="1056.4" y="1925" width="6.1" height="15.0" fill="rgb(215,117,15)" rx="2" ry="2" />
<text  x="1059.37" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (204,803 samples, 0.53%)</title><rect x="715.0" y="1733" width="6.3" height="15.0" fill="rgb(209,51,51)" rx="2" ry="2" />
<text  x="717.99" y="1743.5" ></text>
</g>
<g >
<title>boost::beast::http::async_read_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="405" width="6.9" height="15.0" fill="rgb(209,40,44)" rx="2" ry="2" />
<text  x="1027.92" y="415.5" ></text>
</g>
<g >
<title>[unknown] (25,803,373 samples, 67.22%)</title><rect x="10.0" y="2053" width="793.2" height="15.0" fill="rgb(227,27,0)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>ip_queue_xmit (199,055 samples, 0.52%)</title><rect x="526.3" y="837" width="6.1" height="15.0" fill="rgb(207,1,26)" rx="2" ry="2" />
<text  x="529.32" y="847.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="789" width="6.9" height="15.0" fill="rgb(235,58,15)" rx="2" ry="2" />
<text  x="1027.92" y="799.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="757" width="12.3" height="15.0" fill="rgb(216,144,26)" rx="2" ry="2" />
<text  x="210.71" y="767.5" ></text>
</g>
<g >
<title>main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="2005" width="11.2" height="15.0" fill="rgb(249,17,8)" rx="2" ry="2" />
<text  x="1175.49" y="2015.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1541" width="11.2" height="15.0" fill="rgb(222,154,37)" rx="2" ry="2" />
<text  x="1175.49" y="1551.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1125" width="11.6" height="15.0" fill="rgb(244,73,14)" rx="2" ry="2" />
<text  x="1016.30" y="1135.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1301" width="5.4" height="15.0" fill="rgb(247,22,23)" rx="2" ry="2" />
<text  x="724.29" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1493" width="17.4" height="15.0" fill="rgb(250,215,19)" rx="2" ry="2" />
<text  x="998.94" y="1503.5" ></text>
</g>
<g >
<title>native_write_msr (30,285 samples, 0.08%)</title><rect x="90.7" y="1925" width="0.9" height="15.0" fill="rgb(230,29,40)" rx="2" ry="2" />
<text  x="93.69" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (364,717 samples, 0.95%)</title><rect x="1172.5" y="197" width="11.2" height="15.0" fill="rgb(213,229,14)" rx="2" ry="2" />
<text  x="1175.49" y="207.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (390,290 samples, 1.02%)</title><rect x="1160.5" y="245" width="12.0" height="15.0" fill="rgb(224,141,3)" rx="2" ry="2" />
<text  x="1163.49" y="255.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::~handler_work_base (19,781 samples, 0.05%)</title><rect x="759.0" y="1765" width="0.6" height="15.0" fill="rgb(244,32,14)" rx="2" ry="2" />
<text  x="761.97" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::prefer&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt; (404,605 samples, 1.05%)</title><rect x="291.4" y="1045" width="12.5" height="15.0" fill="rgb(245,19,22)" rx="2" ry="2" />
<text  x="294.43" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn_impl&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (75,343 samples, 0.20%)</title><rect x="910.6" y="1829" width="2.3" height="15.0" fill="rgb(249,210,23)" rx="2" ry="2" />
<text  x="913.61" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1557" width="11.2" height="15.0" fill="rgb(215,182,30)" rx="2" ry="2" />
<text  x="1175.49" y="1567.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1493" width="13.7" height="15.0" fill="rgb(232,216,14)" rx="2" ry="2" />
<text  x="427.11" y="1503.5" ></text>
</g>
<g >
<title>json_loader::ParseMaps (396,927 samples, 1.03%)</title><rect x="815.4" y="2005" width="12.2" height="15.0" fill="rgb(245,192,19)" rx="2" ry="2" />
<text  x="818.40" y="2015.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_some_op::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="805" width="12.0" height="15.0" fill="rgb(216,149,14)" rx="2" ry="2" />
<text  x="1163.49" y="815.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (398,423 samples, 1.04%)</title><rect x="868.5" y="1573" width="12.3" height="15.0" fill="rgb(230,128,11)" rx="2" ry="2" />
<text  x="871.52" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="645" width="6.9" height="15.0" fill="rgb(226,29,12)" rx="2" ry="2" />
<text  x="1027.92" y="655.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1973" width="17.4" height="15.0" fill="rgb(213,210,7)" rx="2" ry="2" />
<text  x="998.94" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (5,883 samples, 0.02%)</title><rect x="1189.8" y="1861" width="0.2" height="15.0" fill="rgb(239,97,51)" rx="2" ry="2" />
<text  x="1192.82" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output2 (377,915 samples, 0.98%)</title><rect x="1013.3" y="341" width="11.6" height="15.0" fill="rgb(244,128,10)" rx="2" ry="2" />
<text  x="1016.30" y="351.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1109" width="6.9" height="15.0" fill="rgb(215,107,6)" rx="2" ry="2" />
<text  x="839.05" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::scoped_lock::lock (9,135 samples, 0.02%)</title><rect x="168.4" y="1829" width="0.3" height="15.0" fill="rgb(218,44,48)" rx="2" ry="2" />
<text  x="171.39" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1381" width="163.7" height="15.0" fill="rgb(215,56,8)" rx="2" ry="2" />
<text  x="543.19" y="1391.5" >boost::asio::detail::..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="773" width="11.2" height="15.0" fill="rgb(254,95,25)" rx="2" ry="2" />
<text  x="1175.49" y="783.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_write_some&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="597" width="20.8" height="15.0" fill="rgb(249,153,25)" rx="2" ry="2" />
<text  x="581.34" y="607.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (204,803 samples, 0.53%)</title><rect x="715.0" y="1701" width="6.3" height="15.0" fill="rgb(232,192,0)" rx="2" ry="2" />
<text  x="717.99" y="1711.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="1157" width="6.9" height="15.0" fill="rgb(237,204,52)" rx="2" ry="2" />
<text  x="839.05" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1717" width="12.0" height="15.0" fill="rgb(234,203,17)" rx="2" ry="2" />
<text  x="1163.49" y="1727.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="629" width="12.3" height="15.0" fill="rgb(251,108,25)" rx="2" ry="2" />
<text  x="210.71" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (390,290 samples, 1.02%)</title><rect x="1160.5" y="405" width="12.0" height="15.0" fill="rgb(225,200,40)" rx="2" ry="2" />
<text  x="1163.49" y="415.5" ></text>
</g>
<g >
<title>__sys_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="613" width="11.6" height="15.0" fill="rgb(236,198,1)" rx="2" ry="2" />
<text  x="1016.30" y="623.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (201,887 samples, 0.53%)</title><rect x="369.9" y="1109" width="6.2" height="15.0" fill="rgb(237,172,3)" rx="2" ry="2" />
<text  x="372.89" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1829" width="12.0" height="15.0" fill="rgb(206,75,21)" rx="2" ry="2" />
<text  x="1163.49" y="1839.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1701" width="131.3" height="15.0" fill="rgb(216,206,43)" rx="2" ry="2" />
<text  x="281.00" y="1711.5" >boost_asio_execu..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (386,584 samples, 1.01%)</title><rect x="912.9" y="1893" width="11.9" height="15.0" fill="rgb(212,140,51)" rx="2" ry="2" />
<text  x="915.93" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (564,935 samples, 1.47%)</title><rect x="995.9" y="581" width="17.4" height="15.0" fill="rgb(251,117,17)" rx="2" ry="2" />
<text  x="998.94" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder1&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::system::error_code&gt;, std::allocator&lt;void&gt; &gt; (239,731 samples, 0.62%)</title><rect x="880.8" y="1781" width="7.3" height="15.0" fill="rgb(221,1,6)" rx="2" ry="2" />
<text  x="883.77" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn_impl&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1717" width="6.1" height="15.0" fill="rgb(244,140,43)" rx="2" ry="2" />
<text  x="461.42" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (244,735 samples, 0.64%)</title><rect x="828.5" y="1317" width="7.6" height="15.0" fill="rgb(223,156,2)" rx="2" ry="2" />
<text  x="831.53" y="1327.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::put (2,378,578 samples, 6.20%)</title><rect x="630.8" y="1205" width="73.1" height="15.0" fill="rgb(241,33,7)" rx="2" ry="2" />
<text  x="633.78" y="1215.5" >boost::b..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op (364,717 samples, 0.95%)</title><rect x="1172.5" y="661" width="11.2" height="15.0" fill="rgb(212,42,24)" rx="2" ry="2" />
<text  x="1175.49" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::tt_align_ns::a8&gt; &gt;::allocate (349,014 samples, 0.91%)</title><rect x="687.0" y="1141" width="10.8" height="15.0" fill="rgb(252,163,37)" rx="2" ry="2" />
<text  x="690.05" y="1151.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1173" width="6.9" height="15.0" fill="rgb(229,202,43)" rx="2" ry="2" />
<text  x="1027.92" y="1183.5" ></text>
</g>
<g >
<title>__wake_up (199,055 samples, 0.52%)</title><rect x="526.3" y="421" width="6.1" height="15.0" fill="rgb(242,205,44)" rx="2" ry="2" />
<text  x="529.32" y="431.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (404,605 samples, 1.05%)</title><rect x="291.4" y="1061" width="12.5" height="15.0" fill="rgb(253,227,39)" rx="2" ry="2" />
<text  x="294.43" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_clone (199,005 samples, 0.52%)</title><rect x="84.6" y="1989" width="6.1" height="15.0" fill="rgb(241,85,25)" rx="2" ry="2" />
<text  x="87.57" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (109,135 samples, 0.28%)</title><rect x="726.7" y="1685" width="3.3" height="15.0" fill="rgb(241,18,14)" rx="2" ry="2" />
<text  x="729.69" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1765" width="5.4" height="15.0" fill="rgb(248,195,20)" rx="2" ry="2" />
<text  x="724.29" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (364,717 samples, 0.95%)</title><rect x="1172.5" y="581" width="11.2" height="15.0" fill="rgb(207,106,29)" rx="2" ry="2" />
<text  x="1175.49" y="591.5" ></text>
</g>
<g >
<title>vma_link (406,182 samples, 1.06%)</title><rect x="1062.5" y="1925" width="12.5" height="15.0" fill="rgb(243,29,1)" rx="2" ry="2" />
<text  x="1065.54" y="1935.5" ></text>
</g>
<g >
<title>all (38,388,237 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(212,26,12)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>___sys_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="357" width="12.0" height="15.0" fill="rgb(208,10,48)" rx="2" ry="2" />
<text  x="1163.49" y="367.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (377,915 samples, 0.98%)</title><rect x="1013.3" y="421" width="11.6" height="15.0" fill="rgb(220,105,45)" rx="2" ry="2" />
<text  x="1016.30" y="431.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1061" width="6.9" height="15.0" fill="rgb(245,217,0)" rx="2" ry="2" />
<text  x="1027.92" y="1071.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (733,234 samples, 1.91%)</title><rect x="517.7" y="1173" width="22.5" height="15.0" fill="rgb(230,152,53)" rx="2" ry="2" />
<text  x="520.66" y="1183.5" >h..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (760,057 samples, 1.98%)</title><rect x="927.4" y="1941" width="23.3" height="15.0" fill="rgb(237,85,19)" rx="2" ry="2" />
<text  x="930.38" y="1951.5" >e..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (364,717 samples, 0.95%)</title><rect x="1172.5" y="133" width="11.2" height="15.0" fill="rgb(249,49,48)" rx="2" ry="2" />
<text  x="1175.49" y="143.5" ></text>
</g>
<g >
<title>boost::asio::detail::wait_handler&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor&gt;::ptr::reset (19,781 samples, 0.05%)</title><rect x="759.0" y="1813" width="0.6" height="15.0" fill="rgb(211,227,21)" rx="2" ry="2" />
<text  x="761.97" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_move_accept_op&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (632,043 samples, 1.65%)</title><rect x="849.1" y="1893" width="19.4" height="15.0" fill="rgb(208,97,8)" rx="2" ry="2" />
<text  x="852.09" y="1903.5" ></text>
</g>
<g >
<title>rcu_irq_exit (14,067 samples, 0.04%)</title><rect x="149.2" y="1845" width="0.4" height="15.0" fill="rgb(215,14,14)" rx="2" ry="2" />
<text  x="152.21" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::buffer_size&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; &gt; (220,784 samples, 0.58%)</title><rect x="918.0" y="1365" width="6.8" height="15.0" fill="rgb(239,157,26)" rx="2" ry="2" />
<text  x="921.02" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::accept (606,296 samples, 1.58%)</title><rect x="171.6" y="1749" width="18.6" height="15.0" fill="rgb(218,34,4)" rx="2" ry="2" />
<text  x="174.57" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1301" width="44.3" height="15.0" fill="rgb(226,112,9)" rx="2" ry="2" />
<text  x="203.41" y="1311.5" >std:..</text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1397" width="22.5" height="15.0" fill="rgb(210,168,26)" rx="2" ry="2" />
<text  x="520.66" y="1407.5" >b..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1461" width="22.5" height="15.0" fill="rgb(239,9,13)" rx="2" ry="2" />
<text  x="520.66" y="1471.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op (564,935 samples, 1.47%)</title><rect x="995.9" y="597" width="17.4" height="15.0" fill="rgb(233,120,52)" rx="2" ry="2" />
<text  x="998.94" y="607.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment::next&lt;4ul&gt; (322,937 samples, 0.84%)</title><rect x="568.4" y="389" width="9.9" height="15.0" fill="rgb(215,25,21)" rx="2" ry="2" />
<text  x="571.41" y="399.5" ></text>
</g>
<g >
<title>__netif_receive_skb (199,055 samples, 0.52%)</title><rect x="526.3" y="629" width="6.1" height="15.0" fill="rgb(238,51,25)" rx="2" ry="2" />
<text  x="529.32" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1589" width="20.6" height="15.0" fill="rgb(214,180,6)" rx="2" ry="2" />
<text  x="440.79" y="1599.5" ></text>
</g>
<g >
<title>boost::asio::get_associated_executor&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="805" width="13.7" height="15.0" fill="rgb(231,28,25)" rx="2" ry="2" />
<text  x="427.11" y="815.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1349" width="6.1" height="15.0" fill="rgb(216,181,13)" rx="2" ry="2" />
<text  x="871.52" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (469,881 samples, 1.22%)</title><rect x="828.5" y="1653" width="14.5" height="15.0" fill="rgb(234,137,7)" rx="2" ry="2" />
<text  x="831.53" y="1663.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::insert (1,934,028 samples, 5.04%)</title><rect x="638.3" y="1157" width="59.5" height="15.0" fill="rgb(227,149,6)" rx="2" ry="2" />
<text  x="641.33" y="1167.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::service_registry::do_use_service (198,769 samples, 0.52%)</title><rect x="809.3" y="1877" width="6.1" height="15.0" fill="rgb(250,80,19)" rx="2" ry="2" />
<text  x="812.29" y="1887.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1509" width="126.5" height="15.0" fill="rgb(247,29,46)" rx="2" ry="2" />
<text  x="285.81" y="1519.5" >boost_asio_hand..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1749" width="11.2" height="15.0" fill="rgb(245,130,33)" rx="2" ry="2" />
<text  x="1175.49" y="1759.5" ></text>
</g>
<g >
<title>boost::beast::stable_async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (165,800 samples, 0.43%)</title><rect x="912.9" y="1189" width="5.1" height="15.0" fill="rgb(229,226,26)" rx="2" ry="2" />
<text  x="915.93" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::move_object&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (245,495 samples, 0.64%)</title><rect x="707.4" y="1701" width="7.6" height="15.0" fill="rgb(224,122,27)" rx="2" ry="2" />
<text  x="710.45" y="1711.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1429" width="11.9" height="15.0" fill="rgb(221,135,21)" rx="2" ry="2" />
<text  x="915.93" y="1439.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (564,935 samples, 1.47%)</title><rect x="995.9" y="181" width="17.4" height="15.0" fill="rgb(225,29,52)" rx="2" ry="2" />
<text  x="998.94" y="191.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (364,717 samples, 0.95%)</title><rect x="1172.5" y="1829" width="11.2" height="15.0" fill="rgb(219,147,39)" rx="2" ry="2" />
<text  x="1175.49" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::allocate_descriptor_state (112,054 samples, 0.29%)</title><rect x="244.7" y="1701" width="3.5" height="15.0" fill="rgb(241,94,31)" rx="2" ry="2" />
<text  x="247.73" y="1711.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_write_op::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="901" width="11.6" height="15.0" fill="rgb(241,209,2)" rx="2" ry="2" />
<text  x="1016.30" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (224,219 samples, 0.58%)</title><rect x="1024.9" y="101" width="6.9" height="15.0" fill="rgb(213,16,28)" rx="2" ry="2" />
<text  x="1027.92" y="111.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;7ul&gt;::call&lt;0ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment&gt; (322,937 samples, 0.84%)</title><rect x="568.4" y="437" width="9.9" height="15.0" fill="rgb(224,100,35)" rx="2" ry="2" />
<text  x="571.41" y="447.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="1269" width="6.9" height="15.0" fill="rgb(211,76,5)" rx="2" ry="2" />
<text  x="839.05" y="1279.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1509" width="17.4" height="15.0" fill="rgb(235,172,0)" rx="2" ry="2" />
<text  x="998.94" y="1519.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (2,144,582 samples, 5.59%)</title><rect x="95.4" y="2037" width="66.0" height="15.0" fill="rgb(239,153,9)" rx="2" ry="2" />
<text  x="98.44" y="2047.5" >pthread..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="917" width="11.6" height="15.0" fill="rgb(205,224,1)" rx="2" ry="2" />
<text  x="1016.30" y="927.5" ></text>
</g>
<g >
<title>json_loader::ParseMapObject (198,555 samples, 0.52%)</title><rect x="821.5" y="1989" width="6.1" height="15.0" fill="rgb(241,143,52)" rx="2" ry="2" />
<text  x="824.50" y="1999.5" ></text>
</g>
<g >
<title>sched_clock_cpu (588,445 samples, 1.53%)</title><rect x="127.7" y="1845" width="18.1" height="15.0" fill="rgb(227,120,51)" rx="2" ry="2" />
<text  x="130.67" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="933" width="11.2" height="15.0" fill="rgb(221,89,40)" rx="2" ry="2" />
<text  x="1175.49" y="943.5" ></text>
</g>
<g >
<title>boost::empty_::empty_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0u, false&gt;::empty_value (267,070 samples, 0.70%)</title><rect x="236.5" y="1061" width="8.2" height="15.0" fill="rgb(232,103,51)" rx="2" ry="2" />
<text  x="239.52" y="1071.5" ></text>
</g>
<g >
<title>finish_task_switch (4,838 samples, 0.01%)</title><rect x="803.0" y="1685" width="0.2" height="15.0" fill="rgb(205,17,8)" rx="2" ry="2" />
<text  x="806.01" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="661" width="12.3" height="15.0" fill="rgb(229,5,14)" rx="2" ry="2" />
<text  x="210.71" y="671.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="981" width="17.4" height="15.0" fill="rgb(244,158,33)" rx="2" ry="2" />
<text  x="998.94" y="991.5" ></text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::buffers_suffix&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&amp;&gt; (311,653 samples, 0.81%)</title><rect x="540.2" y="613" width="9.6" height="15.0" fill="rgb(252,150,16)" rx="2" ry="2" />
<text  x="543.19" y="623.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (276,821 samples, 0.72%)</title><rect x="303.9" y="901" width="8.5" height="15.0" fill="rgb(244,151,6)" rx="2" ry="2" />
<text  x="306.86" y="911.5" ></text>
</g>
<g >
<title>native_write_msr (13,264 samples, 0.03%)</title><rect x="827.6" y="1829" width="0.4" height="15.0" fill="rgb(253,104,4)" rx="2" ry="2" />
<text  x="830.60" y="1839.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (271,965 samples, 0.71%)</title><rect x="443.9" y="1237" width="8.4" height="15.0" fill="rgb(220,195,51)" rx="2" ry="2" />
<text  x="446.93" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (398,295 samples, 1.04%)</title><rect x="207.7" y="949" width="12.3" height="15.0" fill="rgb(226,41,23)" rx="2" ry="2" />
<text  x="210.71" y="959.5" ></text>
</g>
<g >
<title>boost::beast::http::parser&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::on_field_impl (201,887 samples, 0.53%)</title><rect x="369.9" y="1141" width="6.2" height="15.0" fill="rgb(252,168,46)" rx="2" ry="2" />
<text  x="372.89" y="1151.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1701" width="11.2" height="15.0" fill="rgb(212,128,48)" rx="2" ry="2" />
<text  x="1175.49" y="1711.5" ></text>
</g>
<g >
<title>__malloc_arena_thread_freeres (253,078 samples, 0.66%)</title><rect x="10.0" y="2037" width="7.8" height="15.0" fill="rgb(241,82,44)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_write_some&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="757" width="11.2" height="15.0" fill="rgb(213,172,24)" rx="2" ry="2" />
<text  x="1175.49" y="767.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::close (731,150 samples, 1.90%)</title><rect x="888.1" y="1221" width="22.5" height="15.0" fill="rgb(209,184,34)" rx="2" ry="2" />
<text  x="891.14" y="1231.5" >b..</text>
</g>
<g >
<title>timerqueue_add (276,821 samples, 0.72%)</title><rect x="303.9" y="869" width="8.5" height="15.0" fill="rgb(253,150,3)" rx="2" ry="2" />
<text  x="306.86" y="879.5" ></text>
</g>
<g >
<title>evict (281,962 samples, 0.73%)</title><rect x="517.7" y="901" width="8.6" height="15.0" fill="rgb(237,15,40)" rx="2" ry="2" />
<text  x="520.66" y="911.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::any_executor (445,208 samples, 1.16%)</title><rect x="424.1" y="677" width="13.7" height="15.0" fill="rgb(238,45,14)" rx="2" ry="2" />
<text  x="427.11" y="687.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1765" width="12.0" height="15.0" fill="rgb(220,156,10)" rx="2" ry="2" />
<text  x="1163.49" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1333" width="6.1" height="15.0" fill="rgb(206,127,35)" rx="2" ry="2" />
<text  x="871.52" y="1343.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1317" width="126.5" height="15.0" fill="rgb(219,21,3)" rx="2" ry="2" />
<text  x="285.81" y="1327.5" >boost::beast::a..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1269" width="6.9" height="15.0" fill="rgb(234,70,15)" rx="2" ry="2" />
<text  x="1027.92" y="1279.5" ></text>
</g>
<g >
<title>do_user_addr_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1941" width="6.1" height="15.0" fill="rgb(246,177,30)" rx="2" ry="2" />
<text  x="70.21" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1685" width="5.4" height="15.0" fill="rgb(250,216,25)" rx="2" ry="2" />
<text  x="724.29" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::bounded_range&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, boost::intrusive::detail::key_nodeptr_comp&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::key_compare, boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (636,531 samples, 1.66%)</title><rect x="657.7" y="1093" width="19.5" height="15.0" fill="rgb(243,206,14)" rx="2" ry="2" />
<text  x="660.68" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::cancel (199,633 samples, 0.52%)</title><rect x="437.8" y="1429" width="6.1" height="15.0" fill="rgb(222,224,22)" rx="2" ry="2" />
<text  x="440.79" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="885" width="8.4" height="15.0" fill="rgb(254,140,2)" rx="2" ry="2" />
<text  x="446.93" y="895.5" ></text>
</g>
<g >
<title>____sys_sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="501" width="11.2" height="15.0" fill="rgb(236,97,21)" rx="2" ry="2" />
<text  x="1175.49" y="511.5" ></text>
</g>
<g >
<title>perf_output_copy (102,347 samples, 0.27%)</title><rect x="91.6" y="1797" width="3.2" height="15.0" fill="rgb(252,14,10)" rx="2" ry="2" />
<text  x="94.62" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="485" width="17.4" height="15.0" fill="rgb(248,167,45)" rx="2" ry="2" />
<text  x="998.94" y="495.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (564,935 samples, 1.47%)</title><rect x="995.9" y="1189" width="17.4" height="15.0" fill="rgb(244,21,9)" rx="2" ry="2" />
<text  x="998.94" y="1199.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_read_some&lt;boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1029" width="13.7" height="15.0" fill="rgb(245,2,29)" rx="2" ry="2" />
<text  x="427.11" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_assign (631,215 samples, 1.64%)</title><rect x="244.7" y="1781" width="19.4" height="15.0" fill="rgb(222,178,54)" rx="2" ry="2" />
<text  x="247.73" y="1791.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnWrite (165,800 samples, 0.43%)</title><rect x="912.9" y="1301" width="5.1" height="15.0" fill="rgb(209,50,2)" rx="2" ry="2" />
<text  x="915.93" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::move_object&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (280,330 samples, 0.73%)</title><rect x="409.3" y="1701" width="8.6" height="15.0" fill="rgb(251,197,26)" rx="2" ry="2" />
<text  x="412.28" y="1711.5" ></text>
</g>
<g >
<title>futex_wake (86,572 samples, 0.23%)</title><rect x="157.9" y="1957" width="2.6" height="15.0" fill="rgb(249,221,44)" rx="2" ry="2" />
<text  x="160.88" y="1967.5" ></text>
</g>
<g >
<title>activate_task (20,733 samples, 0.05%)</title><rect x="159.9" y="1893" width="0.6" height="15.0" fill="rgb(242,76,24)" rx="2" ry="2" />
<text  x="162.90" y="1903.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (239,731 samples, 0.62%)</title><rect x="880.8" y="1925" width="7.3" height="15.0" fill="rgb(233,22,35)" rx="2" ry="2" />
<text  x="883.77" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="901" width="13.7" height="15.0" fill="rgb(220,152,10)" rx="2" ry="2" />
<text  x="427.11" y="911.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_suffix&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;, boost::beast::buffers_suffix&lt;boost::asio::const_buffer&gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::http::detail::chunk_size, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::beast::http::chunk_crlf, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt;, boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::chunk_crlf&gt; &gt; &gt;::emplace&lt;2ul, boost::optional_ns::in_place_init_t const&amp;, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&amp;&gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="805" width="8.4" height="15.0" fill="rgb(225,169,46)" rx="2" ry="2" />
<text  x="446.93" y="815.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one (224,219 samples, 0.58%)</title><rect x="1024.9" y="2021" width="6.9" height="15.0" fill="rgb(214,147,37)" rx="2" ry="2" />
<text  x="1027.92" y="2031.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (1,502,944 samples, 3.92%)</title><rect x="303.9" y="1109" width="46.2" height="15.0" fill="rgb(217,201,28)" rx="2" ry="2" />
<text  x="306.86" y="1119.5" >boos..</text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (471,598 samples, 1.23%)</title><rect x="443.9" y="1413" width="14.5" height="15.0" fill="rgb(229,23,45)" rx="2" ry="2" />
<text  x="446.93" y="1423.5" ></text>
</g>
<g >
<title>scsi_softirq_done (244,735 samples, 0.64%)</title><rect x="828.5" y="1093" width="7.6" height="15.0" fill="rgb(239,172,24)" rx="2" ry="2" />
<text  x="831.53" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="2021" width="11.2" height="15.0" fill="rgb(253,155,4)" rx="2" ry="2" />
<text  x="1175.49" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="373" width="6.9" height="15.0" fill="rgb(233,97,5)" rx="2" ry="2" />
<text  x="1027.92" y="383.5" ></text>
</g>
<g >
<title>__ip_finish_output (199,055 samples, 0.52%)</title><rect x="526.3" y="757" width="6.1" height="15.0" fill="rgb(236,12,12)" rx="2" ry="2" />
<text  x="529.32" y="767.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::do_visit&lt;2ul, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="837" width="17.4" height="15.0" fill="rgb(232,128,7)" rx="2" ry="2" />
<text  x="998.94" y="847.5" ></text>
</g>
<g >
<title>boost::json::parse (198,372 samples, 0.52%)</title><rect x="815.4" y="1989" width="6.1" height="15.0" fill="rgb(223,109,15)" rx="2" ry="2" />
<text  x="818.40" y="1999.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1445" width="44.3" height="15.0" fill="rgb(215,35,6)" rx="2" ry="2" />
<text  x="203.41" y="1455.5" >boos..</text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1541" width="17.4" height="15.0" fill="rgb(209,81,11)" rx="2" ry="2" />
<text  x="998.94" y="1551.5" ></text>
</g>
<g >
<title>finish_task_switch (126,536 samples, 0.33%)</title><rect x="145.8" y="1893" width="3.8" height="15.0" fill="rgb(214,7,24)" rx="2" ry="2" />
<text  x="148.75" y="1903.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (564,935 samples, 1.47%)</title><rect x="995.9" y="373" width="17.4" height="15.0" fill="rgb(230,73,31)" rx="2" ry="2" />
<text  x="998.94" y="383.5" ></text>
</g>
<g >
<title>update_load_avg (143,269 samples, 0.37%)</title><rect x="786.2" y="1637" width="4.4" height="15.0" fill="rgb(228,229,34)" rx="2" ry="2" />
<text  x="789.17" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="325" width="6.9" height="15.0" fill="rgb(208,102,42)" rx="2" ry="2" />
<text  x="1027.92" y="335.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1253" width="6.9" height="15.0" fill="rgb(229,9,16)" rx="2" ry="2" />
<text  x="1027.92" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1189" width="11.6" height="15.0" fill="rgb(221,137,8)" rx="2" ry="2" />
<text  x="1016.30" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_receive::operator (445,208 samples, 1.16%)</title><rect x="424.1" y="869" width="13.7" height="15.0" fill="rgb(246,24,29)" rx="2" ry="2" />
<text  x="427.11" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::lock (37,189 samples, 0.10%)</title><rect x="170.4" y="1797" width="1.2" height="15.0" fill="rgb(213,128,52)" rx="2" ry="2" />
<text  x="173.43" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1605" width="22.5" height="15.0" fill="rgb(254,212,4)" rx="2" ry="2" />
<text  x="891.14" y="1615.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1493" width="11.2" height="15.0" fill="rgb(220,25,45)" rx="2" ry="2" />
<text  x="1175.49" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::execution::prefer&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;, boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (75,343 samples, 0.20%)</title><rect x="910.6" y="1765" width="2.3" height="15.0" fill="rgb(234,26,37)" rx="2" ry="2" />
<text  x="913.61" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::dispatch&lt;boost::asio::any_io_executor, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1381" width="6.9" height="15.0" fill="rgb(216,18,49)" rx="2" ry="2" />
<text  x="1027.92" y="1391.5" ></text>
</g>
<g >
<title>boost::beast::detail::make_work_guard&lt;boost::asio::any_io_executor&gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1157" width="5.1" height="15.0" fill="rgb(244,206,26)" rx="2" ry="2" />
<text  x="915.93" y="1167.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="661" width="6.9" height="15.0" fill="rgb(217,9,33)" rx="2" ry="2" />
<text  x="1027.92" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (377,915 samples, 0.98%)</title><rect x="1013.3" y="645" width="11.6" height="15.0" fill="rgb(231,67,45)" rx="2" ry="2" />
<text  x="1016.30" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (481,017 samples, 1.25%)</title><rect x="517.7" y="1045" width="14.7" height="15.0" fill="rgb(249,107,44)" rx="2" ry="2" />
<text  x="520.66" y="1055.5" ></text>
</g>
<g >
<title>boost::beast::detail::execution_work_guard&lt;boost::asio::any_io_executor&gt;::execution_work_guard (252,217 samples, 0.66%)</title><rect x="270.2" y="1733" width="7.8" height="15.0" fill="rgb(239,206,23)" rx="2" ry="2" />
<text  x="273.25" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::any_io_executor&gt;::async_wait&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt; &gt; (280,330 samples, 0.73%)</title><rect x="282.8" y="1109" width="8.6" height="15.0" fill="rgb(210,98,24)" rx="2" ry="2" />
<text  x="285.81" y="1119.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (390,290 samples, 1.02%)</title><rect x="1160.5" y="85" width="12.0" height="15.0" fill="rgb(234,10,15)" rx="2" ry="2" />
<text  x="1163.49" y="95.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1381" width="44.3" height="15.0" fill="rgb(223,131,32)" rx="2" ry="2" />
<text  x="203.41" y="1391.5" >boos..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1397" width="6.1" height="15.0" fill="rgb(245,194,41)" rx="2" ry="2" />
<text  x="871.52" y="1407.5" ></text>
</g>
<g >
<title>__libc_malloc (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1061" width="33.2" height="15.0" fill="rgb(250,99,27)" rx="2" ry="2" />
<text  x="379.10" y="1071.5" >__..</text>
</g>
<g >
<title>tcp_v4_rcv (199,055 samples, 0.52%)</title><rect x="526.3" y="517" width="6.1" height="15.0" fill="rgb(246,174,37)" rx="2" ry="2" />
<text  x="529.32" y="527.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (83,662 samples, 0.22%)</title><rect x="924.8" y="1877" width="2.6" height="15.0" fill="rgb(212,32,45)" rx="2" ry="2" />
<text  x="927.81" y="1887.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1861" width="6.9" height="15.0" fill="rgb(233,200,29)" rx="2" ry="2" />
<text  x="1027.92" y="1871.5" ></text>
</g>
<g >
<title>boost::beast::detail::stream_base::pending_guard::pending_guard (826,659 samples, 2.15%)</title><rect x="476.0" y="1717" width="25.4" height="15.0" fill="rgb(230,9,32)" rx="2" ry="2" />
<text  x="478.95" y="1727.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::socket_holder::reset (244,735 samples, 0.64%)</title><rect x="828.5" y="1189" width="7.6" height="15.0" fill="rgb(212,120,49)" rx="2" ry="2" />
<text  x="831.53" y="1199.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="869" width="12.0" height="15.0" fill="rgb(205,198,28)" rx="2" ry="2" />
<text  x="1163.49" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (1,699,402 samples, 4.43%)</title><rect x="828.5" y="1925" width="52.3" height="15.0" fill="rgb(251,187,21)" rx="2" ry="2" />
<text  x="831.53" y="1935.5" >boost..</text>
</g>
<g >
<title>__tcp_push_pending_frames (364,717 samples, 0.95%)</title><rect x="1172.5" y="405" width="11.2" height="15.0" fill="rgb(205,129,5)" rx="2" ry="2" />
<text  x="1175.49" y="415.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (225,146 samples, 0.59%)</title><rect x="836.1" y="1045" width="6.9" height="15.0" fill="rgb(232,200,52)" rx="2" ry="2" />
<text  x="839.05" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1205" width="11.2" height="15.0" fill="rgb(210,136,1)" rx="2" ry="2" />
<text  x="1175.49" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1381" width="126.5" height="15.0" fill="rgb(232,90,54)" rx="2" ry="2" />
<text  x="285.81" y="1391.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1141" width="11.2" height="15.0" fill="rgb(225,160,54)" rx="2" ry="2" />
<text  x="1175.49" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1141" width="6.9" height="15.0" fill="rgb(218,54,41)" rx="2" ry="2" />
<text  x="839.05" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1701" width="200.8" height="15.0" fill="rgb(225,225,23)" rx="2" ry="2" />
<text  x="509.58" y="1711.5" >boost::asio::detail::stran..</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1461" width="14.5" height="15.0" fill="rgb(215,46,46)" rx="2" ry="2" />
<text  x="831.53" y="1471.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base (783,851 samples, 2.04%)</title><rect x="732.2" y="1749" width="24.1" height="15.0" fill="rgb(228,96,43)" rx="2" ry="2" />
<text  x="735.19" y="1759.5" >b..</text>
</g>
<g >
<title>__x64_sys_epoll_ctl (519,161 samples, 1.35%)</title><rect x="248.2" y="1669" width="15.9" height="15.0" fill="rgb(246,183,39)" rx="2" ry="2" />
<text  x="251.17" y="1679.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (731,150 samples, 1.90%)</title><rect x="888.1" y="1701" width="22.5" height="15.0" fill="rgb(229,83,18)" rx="2" ry="2" />
<text  x="891.14" y="1711.5" >b..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_read_some&lt;boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (245,495 samples, 0.64%)</title><rect x="623.2" y="1221" width="7.6" height="15.0" fill="rgb(240,150,7)" rx="2" ry="2" />
<text  x="626.24" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1525" width="5.4" height="15.0" fill="rgb(245,181,44)" rx="2" ry="2" />
<text  x="724.29" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::posix_event::maybe_unlock_and_signal_one&lt;boost::asio::detail::conditionally_enabled_mutex::scoped_lock&gt; (57,179 samples, 0.15%)</title><rect x="168.7" y="1813" width="1.7" height="15.0" fill="rgb(234,144,39)" rx="2" ry="2" />
<text  x="171.67" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1749" width="6.3" height="15.0" fill="rgb(231,115,15)" rx="2" ry="2" />
<text  x="472.66" y="1759.5" ></text>
</g>
<g >
<title>do_user_addr_fault (198,923 samples, 0.52%)</title><rect x="950.7" y="1957" width="6.2" height="15.0" fill="rgb(237,175,18)" rx="2" ry="2" />
<text  x="953.75" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1381" width="14.5" height="15.0" fill="rgb(237,78,14)" rx="2" ry="2" />
<text  x="446.93" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (160,702 samples, 0.42%)</title><rect x="963.0" y="2037" width="4.9" height="15.0" fill="rgb(239,9,50)" rx="2" ry="2" />
<text  x="965.98" y="2047.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1813" width="5.4" height="15.0" fill="rgb(245,220,27)" rx="2" ry="2" />
<text  x="724.29" y="1823.5" ></text>
</g>
<g >
<title>__sock_release (731,150 samples, 1.90%)</title><rect x="888.1" y="1061" width="22.5" height="15.0" fill="rgb(218,47,35)" rx="2" ry="2" />
<text  x="891.14" y="1071.5" >_..</text>
</g>
<g >
<title>boost::asio::detail::scheduler::run (20,679,395 samples, 53.87%)</title><rect x="167.5" y="1877" width="635.7" height="15.0" fill="rgb(211,153,30)" rx="2" ry="2" />
<text  x="170.50" y="1887.5" >boost::asio::detail::scheduler::run</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="581" width="20.8" height="15.0" fill="rgb(208,172,25)" rx="2" ry="2" />
<text  x="581.34" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one (390,290 samples, 1.02%)</title><rect x="1160.5" y="1973" width="12.0" height="15.0" fill="rgb(217,52,15)" rx="2" ry="2" />
<text  x="1163.49" y="1983.5" ></text>
</g>
<g >
<title>enqueue_entity (59,237 samples, 0.15%)</title><rect x="1124.5" y="1877" width="1.8" height="15.0" fill="rgb(224,207,43)" rx="2" ry="2" />
<text  x="1127.46" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1557" width="6.9" height="15.0" fill="rgb(220,186,34)" rx="2" ry="2" />
<text  x="1027.92" y="1567.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1365" width="11.2" height="15.0" fill="rgb(241,71,9)" rx="2" ry="2" />
<text  x="1175.49" y="1375.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::impl_type::impl_type&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt; &gt; (538,866 samples, 1.40%)</title><rect x="220.0" y="1045" width="16.5" height="15.0" fill="rgb(222,116,8)" rx="2" ry="2" />
<text  x="222.95" y="1055.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (377,915 samples, 0.98%)</title><rect x="1013.3" y="69" width="11.6" height="15.0" fill="rgb(215,105,25)" rx="2" ry="2" />
<text  x="1016.30" y="79.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase2&lt;boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (199,368 samples, 0.52%)</title><rect x="868.5" y="1189" width="6.1" height="15.0" fill="rgb(234,105,26)" rx="2" ry="2" />
<text  x="871.52" y="1199.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1509" width="6.1" height="15.0" fill="rgb(238,105,0)" rx="2" ry="2" />
<text  x="871.52" y="1519.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1397" width="126.5" height="15.0" fill="rgb(247,94,4)" rx="2" ry="2" />
<text  x="285.81" y="1407.5" >boost::beast::a..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1669" width="131.3" height="15.0" fill="rgb(208,16,13)" rx="2" ry="2" />
<text  x="281.00" y="1679.5" >boost::asio::det..</text>
</g>
<g >
<title>boost::beast::detail::tuple_element_impl&lt;0ul, std::shared_ptr&lt;http_server::SessionBase&gt; &gt;::~tuple_element_impl (731,150 samples, 1.90%)</title><rect x="888.1" y="1413" width="22.5" height="15.0" fill="rgb(252,38,38)" rx="2" ry="2" />
<text  x="891.14" y="1423.5" >b..</text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (2,701,516 samples, 7.04%)</title><rect x="540.2" y="1141" width="83.0" height="15.0" fill="rgb(253,212,1)" rx="2" ry="2" />
<text  x="543.19" y="1151.5" >boost::be..</text>
</g>
<g >
<title>ip_queue_xmit (564,935 samples, 1.47%)</title><rect x="995.9" y="293" width="17.4" height="15.0" fill="rgb(213,127,28)" rx="2" ry="2" />
<text  x="998.94" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_execve (124,279 samples, 0.32%)</title><rect x="91.6" y="2005" width="3.8" height="15.0" fill="rgb(233,218,42)" rx="2" ry="2" />
<text  x="94.62" y="2015.5" ></text>
</g>
<g >
<title>_int_malloc (245,495 samples, 0.64%)</title><rect x="988.4" y="2053" width="7.5" height="15.0" fill="rgb(227,39,21)" rx="2" ry="2" />
<text  x="991.39" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1365" width="5.4" height="15.0" fill="rgb(230,223,43)" rx="2" ry="2" />
<text  x="724.29" y="1375.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1637" width="17.4" height="15.0" fill="rgb(210,170,27)" rx="2" ry="2" />
<text  x="998.94" y="1647.5" ></text>
</g>
<g >
<title>do_page_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1973" width="6.1" height="15.0" fill="rgb(254,213,48)" rx="2" ry="2" />
<text  x="70.21" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="2005" width="6.9" height="15.0" fill="rgb(208,15,18)" rx="2" ry="2" />
<text  x="1027.92" y="2015.5" ></text>
</g>
<g >
<title>main::{lambda (377,915 samples, 0.98%)</title><rect x="1013.3" y="1365" width="11.6" height="15.0" fill="rgb(247,39,44)" rx="2" ry="2" />
<text  x="1016.30" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1653" width="131.3" height="15.0" fill="rgb(238,42,44)" rx="2" ry="2" />
<text  x="281.00" y="1663.5" >boost::asio::det..</text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1317" width="11.6" height="15.0" fill="rgb(214,188,53)" rx="2" ry="2" />
<text  x="1016.30" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt; &gt;::do_perform (364,717 samples, 0.95%)</title><rect x="1172.5" y="629" width="11.2" height="15.0" fill="rgb(244,173,36)" rx="2" ry="2" />
<text  x="1175.49" y="639.5" ></text>
</g>
<g >
<title>boost::beast::http::parser&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::on_request_impl (1,079,694 samples, 2.81%)</title><rect x="376.1" y="1125" width="33.2" height="15.0" fill="rgb(250,169,12)" rx="2" ry="2" />
<text  x="379.10" y="1135.5" >bo..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::do_complete (1,699,402 samples, 4.43%)</title><rect x="828.5" y="1941" width="52.3" height="15.0" fill="rgb(228,61,41)" rx="2" ry="2" />
<text  x="831.53" y="1951.5" >boost..</text>
</g>
<g >
<title>__fput (481,017 samples, 1.25%)</title><rect x="517.7" y="981" width="14.7" height="15.0" fill="rgb(213,197,9)" rx="2" ry="2" />
<text  x="520.66" y="991.5" ></text>
</g>
<g >
<title>main::{lambda (564,935 samples, 1.47%)</title><rect x="995.9" y="1221" width="17.4" height="15.0" fill="rgb(248,213,31)" rx="2" ry="2" />
<text  x="998.94" y="1231.5" ></text>
</g>
<g >
<title>boost::beast::http::async_read&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1333" width="13.7" height="15.0" fill="rgb(223,167,10)" rx="2" ry="2" />
<text  x="427.11" y="1343.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1653" width="6.9" height="15.0" fill="rgb(234,165,10)" rx="2" ry="2" />
<text  x="1027.92" y="1663.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (199,055 samples, 0.52%)</title><rect x="526.3" y="885" width="6.1" height="15.0" fill="rgb(238,109,42)" rx="2" ry="2" />
<text  x="529.32" y="895.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::async_write_some_impl&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="949" width="17.4" height="15.0" fill="rgb(215,129,8)" rx="2" ry="2" />
<text  x="998.94" y="959.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1701" width="40.5" height="15.0" fill="rgb(248,204,39)" rx="2" ry="2" />
<text  x="420.90" y="1711.5" >boo..</text>
</g>
<g >
<title>search_binary_handler (5,883 samples, 0.02%)</title><rect x="1189.8" y="1973" width="0.2" height="15.0" fill="rgb(246,131,25)" rx="2" ry="2" />
<text  x="1192.82" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (481,017 samples, 1.25%)</title><rect x="517.7" y="1061" width="14.7" height="15.0" fill="rgb(223,95,48)" rx="2" ry="2" />
<text  x="520.66" y="1071.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1445" width="126.5" height="15.0" fill="rgb(251,200,52)" rx="2" ry="2" />
<text  x="285.81" y="1455.5" >boost_asio_hand..</text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1477" width="22.5" height="15.0" fill="rgb(236,126,27)" rx="2" ry="2" />
<text  x="520.66" y="1487.5" >b..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="501" width="20.8" height="15.0" fill="rgb(219,124,48)" rx="2" ry="2" />
<text  x="581.34" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="629" width="11.6" height="15.0" fill="rgb(229,218,7)" rx="2" ry="2" />
<text  x="1016.30" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (788,165 samples, 2.05%)</title><rect x="778.9" y="1797" width="24.3" height="15.0" fill="rgb(220,12,18)" rx="2" ry="2" />
<text  x="781.93" y="1807.5" >_..</text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1397" width="14.5" height="15.0" fill="rgb(230,169,50)" rx="2" ry="2" />
<text  x="446.93" y="1407.5" ></text>
</g>
<g >
<title>__do_page_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1957" width="6.2" height="15.0" fill="rgb(209,120,46)" rx="2" ry="2" />
<text  x="45.34" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (564,935 samples, 1.47%)</title><rect x="995.9" y="117" width="17.4" height="15.0" fill="rgb(208,226,17)" rx="2" ry="2" />
<text  x="998.94" y="127.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (199,055 samples, 0.52%)</title><rect x="458.4" y="1781" width="6.1" height="15.0" fill="rgb(251,155,52)" rx="2" ry="2" />
<text  x="461.42" y="1791.5" ></text>
</g>
<g >
<title>schedule_tail (13,264 samples, 0.03%)</title><rect x="827.6" y="1909" width="0.4" height="15.0" fill="rgb(205,202,6)" rx="2" ry="2" />
<text  x="830.60" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1477" width="44.3" height="15.0" fill="rgb(207,198,42)" rx="2" ry="2" />
<text  x="203.41" y="1487.5" >boos..</text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor, void&gt;::complete&lt;boost::asio::detail::binder1&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::system::error_code&gt; &gt; (179,100 samples, 0.47%)</title><rect x="726.7" y="1813" width="5.5" height="15.0" fill="rgb(249,5,10)" rx="2" ry="2" />
<text  x="729.69" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1813" width="11.6" height="15.0" fill="rgb(252,32,15)" rx="2" ry="2" />
<text  x="1016.30" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (564,935 samples, 1.47%)</title><rect x="995.9" y="133" width="17.4" height="15.0" fill="rgb(215,168,38)" rx="2" ry="2" />
<text  x="998.94" y="143.5" ></text>
</g>
<g >
<title>timerfd_settime (558,783 samples, 1.46%)</title><rect x="303.9" y="997" width="17.1" height="15.0" fill="rgb(238,92,50)" rx="2" ry="2" />
<text  x="306.86" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (6,058,823 samples, 15.78%)</title><rect x="517.7" y="1525" width="186.2" height="15.0" fill="rgb(205,223,46)" rx="2" ry="2" />
<text  x="520.66" y="1535.5" >boost::asio::asio_handle..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1045" width="17.4" height="15.0" fill="rgb(218,86,17)" rx="2" ry="2" />
<text  x="998.94" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base (165,800 samples, 0.43%)</title><rect x="912.9" y="1061" width="5.1" height="15.0" fill="rgb(209,224,0)" rx="2" ry="2" />
<text  x="915.93" y="1071.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1093" width="17.4" height="15.0" fill="rgb(241,178,44)" rx="2" ry="2" />
<text  x="998.94" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (245,495 samples, 0.64%)</title><rect x="623.2" y="1205" width="7.6" height="15.0" fill="rgb(239,96,24)" rx="2" ry="2" />
<text  x="626.24" y="1215.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::operator++ (175,630 samples, 0.46%)</title><rect x="721.3" y="1205" width="5.4" height="15.0" fill="rgb(213,157,37)" rx="2" ry="2" />
<text  x="724.29" y="1215.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1829" width="11.6" height="15.0" fill="rgb(220,171,34)" rx="2" ry="2" />
<text  x="1016.30" y="1839.5" ></text>
</g>
<g >
<title>do_sys_open (234,592 samples, 0.61%)</title><rect x="981.2" y="1957" width="7.2" height="15.0" fill="rgb(214,78,14)" rx="2" ry="2" />
<text  x="984.18" y="1967.5" ></text>
</g>
<g >
<title>default_wake_function (199,055 samples, 0.52%)</title><rect x="526.3" y="293" width="6.1" height="15.0" fill="rgb(242,118,40)" rx="2" ry="2" />
<text  x="529.32" y="303.5" ></text>
</g>
<g >
<title>sock_def_wakeup (199,055 samples, 0.52%)</title><rect x="526.3" y="437" width="6.1" height="15.0" fill="rgb(219,152,28)" rx="2" ry="2" />
<text  x="529.32" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="1989" width="7.2" height="15.0" fill="rgb(231,106,46)" rx="2" ry="2" />
<text  x="977.02" y="1999.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (160,702 samples, 0.42%)</title><rect x="963.0" y="1989" width="4.9" height="15.0" fill="rgb(249,70,29)" rx="2" ry="2" />
<text  x="965.98" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;std::jthread, std::allocator&lt;std::jthread&gt; &gt;::back (199,120 samples, 0.52%)</title><rect x="956.9" y="2005" width="6.1" height="15.0" fill="rgb(251,18,18)" rx="2" ry="2" />
<text  x="959.86" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke&lt;main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="2037" width="11.2" height="15.0" fill="rgb(235,183,32)" rx="2" ry="2" />
<text  x="1175.49" y="2047.5" ></text>
</g>
<g >
<title>do_user_addr_fault (199,680 samples, 0.52%)</title><rect x="42.3" y="1941" width="6.2" height="15.0" fill="rgb(230,229,36)" rx="2" ry="2" />
<text  x="45.34" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="933" width="17.4" height="15.0" fill="rgb(235,147,50)" rx="2" ry="2" />
<text  x="998.94" y="943.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (30,285 samples, 0.08%)</title><rect x="90.7" y="1957" width="0.9" height="15.0" fill="rgb(230,115,26)" rx="2" ry="2" />
<text  x="93.69" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (390,290 samples, 1.02%)</title><rect x="1160.5" y="133" width="12.0" height="15.0" fill="rgb(210,41,5)" rx="2" ry="2" />
<text  x="1163.49" y="143.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (199,055 samples, 0.52%)</title><rect x="526.3" y="709" width="6.1" height="15.0" fill="rgb(246,201,33)" rx="2" ry="2" />
<text  x="529.32" y="719.5" ></text>
</g>
<g >
<title>boost::beast::http::async_read&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="597" width="6.9" height="15.0" fill="rgb(247,6,21)" rx="2" ry="2" />
<text  x="1027.92" y="607.5" ></text>
</g>
<g >
<title>boost::json::parse (198,372 samples, 0.52%)</title><rect x="815.4" y="1973" width="6.1" height="15.0" fill="rgb(252,152,3)" rx="2" ry="2" />
<text  x="818.40" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_futex (57,179 samples, 0.15%)</title><rect x="168.7" y="1717" width="1.7" height="15.0" fill="rgb(234,117,11)" rx="2" ry="2" />
<text  x="171.67" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1573" width="12.0" height="15.0" fill="rgb(237,219,52)" rx="2" ry="2" />
<text  x="1163.49" y="1583.5" ></text>
</g>
<g >
<title>tcp_write_xmit (564,935 samples, 1.47%)</title><rect x="995.9" y="325" width="17.4" height="15.0" fill="rgb(214,213,31)" rx="2" ry="2" />
<text  x="998.94" y="335.5" ></text>
</g>
<g >
<title>boost::json::parser::write (198,372 samples, 0.52%)</title><rect x="815.4" y="1941" width="6.1" height="15.0" fill="rgb(248,122,37)" rx="2" ry="2" />
<text  x="818.40" y="1951.5" ></text>
</g>
<g >
<title>ip_output (199,055 samples, 0.52%)</title><rect x="526.3" y="789" width="6.1" height="15.0" fill="rgb(219,224,10)" rx="2" ry="2" />
<text  x="529.32" y="799.5" ></text>
</g>
<g >
<title>tcp_push (377,915 samples, 0.98%)</title><rect x="1013.3" y="501" width="11.6" height="15.0" fill="rgb(222,146,37)" rx="2" ry="2" />
<text  x="1016.30" y="511.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1909" width="11.2" height="15.0" fill="rgb(253,54,28)" rx="2" ry="2" />
<text  x="1175.49" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1221" width="126.5" height="15.0" fill="rgb(211,220,9)" rx="2" ry="2" />
<text  x="285.81" y="1231.5" >boost::asio::de..</text>
</g>
<g >
<title>std::__invoke&lt;void  (271,965 samples, 0.71%)</title><rect x="443.9" y="1253" width="8.4" height="15.0" fill="rgb(208,28,36)" rx="2" ry="2" />
<text  x="446.93" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (564,935 samples, 1.47%)</title><rect x="995.9" y="1797" width="17.4" height="15.0" fill="rgb(252,42,44)" rx="2" ry="2" />
<text  x="998.94" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::detail::op_queue&lt;boost::asio::detail::scheduler_operation&gt;::op_queue (199,633 samples, 0.52%)</title><rect x="437.8" y="1413" width="6.1" height="15.0" fill="rgb(217,192,37)" rx="2" ry="2" />
<text  x="440.79" y="1423.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::do_complete (8,050,927 samples, 20.97%)</title><rect x="170.4" y="1829" width="247.5" height="15.0" fill="rgb(222,227,27)" rx="2" ry="2" />
<text  x="173.43" y="1839.5" >boost::asio::detail::epoll_react..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1621" width="20.6" height="15.0" fill="rgb(208,207,22)" rx="2" ry="2" />
<text  x="440.79" y="1631.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send (377,915 samples, 0.98%)</title><rect x="1013.3" y="693" width="11.6" height="15.0" fill="rgb(207,174,15)" rx="2" ry="2" />
<text  x="1016.30" y="703.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1541" width="12.0" height="15.0" fill="rgb(233,180,48)" rx="2" ry="2" />
<text  x="1163.49" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base (445,208 samples, 1.16%)</title><rect x="424.1" y="661" width="13.7" height="15.0" fill="rgb(221,8,51)" rx="2" ry="2" />
<text  x="427.11" y="671.5" ></text>
</g>
<g >
<title>http_server::Listener&lt;main::{lambda (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1269" width="44.3" height="15.0" fill="rgb(223,46,10)" rx="2" ry="2" />
<text  x="203.41" y="1279.5" >http..</text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (564,935 samples, 1.47%)</title><rect x="995.9" y="1781" width="17.4" height="15.0" fill="rgb(210,175,45)" rx="2" ry="2" />
<text  x="998.94" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::buffer_sequence_begin&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; &gt; (220,784 samples, 0.58%)</title><rect x="918.0" y="1349" width="6.8" height="15.0" fill="rgb(246,138,44)" rx="2" ry="2" />
<text  x="921.02" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="725" width="12.3" height="15.0" fill="rgb(223,64,11)" rx="2" ry="2" />
<text  x="210.71" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (124,279 samples, 0.32%)</title><rect x="91.6" y="2037" width="3.8" height="15.0" fill="rgb(245,185,53)" rx="2" ry="2" />
<text  x="94.62" y="2047.5" ></text>
</g>
<g >
<title>enqueue_task_fair (203,350 samples, 0.53%)</title><rect x="1124.5" y="1893" width="6.2" height="15.0" fill="rgb(245,166,7)" rx="2" ry="2" />
<text  x="1127.46" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (199,055 samples, 0.52%)</title><rect x="526.3" y="773" width="6.1" height="15.0" fill="rgb(226,52,13)" rx="2" ry="2" />
<text  x="529.32" y="783.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1669" width="50.4" height="15.0" fill="rgb(226,121,28)" rx="2" ry="2" />
<text  x="197.29" y="1679.5" >boost..</text>
</g>
<g >
<title>boost::asio::detail::service_registry::create&lt;boost::asio::detail::signal_set_service, boost::asio::io_context&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="1941" width="6.1" height="15.0" fill="rgb(218,123,36)" rx="2" ry="2" />
<text  x="812.29" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="773" width="12.3" height="15.0" fill="rgb(218,216,36)" rx="2" ry="2" />
<text  x="210.71" y="783.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (398,423 samples, 1.04%)</title><rect x="868.5" y="1845" width="12.3" height="15.0" fill="rgb(241,177,51)" rx="2" ry="2" />
<text  x="871.52" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="805" width="11.2" height="15.0" fill="rgb(207,186,31)" rx="2" ry="2" />
<text  x="1175.49" y="815.5" ></text>
</g>
<g >
<title>____sys_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="581" width="11.6" height="15.0" fill="rgb(225,90,5)" rx="2" ry="2" />
<text  x="1016.30" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1525" width="22.5" height="15.0" fill="rgb(251,111,2)" rx="2" ry="2" />
<text  x="891.14" y="1535.5" >b..</text>
</g>
<g >
<title>_GLOBAL__sub_I_main (199,526 samples, 0.52%)</title><rect x="803.2" y="2037" width="6.1" height="15.0" fill="rgb(206,84,12)" rx="2" ry="2" />
<text  x="806.16" y="2047.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="757" width="58.9" height="15.0" fill="rgb(222,74,37)" rx="2" ry="2" />
<text  x="543.19" y="767.5" >boost:..</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (13,264 samples, 0.03%)</title><rect x="827.6" y="1861" width="0.4" height="15.0" fill="rgb(242,200,41)" rx="2" ry="2" />
<text  x="830.60" y="1871.5" ></text>
</g>
<g >
<title>strcmp (199,120 samples, 0.52%)</title><rect x="1183.7" y="2053" width="6.1" height="15.0" fill="rgb(248,157,33)" rx="2" ry="2" />
<text  x="1186.70" y="2063.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1221" width="11.2" height="15.0" fill="rgb(241,27,3)" rx="2" ry="2" />
<text  x="1175.49" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="773" width="6.9" height="15.0" fill="rgb(220,208,39)" rx="2" ry="2" />
<text  x="839.05" y="783.5" ></text>
</g>
<g >
<title>__do_page_fault (199,526 samples, 0.52%)</title><rect x="803.2" y="1973" width="6.1" height="15.0" fill="rgb(246,105,50)" rx="2" ry="2" />
<text  x="806.16" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (398,423 samples, 1.04%)</title><rect x="868.5" y="1877" width="12.3" height="15.0" fill="rgb(205,18,45)" rx="2" ry="2" />
<text  x="871.52" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1733" width="11.2" height="15.0" fill="rgb(254,194,41)" rx="2" ry="2" />
<text  x="1175.49" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1733" width="14.5" height="15.0" fill="rgb(248,141,48)" rx="2" ry="2" />
<text  x="831.53" y="1743.5" ></text>
</g>
<g >
<title>ttwu_do_activate (199,055 samples, 0.52%)</title><rect x="526.3" y="261" width="6.1" height="15.0" fill="rgb(252,26,44)" rx="2" ry="2" />
<text  x="529.32" y="271.5" ></text>
</g>
<g >
<title>boost::exchange&lt;bool, bool&gt; (826,659 samples, 2.15%)</title><rect x="476.0" y="1701" width="25.4" height="15.0" fill="rgb(253,92,37)" rx="2" ry="2" />
<text  x="478.95" y="1711.5" >b..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1173" width="12.0" height="15.0" fill="rgb(205,222,34)" rx="2" ry="2" />
<text  x="1163.49" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1829" width="11.9" height="15.0" fill="rgb(218,131,29)" rx="2" ry="2" />
<text  x="915.93" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::impl_type::close (731,150 samples, 1.90%)</title><rect x="888.1" y="1237" width="22.5" height="15.0" fill="rgb(214,215,9)" rx="2" ry="2" />
<text  x="891.14" y="1247.5" >b..</text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1093" width="5.4" height="15.0" fill="rgb(220,74,42)" rx="2" ry="2" />
<text  x="724.29" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (267,070 samples, 0.70%)</title><rect x="236.5" y="1029" width="8.2" height="15.0" fill="rgb(250,37,54)" rx="2" ry="2" />
<text  x="239.52" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (169,764 samples, 0.44%)</title><rect x="501.4" y="1717" width="5.2" height="15.0" fill="rgb(247,1,26)" rx="2" ry="2" />
<text  x="504.36" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1269" width="11.6" height="15.0" fill="rgb(239,210,14)" rx="2" ry="2" />
<text  x="1016.30" y="1279.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="677" width="17.4" height="15.0" fill="rgb(237,96,54)" rx="2" ry="2" />
<text  x="998.94" y="687.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1605" width="13.7" height="15.0" fill="rgb(232,12,12)" rx="2" ry="2" />
<text  x="427.11" y="1615.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1637" width="20.6" height="15.0" fill="rgb(246,89,26)" rx="2" ry="2" />
<text  x="440.79" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor, void&gt;::handler_work (871,147 samples, 2.27%)</title><rect x="732.2" y="1813" width="26.8" height="15.0" fill="rgb(237,143,44)" rx="2" ry="2" />
<text  x="735.19" y="1823.5" >b..</text>
</g>
<g >
<title>ep_poll_callback (199,055 samples, 0.52%)</title><rect x="526.3" y="373" width="6.1" height="15.0" fill="rgb(215,13,35)" rx="2" ry="2" />
<text  x="529.32" y="383.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Read (224,219 samples, 0.58%)</title><rect x="1024.9" y="613" width="6.9" height="15.0" fill="rgb(206,60,7)" rx="2" ry="2" />
<text  x="1027.92" y="623.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="693" width="12.3" height="15.0" fill="rgb(209,221,17)" rx="2" ry="2" />
<text  x="210.71" y="703.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_send::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="789" width="11.6" height="15.0" fill="rgb(218,52,34)" rx="2" ry="2" />
<text  x="1016.30" y="799.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (564,935 samples, 1.47%)</title><rect x="995.9" y="165" width="17.4" height="15.0" fill="rgb(254,212,12)" rx="2" ry="2" />
<text  x="998.94" y="175.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1877" width="12.0" height="15.0" fill="rgb(249,106,44)" rx="2" ry="2" />
<text  x="1163.49" y="1887.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;4ul, boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::increment&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1189" width="5.4" height="15.0" fill="rgb(206,126,20)" rx="2" ry="2" />
<text  x="724.29" y="1199.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_object&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1861" width="6.1" height="15.0" fill="rgb(207,1,42)" rx="2" ry="2" />
<text  x="818.40" y="1871.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1653" width="13.7" height="15.0" fill="rgb(227,164,5)" rx="2" ry="2" />
<text  x="427.11" y="1663.5" ></text>
</g>
<g >
<title>__wake_up_common (199,055 samples, 0.52%)</title><rect x="526.3" y="389" width="6.1" height="15.0" fill="rgb(250,143,43)" rx="2" ry="2" />
<text  x="529.32" y="399.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_msg_op::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1013" width="12.0" height="15.0" fill="rgb(233,156,39)" rx="2" ry="2" />
<text  x="1163.49" y="1023.5" ></text>
</g>
<g >
<title>__ip_finish_output (377,915 samples, 0.98%)</title><rect x="1013.3" y="357" width="11.6" height="15.0" fill="rgb(250,46,40)" rx="2" ry="2" />
<text  x="1016.30" y="367.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="597" width="12.3" height="15.0" fill="rgb(241,188,18)" rx="2" ry="2" />
<text  x="210.71" y="607.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::~basic_stream (731,150 samples, 1.90%)</title><rect x="888.1" y="1253" width="22.5" height="15.0" fill="rgb(208,62,30)" rx="2" ry="2" />
<text  x="891.14" y="1263.5" >b..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;::create_implementation&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; (237,370 samples, 0.62%)</title><rect x="200.4" y="1205" width="7.3" height="15.0" fill="rgb(224,84,9)" rx="2" ry="2" />
<text  x="203.41" y="1215.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1605" width="126.5" height="15.0" fill="rgb(205,133,10)" rx="2" ry="2" />
<text  x="285.81" y="1615.5" >boost_asio_hand..</text>
</g>
<g >
<title>mmap_region (102,347 samples, 0.27%)</title><rect x="91.6" y="1877" width="3.2" height="15.0" fill="rgb(207,140,7)" rx="2" ry="2" />
<text  x="94.62" y="1887.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (199,055 samples, 0.52%)</title><rect x="526.3" y="693" width="6.1" height="15.0" fill="rgb(215,215,53)" rx="2" ry="2" />
<text  x="529.32" y="703.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="773" width="17.4" height="15.0" fill="rgb(250,185,29)" rx="2" ry="2" />
<text  x="998.94" y="783.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Read (199,055 samples, 0.52%)</title><rect x="207.7" y="453" width="6.1" height="15.0" fill="rgb(245,40,27)" rx="2" ry="2" />
<text  x="210.71" y="463.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder1&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::system::error_code&gt;, std::allocator&lt;void&gt; &gt; (201,887 samples, 0.53%)</title><rect x="417.9" y="1669" width="6.2" height="15.0" fill="rgb(239,114,38)" rx="2" ry="2" />
<text  x="420.90" y="1679.5" ></text>
</g>
<g >
<title>http_handler::RequestHandler::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1109" width="12.0" height="15.0" fill="rgb(232,13,22)" rx="2" ry="2" />
<text  x="1163.49" y="1119.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="885" width="11.6" height="15.0" fill="rgb(218,40,40)" rx="2" ry="2" />
<text  x="1016.30" y="895.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (731,150 samples, 1.90%)</title><rect x="888.1" y="1621" width="22.5" height="15.0" fill="rgb(210,92,43)" rx="2" ry="2" />
<text  x="891.14" y="1631.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1461" width="126.5" height="15.0" fill="rgb(238,207,48)" rx="2" ry="2" />
<text  x="285.81" y="1471.5" >boost::asio::de..</text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (204,803 samples, 0.53%)</title><rect x="715.0" y="1685" width="6.3" height="15.0" fill="rgb(227,51,25)" rx="2" ry="2" />
<text  x="717.99" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="997" width="8.4" height="15.0" fill="rgb(243,85,28)" rx="2" ry="2" />
<text  x="446.93" y="1007.5" ></text>
</g>
<g >
<title>do_user_addr_fault (199,526 samples, 0.52%)</title><rect x="803.2" y="1957" width="6.1" height="15.0" fill="rgb(222,12,44)" rx="2" ry="2" />
<text  x="806.16" y="1967.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (200,583 samples, 0.52%)</title><rect x="1056.4" y="1845" width="6.1" height="15.0" fill="rgb(232,160,34)" rx="2" ry="2" />
<text  x="1059.37" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1013" width="6.9" height="15.0" fill="rgb(211,188,4)" rx="2" ry="2" />
<text  x="839.05" y="1023.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (398,423 samples, 1.04%)</title><rect x="868.5" y="1557" width="12.3" height="15.0" fill="rgb(243,214,15)" rx="2" ry="2" />
<text  x="871.52" y="1567.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="949" width="12.0" height="15.0" fill="rgb(209,60,54)" rx="2" ry="2" />
<text  x="1163.49" y="959.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (386,584 samples, 1.01%)</title><rect x="912.9" y="1781" width="11.9" height="15.0" fill="rgb(244,77,17)" rx="2" ry="2" />
<text  x="915.93" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::any_executor&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1701" width="6.1" height="15.0" fill="rgb(217,172,31)" rx="2" ry="2" />
<text  x="461.42" y="1711.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1861" width="17.4" height="15.0" fill="rgb(247,95,31)" rx="2" ry="2" />
<text  x="998.94" y="1871.5" ></text>
</g>
<g >
<title>__munmap (199,763 samples, 0.52%)</title><rect x="23.9" y="2021" width="6.2" height="15.0" fill="rgb(225,84,21)" rx="2" ry="2" />
<text  x="26.92" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_assign (199,055 samples, 0.52%)</title><rect x="843.0" y="1893" width="6.1" height="15.0" fill="rgb(229,130,11)" rx="2" ry="2" />
<text  x="845.97" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (239,731 samples, 0.62%)</title><rect x="880.8" y="1797" width="7.3" height="15.0" fill="rgb(207,106,2)" rx="2" ry="2" />
<text  x="883.77" y="1807.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1461" width="20.6" height="15.0" fill="rgb(212,46,16)" rx="2" ry="2" />
<text  x="440.79" y="1471.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="2037" width="17.4" height="15.0" fill="rgb(226,187,50)" rx="2" ry="2" />
<text  x="998.94" y="2047.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="821" width="13.7" height="15.0" fill="rgb(232,209,51)" rx="2" ry="2" />
<text  x="427.11" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1525" width="126.5" height="15.0" fill="rgb(216,213,16)" rx="2" ry="2" />
<text  x="285.81" y="1535.5" >boost::asio::de..</text>
</g>
<g >
<title>timerfd_create (198,769 samples, 0.52%)</title><rect x="809.3" y="1829" width="6.1" height="15.0" fill="rgb(250,165,46)" rx="2" ry="2" />
<text  x="812.29" y="1839.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::asio::const_buffer const*, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::variant (271,965 samples, 0.71%)</title><rect x="443.9" y="693" width="8.4" height="15.0" fill="rgb(252,128,16)" rx="2" ry="2" />
<text  x="446.93" y="703.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="965" width="8.4" height="15.0" fill="rgb(240,187,13)" rx="2" ry="2" />
<text  x="446.93" y="975.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (199,055 samples, 0.52%)</title><rect x="526.3" y="853" width="6.1" height="15.0" fill="rgb(223,163,50)" rx="2" ry="2" />
<text  x="529.32" y="863.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (220,757 samples, 0.58%)</title><rect x="97.6" y="1893" width="6.8" height="15.0" fill="rgb(206,149,36)" rx="2" ry="2" />
<text  x="100.60" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::detail::bind_front_wrapper&lt;void  (199,055 samples, 0.52%)</title><rect x="458.4" y="1813" width="6.1" height="15.0" fill="rgb(240,100,26)" rx="2" ry="2" />
<text  x="461.42" y="1823.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (165,800 samples, 0.43%)</title><rect x="912.9" y="1205" width="5.1" height="15.0" fill="rgb(229,11,12)" rx="2" ry="2" />
<text  x="915.93" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1541" width="14.5" height="15.0" fill="rgb(209,44,42)" rx="2" ry="2" />
<text  x="831.53" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::query_helper&lt;boost::asio::execution::detail::blocking_t&lt;0&gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1637" width="6.1" height="15.0" fill="rgb(238,46,9)" rx="2" ry="2" />
<text  x="461.42" y="1647.5" ></text>
</g>
<g >
<title>__open64_nocancel (234,592 samples, 0.61%)</title><rect x="981.2" y="2021" width="7.2" height="15.0" fill="rgb(222,177,42)" rx="2" ry="2" />
<text  x="984.18" y="2031.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_some_op::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="965" width="11.2" height="15.0" fill="rgb(233,4,0)" rx="2" ry="2" />
<text  x="1175.49" y="975.5" ></text>
</g>
<g >
<title>psi_task_change (404,605 samples, 1.05%)</title><rect x="790.6" y="1669" width="12.4" height="15.0" fill="rgb(230,218,53)" rx="2" ry="2" />
<text  x="793.57" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="517" width="12.3" height="15.0" fill="rgb(245,103,6)" rx="2" ry="2" />
<text  x="210.71" y="527.5" ></text>
</g>
<g >
<title>main::{lambda (4,006,109 samples, 10.44%)</title><rect x="827.6" y="2021" width="123.1" height="15.0" fill="rgb(236,46,38)" rx="2" ry="2" />
<text  x="830.60" y="2031.5" >main::{lambda</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1733" width="5.4" height="15.0" fill="rgb(228,123,3)" rx="2" ry="2" />
<text  x="724.29" y="1743.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::operator++ (175,630 samples, 0.46%)</title><rect x="721.3" y="1141" width="5.4" height="15.0" fill="rgb(220,183,48)" rx="2" ry="2" />
<text  x="724.29" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="2005" width="17.4" height="15.0" fill="rgb(224,48,4)" rx="2" ry="2" />
<text  x="998.94" y="2015.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1445" width="163.7" height="15.0" fill="rgb(240,46,8)" rx="2" ry="2" />
<text  x="543.19" y="1455.5" >boost_asio_handler_in..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (244,735 samples, 0.64%)</title><rect x="828.5" y="1333" width="7.6" height="15.0" fill="rgb(236,105,17)" rx="2" ry="2" />
<text  x="831.53" y="1343.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (805,936 samples, 2.10%)</title><rect x="220.0" y="1173" width="24.7" height="15.0" fill="rgb(251,109,0)" rx="2" ry="2" />
<text  x="222.95" y="1183.5" >s..</text>
</g>
<g >
<title>boost::asio::detail::scoped_lock&lt;boost::asio::detail::posix_mutex&gt;::~scoped_lock (237,370 samples, 0.62%)</title><rect x="200.4" y="1189" width="7.3" height="15.0" fill="rgb(205,76,37)" rx="2" ry="2" />
<text  x="203.41" y="1199.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_msg_op::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1253" width="11.6" height="15.0" fill="rgb(242,91,27)" rx="2" ry="2" />
<text  x="1016.30" y="1263.5" ></text>
</g>
<g >
<title>activate_task (199,055 samples, 0.52%)</title><rect x="526.3" y="245" width="6.1" height="15.0" fill="rgb(236,36,46)" rx="2" ry="2" />
<text  x="529.32" y="255.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (20,679,395 samples, 53.87%)</title><rect x="167.5" y="2037" width="635.7" height="15.0" fill="rgb(243,98,47)" rx="2" ry="2" />
<text  x="170.50" y="2047.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>irq_work_queue (237,370 samples, 0.62%)</title><rect x="111.5" y="1813" width="7.3" height="15.0" fill="rgb(243,50,36)" rx="2" ry="2" />
<text  x="114.46" y="1823.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1221" width="24.7" height="15.0" fill="rgb(227,167,50)" rx="2" ry="2" />
<text  x="222.95" y="1231.5" >s..</text>
</g>
<g >
<title>boost::beast::http::parser&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::on_field_impl (1,934,028 samples, 5.04%)</title><rect x="638.3" y="1173" width="59.5" height="15.0" fill="rgb(229,122,42)" rx="2" ry="2" />
<text  x="641.33" y="1183.5" >boost:..</text>
</g>
<g >
<title>native_smp_send_reschedule (199,005 samples, 0.52%)</title><rect x="84.6" y="1925" width="6.1" height="15.0" fill="rgb(249,121,3)" rx="2" ry="2" />
<text  x="87.57" y="1935.5" ></text>
</g>
<g >
<title>inet_release (199,055 samples, 0.52%)</title><rect x="526.3" y="933" width="6.1" height="15.0" fill="rgb(249,74,36)" rx="2" ry="2" />
<text  x="529.32" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (445,208 samples, 1.16%)</title><rect x="424.1" y="581" width="13.7" height="15.0" fill="rgb(233,110,3)" rx="2" ry="2" />
<text  x="427.11" y="591.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="949" width="6.9" height="15.0" fill="rgb(233,58,35)" rx="2" ry="2" />
<text  x="839.05" y="959.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1477" width="22.5" height="15.0" fill="rgb(223,184,30)" rx="2" ry="2" />
<text  x="891.14" y="1487.5" >b..</text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1045" width="8.4" height="15.0" fill="rgb(240,220,25)" rx="2" ry="2" />
<text  x="446.93" y="1055.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1621" width="11.2" height="15.0" fill="rgb(232,196,43)" rx="2" ry="2" />
<text  x="1175.49" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (199,055 samples, 0.52%)</title><rect x="526.3" y="549" width="6.1" height="15.0" fill="rgb(252,89,10)" rx="2" ry="2" />
<text  x="529.32" y="559.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (364,717 samples, 0.95%)</title><rect x="1172.5" y="245" width="11.2" height="15.0" fill="rgb(244,106,0)" rx="2" ry="2" />
<text  x="1175.49" y="255.5" ></text>
</g>
<g >
<title>load_elf_binary (124,279 samples, 0.32%)</title><rect x="91.6" y="1957" width="3.8" height="15.0" fill="rgb(243,86,33)" rx="2" ry="2" />
<text  x="94.62" y="1967.5" ></text>
</g>
<g >
<title>ttwu_do_activate (20,733 samples, 0.05%)</title><rect x="159.9" y="1909" width="0.6" height="15.0" fill="rgb(215,203,11)" rx="2" ry="2" />
<text  x="162.90" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::query_blocking&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1669" width="6.1" height="15.0" fill="rgb(248,95,20)" rx="2" ry="2" />
<text  x="461.42" y="1679.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (404,605 samples, 1.05%)</title><rect x="291.4" y="1109" width="12.5" height="15.0" fill="rgb(225,90,47)" rx="2" ry="2" />
<text  x="294.43" y="1119.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13,264 samples, 0.03%)</title><rect x="827.6" y="1877" width="0.4" height="15.0" fill="rgb(209,37,37)" rx="2" ry="2" />
<text  x="830.60" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1605" width="12.3" height="15.0" fill="rgb(218,64,9)" rx="2" ry="2" />
<text  x="871.52" y="1615.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1381" width="5.1" height="15.0" fill="rgb(222,150,6)" rx="2" ry="2" />
<text  x="915.93" y="1391.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (364,717 samples, 0.95%)</title><rect x="1172.5" y="373" width="11.2" height="15.0" fill="rgb(217,164,12)" rx="2" ry="2" />
<text  x="1175.49" y="383.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (225,146 samples, 0.59%)</title><rect x="836.1" y="1077" width="6.9" height="15.0" fill="rgb(234,101,28)" rx="2" ry="2" />
<text  x="839.05" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1733" width="6.9" height="15.0" fill="rgb(236,97,12)" rx="2" ry="2" />
<text  x="1027.92" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="629" width="6.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1027.92" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, void, boost::asio::io_context, boost::asio::executor, void&gt;::handler_work_base (871,147 samples, 2.27%)</title><rect x="732.2" y="1797" width="26.8" height="15.0" fill="rgb(246,8,30)" rx="2" ry="2" />
<text  x="735.19" y="1807.5" >b..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (6,058,823 samples, 15.78%)</title><rect x="517.7" y="1541" width="186.2" height="15.0" fill="rgb(217,172,21)" rx="2" ry="2" />
<text  x="520.66" y="1551.5" >boost_asio_handler_invok..</text>
</g>
<g >
<title>_dl_sysdep_start (1,607,959 samples, 4.19%)</title><rect x="23.9" y="2037" width="49.4" height="15.0" fill="rgb(225,141,43)" rx="2" ry="2" />
<text  x="26.92" y="2047.5" >_dl_..</text>
</g>
<g >
<title>ret_from_intr (244,735 samples, 0.64%)</title><rect x="828.5" y="1173" width="7.6" height="15.0" fill="rgb(228,39,29)" rx="2" ry="2" />
<text  x="831.53" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1925" width="17.4" height="15.0" fill="rgb(226,45,2)" rx="2" ry="2" />
<text  x="998.94" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::perform_io (643,485 samples, 1.68%)</title><rect x="170.4" y="1813" width="19.8" height="15.0" fill="rgb(243,138,27)" rx="2" ry="2" />
<text  x="173.43" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="2037" width="11.6" height="15.0" fill="rgb(238,44,54)" rx="2" ry="2" />
<text  x="1016.30" y="2047.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1029" width="6.9" height="15.0" fill="rgb(247,197,49)" rx="2" ry="2" />
<text  x="839.05" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="485" width="6.9" height="15.0" fill="rgb(223,54,0)" rx="2" ry="2" />
<text  x="1027.92" y="495.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_write_some&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="869" width="11.2" height="15.0" fill="rgb(224,39,19)" rx="2" ry="2" />
<text  x="1175.49" y="879.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::basic_parser_base::is_print (245,495 samples, 0.64%)</title><rect x="630.8" y="1141" width="7.5" height="15.0" fill="rgb(226,137,52)" rx="2" ry="2" />
<text  x="633.78" y="1151.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;http_server::Session&lt;main::{lambda (733,234 samples, 1.91%)</title><rect x="517.7" y="1221" width="22.5" height="15.0" fill="rgb(212,42,8)" rx="2" ry="2" />
<text  x="520.66" y="1231.5" >s..</text>
</g>
<g >
<title>tcp_send_ack (377,915 samples, 0.98%)</title><rect x="1013.3" y="53" width="11.6" height="15.0" fill="rgb(222,86,38)" rx="2" ry="2" />
<text  x="1016.30" y="63.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (398,423 samples, 1.04%)</title><rect x="868.5" y="1637" width="12.3" height="15.0" fill="rgb(217,15,33)" rx="2" ry="2" />
<text  x="871.52" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1701" width="17.4" height="15.0" fill="rgb(246,181,3)" rx="2" ry="2" />
<text  x="998.94" y="1711.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="821" width="6.9" height="15.0" fill="rgb(254,26,19)" rx="2" ry="2" />
<text  x="839.05" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_vma (209,856 samples, 0.55%)</title><rect x="48.5" y="1877" width="6.4" height="15.0" fill="rgb(251,185,4)" rx="2" ry="2" />
<text  x="51.48" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_op::operator (1,915,375 samples, 4.99%)</title><rect x="540.2" y="805" width="58.9" height="15.0" fill="rgb(220,67,43)" rx="2" ry="2" />
<text  x="543.19" y="815.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (8,352,562 samples, 21.76%)</title><rect x="464.5" y="1829" width="256.8" height="15.0" fill="rgb(236,6,22)" rx="2" ry="2" />
<text  x="467.54" y="1839.5" >boost::asio::detail::reactive_sock..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="901" width="6.9" height="15.0" fill="rgb(225,24,42)" rx="2" ry="2" />
<text  x="839.05" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::register_descriptor (199,055 samples, 0.52%)</title><rect x="843.0" y="1845" width="6.1" height="15.0" fill="rgb(248,85,46)" rx="2" ry="2" />
<text  x="845.97" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::operator* (674,489 samples, 1.76%)</title><rect x="578.3" y="341" width="20.8" height="15.0" fill="rgb(219,2,24)" rx="2" ry="2" />
<text  x="581.34" y="351.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1141" width="8.4" height="15.0" fill="rgb(249,154,43)" rx="2" ry="2" />
<text  x="446.93" y="1151.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1477" width="6.9" height="15.0" fill="rgb(253,4,43)" rx="2" ry="2" />
<text  x="1027.92" y="1487.5" ></text>
</g>
<g >
<title>mprotect_fixup (21,932 samples, 0.06%)</title><rect x="94.8" y="1925" width="0.6" height="15.0" fill="rgb(227,174,26)" rx="2" ry="2" />
<text  x="97.77" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1349" width="6.9" height="15.0" fill="rgb(221,17,35)" rx="2" ry="2" />
<text  x="1027.92" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="789" width="12.3" height="15.0" fill="rgb(241,62,32)" rx="2" ry="2" />
<text  x="210.71" y="799.5" ></text>
</g>
<g >
<title>do_futex (57,179 samples, 0.15%)</title><rect x="168.7" y="1701" width="1.7" height="15.0" fill="rgb(227,177,52)" rx="2" ry="2" />
<text  x="171.67" y="1711.5" ></text>
</g>
<g >
<title>perf_event_exec (5,883 samples, 0.02%)</title><rect x="1189.8" y="1925" width="0.2" height="15.0" fill="rgb(232,65,12)" rx="2" ry="2" />
<text  x="1192.82" y="1935.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1429" width="163.7" height="15.0" fill="rgb(239,55,21)" rx="2" ry="2" />
<text  x="543.19" y="1439.5" >boost::beast::asio_ha..</text>
</g>
<g >
<title>dentry_unlink_inode (281,962 samples, 0.73%)</title><rect x="517.7" y="933" width="8.6" height="15.0" fill="rgb(209,2,7)" rx="2" ry="2" />
<text  x="520.66" y="943.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="853" width="58.9" height="15.0" fill="rgb(241,116,17)" rx="2" ry="2" />
<text  x="543.19" y="863.5" >boost:..</text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="581" width="12.3" height="15.0" fill="rgb(234,80,8)" rx="2" ry="2" />
<text  x="210.71" y="591.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1397" width="44.3" height="15.0" fill="rgb(218,201,45)" rx="2" ry="2" />
<text  x="203.41" y="1407.5" >boos..</text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="981" width="12.0" height="15.0" fill="rgb(232,151,41)" rx="2" ry="2" />
<text  x="1163.49" y="991.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn_impl&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (204,803 samples, 0.53%)</title><rect x="715.0" y="1717" width="6.3" height="15.0" fill="rgb(251,63,10)" rx="2" ry="2" />
<text  x="717.99" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;boost::asio::detail::strand_executor_service::strand_impl&gt;::~shared_ptr (360,270 samples, 0.94%)</title><rect x="506.6" y="1621" width="11.1" height="15.0" fill="rgb(212,46,22)" rx="2" ry="2" />
<text  x="509.58" y="1631.5" ></text>
</g>
<g >
<title>tcp_write_xmit (364,717 samples, 0.95%)</title><rect x="1172.5" y="389" width="11.2" height="15.0" fill="rgb(205,191,1)" rx="2" ry="2" />
<text  x="1175.49" y="399.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="789" width="6.9" height="15.0" fill="rgb(253,5,19)" rx="2" ry="2" />
<text  x="839.05" y="799.5" ></text>
</g>
<g >
<title>get_futex_value_locked (31,445 samples, 0.08%)</title><rect x="156.9" y="1925" width="1.0" height="15.0" fill="rgb(248,143,40)" rx="2" ry="2" />
<text  x="159.91" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="885" width="12.3" height="15.0" fill="rgb(235,147,26)" rx="2" ry="2" />
<text  x="210.71" y="895.5" ></text>
</g>
<g >
<title>__update_load_avg_se (143,269 samples, 0.37%)</title><rect x="786.2" y="1621" width="4.4" height="15.0" fill="rgb(254,203,0)" rx="2" ry="2" />
<text  x="789.17" y="1631.5" ></text>
</g>
<g >
<title>boost::beast::detail::tuple&lt;std::shared_ptr&lt;http_server::SessionBase&gt; &gt;::~tuple (733,234 samples, 1.91%)</title><rect x="517.7" y="1333" width="22.5" height="15.0" fill="rgb(237,99,5)" rx="2" ry="2" />
<text  x="520.66" y="1343.5" >b..</text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::destruct (220,784 samples, 0.58%)</title><rect x="918.0" y="1285" width="6.8" height="15.0" fill="rgb(218,190,13)" rx="2" ry="2" />
<text  x="921.02" y="1295.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (445,208 samples, 1.16%)</title><rect x="424.1" y="1157" width="13.7" height="15.0" fill="rgb(241,75,53)" rx="2" ry="2" />
<text  x="427.11" y="1167.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="965" width="13.7" height="15.0" fill="rgb(243,177,47)" rx="2" ry="2" />
<text  x="427.11" y="975.5" ></text>
</g>
<g >
<title>__do_page_fault (245,495 samples, 0.64%)</title><rect x="988.4" y="2005" width="7.5" height="15.0" fill="rgb(234,16,14)" rx="2" ry="2" />
<text  x="991.39" y="2015.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1317" width="6.9" height="15.0" fill="rgb(247,80,11)" rx="2" ry="2" />
<text  x="1027.92" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (7,981,362 samples, 20.79%)</title><rect x="476.0" y="1813" width="245.3" height="15.0" fill="rgb(249,29,50)" rx="2" ry="2" />
<text  x="478.95" y="1823.5" >boost::asio::detail::handler_wor..</text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1365" width="12.0" height="15.0" fill="rgb(231,222,50)" rx="2" ry="2" />
<text  x="1163.49" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="901" width="6.9" height="15.0" fill="rgb(247,21,9)" rx="2" ry="2" />
<text  x="1027.92" y="911.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1285" width="6.9" height="15.0" fill="rgb(233,99,40)" rx="2" ry="2" />
<text  x="1027.92" y="1295.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1429" width="14.5" height="15.0" fill="rgb(212,61,0)" rx="2" ry="2" />
<text  x="831.53" y="1439.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_write_op::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="661" width="12.0" height="15.0" fill="rgb(239,181,16)" rx="2" ry="2" />
<text  x="1163.49" y="671.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1589" width="12.0" height="15.0" fill="rgb(212,35,11)" rx="2" ry="2" />
<text  x="1163.49" y="1599.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="725" width="13.7" height="15.0" fill="rgb(208,109,48)" rx="2" ry="2" />
<text  x="427.11" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1189" width="24.7" height="15.0" fill="rgb(240,143,19)" rx="2" ry="2" />
<text  x="222.95" y="1199.5" >s..</text>
</g>
<g >
<title>filemap_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1845" width="6.1" height="15.0" fill="rgb(212,141,26)" rx="2" ry="2" />
<text  x="70.21" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt;::buffers_prefix_view (929,233 samples, 2.42%)</title><rect x="549.8" y="597" width="28.5" height="15.0" fill="rgb(216,227,30)" rx="2" ry="2" />
<text  x="552.77" y="607.5" >bo..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1717" width="40.5" height="15.0" fill="rgb(206,42,30)" rx="2" ry="2" />
<text  x="420.90" y="1727.5" >boo..</text>
</g>
<g >
<title>__x64_sys_mprotect (160,702 samples, 0.42%)</title><rect x="963.0" y="2005" width="4.9" height="15.0" fill="rgb(231,116,33)" rx="2" ry="2" />
<text  x="965.98" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1269" width="126.5" height="15.0" fill="rgb(214,104,44)" rx="2" ry="2" />
<text  x="285.81" y="1279.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1141" width="11.6" height="15.0" fill="rgb(232,69,10)" rx="2" ry="2" />
<text  x="1016.30" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1621" width="6.9" height="15.0" fill="rgb(243,33,37)" rx="2" ry="2" />
<text  x="1027.92" y="1631.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (34,610 samples, 0.09%)</title><rect x="148.6" y="1877" width="1.0" height="15.0" fill="rgb(238,222,37)" rx="2" ry="2" />
<text  x="151.58" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="869" width="11.6" height="15.0" fill="rgb(226,90,28)" rx="2" ry="2" />
<text  x="1016.30" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1765" width="40.5" height="15.0" fill="rgb(251,188,16)" rx="2" ry="2" />
<text  x="420.90" y="1775.5" >boo..</text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_value&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1749" width="6.1" height="15.0" fill="rgb(251,173,18)" rx="2" ry="2" />
<text  x="818.40" y="1759.5" ></text>
</g>
<g >
<title>try_to_wake_up (199,055 samples, 0.52%)</title><rect x="526.3" y="277" width="6.1" height="15.0" fill="rgb(209,8,23)" rx="2" ry="2" />
<text  x="529.32" y="287.5" ></text>
</g>
<g >
<title>ip_output (390,290 samples, 1.02%)</title><rect x="1160.5" y="149" width="12.0" height="15.0" fill="rgb(240,110,40)" rx="2" ry="2" />
<text  x="1163.49" y="159.5" ></text>
</g>
<g >
<title>schedule (777,495 samples, 2.03%)</title><rect x="779.3" y="1717" width="23.9" height="15.0" fill="rgb(221,112,6)" rx="2" ry="2" />
<text  x="782.26" y="1727.5" >s..</text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1237" width="11.6" height="15.0" fill="rgb(240,49,34)" rx="2" ry="2" />
<text  x="1016.30" y="1247.5" ></text>
</g>
<g >
<title>__remove_shared_vm_struct (200,583 samples, 0.52%)</title><rect x="1056.4" y="1861" width="6.1" height="15.0" fill="rgb(207,221,17)" rx="2" ry="2" />
<text  x="1059.37" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (377,915 samples, 0.98%)</title><rect x="1013.3" y="181" width="11.6" height="15.0" fill="rgb(247,191,1)" rx="2" ry="2" />
<text  x="1016.30" y="191.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="853" width="6.9" height="15.0" fill="rgb(242,121,50)" rx="2" ry="2" />
<text  x="839.05" y="863.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1333" width="12.0" height="15.0" fill="rgb(249,224,46)" rx="2" ry="2" />
<text  x="1163.49" y="1343.5" ></text>
</g>
<g >
<title>boost::beast::detail::execution_work_guard&lt;boost::asio::any_io_executor&gt;::~execution_work_guard (204,803 samples, 0.53%)</title><rect x="469.7" y="1685" width="6.3" height="15.0" fill="rgb(252,38,54)" rx="2" ry="2" />
<text  x="472.66" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1429" width="126.5" height="15.0" fill="rgb(254,54,40)" rx="2" ry="2" />
<text  x="285.81" y="1439.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::beast::http::detail::run_write_some_op::operator (1,915,375 samples, 4.99%)</title><rect x="540.2" y="693" width="58.9" height="15.0" fill="rgb(205,60,31)" rx="2" ry="2" />
<text  x="543.19" y="703.5" >boost:..</text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1317" width="5.4" height="15.0" fill="rgb(242,30,26)" rx="2" ry="2" />
<text  x="724.29" y="1327.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (5,883 samples, 0.02%)</title><rect x="1189.8" y="1893" width="0.2" height="15.0" fill="rgb(218,113,46)" rx="2" ry="2" />
<text  x="1192.82" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1333" width="11.2" height="15.0" fill="rgb(217,22,20)" rx="2" ry="2" />
<text  x="1175.49" y="1343.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1061" width="13.7" height="15.0" fill="rgb(237,121,53)" rx="2" ry="2" />
<text  x="427.11" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::async_wait&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, boost::asio::any_io_executor&gt; (558,783 samples, 1.46%)</title><rect x="303.9" y="1029" width="17.1" height="15.0" fill="rgb(225,156,20)" rx="2" ry="2" />
<text  x="306.86" y="1039.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (1,915,375 samples, 4.99%)</title><rect x="540.2" y="981" width="58.9" height="15.0" fill="rgb(209,166,38)" rx="2" ry="2" />
<text  x="543.19" y="991.5" >http_s..</text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; (237,370 samples, 0.62%)</title><rect x="200.4" y="1221" width="7.3" height="15.0" fill="rgb(229,52,54)" rx="2" ry="2" />
<text  x="203.41" y="1231.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1397" width="13.7" height="15.0" fill="rgb(248,226,24)" rx="2" ry="2" />
<text  x="427.11" y="1407.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_move_accept_op&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (2,603,975 samples, 6.78%)</title><rect x="190.2" y="1797" width="80.0" height="15.0" fill="rgb(230,12,10)" rx="2" ry="2" />
<text  x="193.21" y="1807.5" >boost::as..</text>
</g>
<g >
<title>std::__shared_ptr&lt;boost::asio::detail::strand_executor_service::strand_impl,  (445,208 samples, 1.16%)</title><rect x="424.1" y="597" width="13.7" height="15.0" fill="rgb(251,181,48)" rx="2" ry="2" />
<text  x="427.11" y="607.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (731,150 samples, 1.90%)</title><rect x="888.1" y="1781" width="22.5" height="15.0" fill="rgb(218,102,28)" rx="2" ry="2" />
<text  x="891.14" y="1791.5" >b..</text>
</g>
<g >
<title>open_path (234,592 samples, 0.61%)</title><rect x="981.2" y="2037" width="7.2" height="15.0" fill="rgb(220,127,4)" rx="2" ry="2" />
<text  x="984.18" y="2047.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1765" width="11.6" height="15.0" fill="rgb(250,185,9)" rx="2" ry="2" />
<text  x="1016.30" y="1775.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;7ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::dereference&gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="325" width="20.8" height="15.0" fill="rgb(233,30,28)" rx="2" ry="2" />
<text  x="581.34" y="335.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="805" width="6.9" height="15.0" fill="rgb(236,31,39)" rx="2" ry="2" />
<text  x="1027.92" y="815.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1685" width="6.1" height="15.0" fill="rgb(249,226,33)" rx="2" ry="2" />
<text  x="461.42" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_receive::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="133" width="6.9" height="15.0" fill="rgb(254,219,16)" rx="2" ry="2" />
<text  x="1027.92" y="143.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="741" width="12.3" height="15.0" fill="rgb(225,140,37)" rx="2" ry="2" />
<text  x="210.71" y="751.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="901" width="12.3" height="15.0" fill="rgb(216,160,9)" rx="2" ry="2" />
<text  x="210.71" y="911.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_value&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1845" width="6.1" height="15.0" fill="rgb(211,191,51)" rx="2" ry="2" />
<text  x="818.40" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_event::maybe_unlock_and_signal_one (57,179 samples, 0.15%)</title><rect x="168.7" y="1829" width="1.7" height="15.0" fill="rgb(226,81,27)" rx="2" ry="2" />
<text  x="171.67" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (2,187,879 samples, 5.70%)</title><rect x="282.8" y="1157" width="67.3" height="15.0" fill="rgb(237,37,38)" rx="2" ry="2" />
<text  x="285.81" y="1167.5" >boost::..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (165,800 samples, 0.43%)</title><rect x="912.9" y="1253" width="5.1" height="15.0" fill="rgb(227,212,10)" rx="2" ry="2" />
<text  x="915.93" y="1263.5" ></text>
</g>
<g >
<title>http_server::Listener&lt;main::{lambda (469,881 samples, 1.22%)</title><rect x="828.5" y="1381" width="14.5" height="15.0" fill="rgb(205,52,35)" rx="2" ry="2" />
<text  x="831.53" y="1391.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1301" width="126.5" height="15.0" fill="rgb(228,190,35)" rx="2" ry="2" />
<text  x="285.81" y="1311.5" >boost::beast::d..</text>
</g>
<g >
<title>__mod_zone_page_state (199,763 samples, 0.52%)</title><rect x="23.9" y="1861" width="6.2" height="15.0" fill="rgb(223,46,12)" rx="2" ry="2" />
<text  x="26.92" y="1871.5" ></text>
</g>
<g >
<title>do_user_addr_fault (245,495 samples, 0.64%)</title><rect x="988.4" y="1989" width="7.5" height="15.0" fill="rgb(222,144,47)" rx="2" ry="2" />
<text  x="991.39" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="885" width="12.0" height="15.0" fill="rgb(229,36,36)" rx="2" ry="2" />
<text  x="1163.49" y="895.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="213" width="6.9" height="15.0" fill="rgb(237,37,51)" rx="2" ry="2" />
<text  x="1027.92" y="223.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="725" width="58.9" height="15.0" fill="rgb(223,146,47)" rx="2" ry="2" />
<text  x="543.19" y="735.5" >boost:..</text>
</g>
<g >
<title>link_path_walk.part.0 (234,592 samples, 0.61%)</title><rect x="981.2" y="1909" width="7.2" height="15.0" fill="rgb(226,36,42)" rx="2" ry="2" />
<text  x="984.18" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1349" width="22.5" height="15.0" fill="rgb(241,32,52)" rx="2" ry="2" />
<text  x="520.66" y="1359.5" >b..</text>
</g>
<g >
<title>boost::beast::http::detail::run_read_msg_op::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="501" width="6.9" height="15.0" fill="rgb(228,165,20)" rx="2" ry="2" />
<text  x="839.05" y="511.5" ></text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::const_iterator::operator++ (929,233 samples, 2.42%)</title><rect x="549.8" y="565" width="28.5" height="15.0" fill="rgb(215,228,21)" rx="2" ry="2" />
<text  x="552.77" y="575.5" >bo..</text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::next&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="853" width="17.4" height="15.0" fill="rgb(239,67,31)" rx="2" ry="2" />
<text  x="998.94" y="863.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1349" width="14.5" height="15.0" fill="rgb(212,110,45)" rx="2" ry="2" />
<text  x="446.93" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (558,783 samples, 1.46%)</title><rect x="303.9" y="981" width="17.1" height="15.0" fill="rgb(207,90,7)" rx="2" ry="2" />
<text  x="306.86" y="991.5" ></text>
</g>
<g >
<title>boost::asio::dispatch&lt;boost::asio::any_io_executor, boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="1221" width="12.3" height="15.0" fill="rgb(207,196,9)" rx="2" ry="2" />
<text  x="210.71" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt; &gt;::do_perform (377,915 samples, 0.98%)</title><rect x="1013.3" y="709" width="11.6" height="15.0" fill="rgb(239,135,21)" rx="2" ry="2" />
<text  x="1016.30" y="719.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1061" width="11.2" height="15.0" fill="rgb(219,91,3)" rx="2" ry="2" />
<text  x="1175.49" y="1071.5" ></text>
</g>
<g >
<title>handle_mm_fault (245,495 samples, 0.64%)</title><rect x="988.4" y="1973" width="7.5" height="15.0" fill="rgb(244,201,22)" rx="2" ry="2" />
<text  x="991.39" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,780,498 samples, 7.24%)</title><rect x="1075.0" y="2005" width="85.5" height="15.0" fill="rgb(240,47,53)" rx="2" ry="2" />
<text  x="1078.02" y="2015.5" >__x64_sys_..</text>
</g>
<g >
<title>__vma_link_file (206,444 samples, 0.54%)</title><rect x="1068.7" y="1909" width="6.3" height="15.0" fill="rgb(207,216,9)" rx="2" ry="2" />
<text  x="1071.68" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1541" width="11.6" height="15.0" fill="rgb(239,87,52)" rx="2" ry="2" />
<text  x="1016.30" y="1551.5" ></text>
</g>
<g >
<title>tcp_sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="389" width="17.4" height="15.0" fill="rgb(221,123,54)" rx="2" ry="2" />
<text  x="998.94" y="399.5" ></text>
</g>
<g >
<title>futex_wake (1,714,345 samples, 4.47%)</title><rect x="1093.6" y="1973" width="52.7" height="15.0" fill="rgb(226,57,39)" rx="2" ry="2" />
<text  x="1096.58" y="1983.5" >futex..</text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1429" width="17.4" height="15.0" fill="rgb(207,130,33)" rx="2" ry="2" />
<text  x="998.94" y="1439.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1413" width="11.6" height="15.0" fill="rgb(218,0,33)" rx="2" ry="2" />
<text  x="1016.30" y="1423.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="1029" width="12.3" height="15.0" fill="rgb(229,149,51)" rx="2" ry="2" />
<text  x="210.71" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1909" width="12.0" height="15.0" fill="rgb(211,190,53)" rx="2" ry="2" />
<text  x="1163.49" y="1919.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;4ul, boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::destroy&gt; (220,784 samples, 0.58%)</title><rect x="918.0" y="1269" width="6.8" height="15.0" fill="rgb(229,53,27)" rx="2" ry="2" />
<text  x="921.02" y="1279.5" ></text>
</g>
<g >
<title>boost::asio::detail::tss_ptr&lt;boost::asio::detail::call_stack&lt;boost::asio::detail::thread_context, boost::asio::detail::thread_info_base&gt;::context&gt;::tss_ptr (199,526 samples, 0.52%)</title><rect x="803.2" y="2021" width="6.1" height="15.0" fill="rgb(241,93,51)" rx="2" ry="2" />
<text  x="806.16" y="2031.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="885" width="58.9" height="15.0" fill="rgb(245,1,7)" rx="2" ry="2" />
<text  x="543.19" y="895.5" >boost:..</text>
</g>
<g >
<title>__tcp_transmit_skb (564,935 samples, 1.47%)</title><rect x="995.9" y="309" width="17.4" height="15.0" fill="rgb(254,84,26)" rx="2" ry="2" />
<text  x="998.94" y="319.5" ></text>
</g>
<g >
<title>do_epoll_wait (760,057 samples, 1.98%)</title><rect x="927.4" y="1893" width="23.3" height="15.0" fill="rgb(241,176,5)" rx="2" ry="2" />
<text  x="930.38" y="1903.5" >d..</text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="789" width="17.4" height="15.0" fill="rgb(240,226,11)" rx="2" ry="2" />
<text  x="998.94" y="799.5" ></text>
</g>
<g >
<title>clear_page_rep (209,856 samples, 0.55%)</title><rect x="48.5" y="1829" width="6.4" height="15.0" fill="rgb(209,128,13)" rx="2" ry="2" />
<text  x="51.48" y="1839.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (108,766 samples, 0.28%)</title><rect x="1105.9" y="1909" width="3.4" height="15.0" fill="rgb(248,202,6)" rx="2" ry="2" />
<text  x="1108.92" y="1919.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1781" width="6.9" height="15.0" fill="rgb(227,0,49)" rx="2" ry="2" />
<text  x="1027.92" y="1791.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="677" width="58.9" height="15.0" fill="rgb(235,153,47)" rx="2" ry="2" />
<text  x="543.19" y="687.5" >boost:..</text>
</g>
<g >
<title>unlock_page_memcg (199,680 samples, 0.52%)</title><rect x="42.3" y="1845" width="6.2" height="15.0" fill="rgb(235,193,19)" rx="2" ry="2" />
<text  x="45.34" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_read_some&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="917" width="13.7" height="15.0" fill="rgb(238,43,44)" rx="2" ry="2" />
<text  x="427.11" y="927.5" ></text>
</g>
<g >
<title>tcp_rcv_established (377,915 samples, 0.98%)</title><rect x="1013.3" y="85" width="11.6" height="15.0" fill="rgb(250,36,45)" rx="2" ry="2" />
<text  x="1016.30" y="95.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1685" width="11.6" height="15.0" fill="rgb(254,50,53)" rx="2" ry="2" />
<text  x="1016.30" y="1695.5" ></text>
</g>
<g >
<title>std::__addressof&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,055 samples, 0.52%)</title><rect x="874.6" y="1541" width="6.2" height="15.0" fill="rgb(245,175,8)" rx="2" ry="2" />
<text  x="877.65" y="1551.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (124,279 samples, 0.32%)</title><rect x="91.6" y="1989" width="3.8" height="15.0" fill="rgb(248,64,1)" rx="2" ry="2" />
<text  x="94.62" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::~basic_stream (733,234 samples, 1.91%)</title><rect x="517.7" y="1141" width="22.5" height="15.0" fill="rgb(236,193,37)" rx="2" ry="2" />
<text  x="520.66" y="1151.5" >b..</text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::put (1,926,657 samples, 5.02%)</title><rect x="350.1" y="1173" width="59.2" height="15.0" fill="rgb(242,88,5)" rx="2" ry="2" />
<text  x="353.06" y="1183.5" >boost:..</text>
</g>
<g >
<title>ip_queue_xmit (377,915 samples, 0.98%)</title><rect x="1013.3" y="437" width="11.6" height="15.0" fill="rgb(238,154,23)" rx="2" ry="2" />
<text  x="1016.30" y="447.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="917" width="6.9" height="15.0" fill="rgb(240,164,42)" rx="2" ry="2" />
<text  x="839.05" y="927.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::~invoker (360,270 samples, 0.94%)</title><rect x="506.6" y="1637" width="11.1" height="15.0" fill="rgb(214,211,18)" rx="2" ry="2" />
<text  x="509.58" y="1647.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="885" width="11.2" height="15.0" fill="rgb(223,110,43)" rx="2" ry="2" />
<text  x="1175.49" y="895.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::write_some (198,372 samples, 0.52%)</title><rect x="815.4" y="1909" width="6.1" height="15.0" fill="rgb(248,119,2)" rx="2" ry="2" />
<text  x="818.40" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="629" width="6.9" height="15.0" fill="rgb(217,77,7)" rx="2" ry="2" />
<text  x="839.05" y="639.5" ></text>
</g>
<g >
<title>page_fault (245,495 samples, 0.64%)</title><rect x="988.4" y="2037" width="7.5" height="15.0" fill="rgb(223,67,10)" rx="2" ry="2" />
<text  x="991.39" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,780,498 samples, 7.24%)</title><rect x="1075.0" y="2021" width="85.5" height="15.0" fill="rgb(216,80,40)" rx="2" ry="2" />
<text  x="1078.02" y="2031.5" >do_syscall..</text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1797" width="5.4" height="15.0" fill="rgb(236,227,21)" rx="2" ry="2" />
<text  x="724.29" y="1807.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (75,343 samples, 0.20%)</title><rect x="910.6" y="1893" width="2.3" height="15.0" fill="rgb(221,158,16)" rx="2" ry="2" />
<text  x="913.61" y="1903.5" ></text>
</g>
<g >
<title>boost::beast::http::message&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::message (267,070 samples, 0.70%)</title><rect x="236.5" y="1077" width="8.2" height="15.0" fill="rgb(242,106,5)" rx="2" ry="2" />
<text  x="239.52" y="1087.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::value_type::value_type (318,871 samples, 0.83%)</title><rect x="677.2" y="1109" width="9.8" height="15.0" fill="rgb(231,184,32)" rx="2" ry="2" />
<text  x="680.25" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::async_accept&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (244,735 samples, 0.64%)</title><rect x="828.5" y="1349" width="7.6" height="15.0" fill="rgb(239,60,17)" rx="2" ry="2" />
<text  x="831.53" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1573" width="11.9" height="15.0" fill="rgb(226,98,13)" rx="2" ry="2" />
<text  x="915.93" y="1583.5" ></text>
</g>
<g >
<title>boost::system::error_code::assign (224,219 samples, 0.58%)</title><rect x="1024.9" y="53" width="6.9" height="15.0" fill="rgb(210,64,0)" rx="2" ry="2" />
<text  x="1027.92" y="63.5" ></text>
</g>
<g >
<title>psi_task_change (679,204 samples, 1.77%)</title><rect x="124.9" y="1877" width="20.9" height="15.0" fill="rgb(236,5,8)" rx="2" ry="2" />
<text  x="127.88" y="1887.5" ></text>
</g>
<g >
<title>__vma_link_rb (160,702 samples, 0.42%)</title><rect x="963.0" y="1909" width="4.9" height="15.0" fill="rgb(205,209,48)" rx="2" ry="2" />
<text  x="965.98" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element::element (318,871 samples, 0.83%)</title><rect x="677.2" y="1125" width="9.8" height="15.0" fill="rgb(248,110,24)" rx="2" ry="2" />
<text  x="680.25" y="1135.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1349" width="22.5" height="15.0" fill="rgb(235,102,24)" rx="2" ry="2" />
<text  x="891.14" y="1359.5" >s..</text>
</g>
<g >
<title>do_softirq.part.0 (377,915 samples, 0.98%)</title><rect x="1013.3" y="309" width="11.6" height="15.0" fill="rgb(254,114,42)" rx="2" ry="2" />
<text  x="1016.30" y="319.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="1845" width="12.0" height="15.0" fill="rgb(250,217,18)" rx="2" ry="2" />
<text  x="1163.49" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;model::Office, model::Office  (198,555 samples, 0.52%)</title><rect x="821.5" y="1909" width="6.1" height="15.0" fill="rgb(248,84,27)" rx="2" ry="2" />
<text  x="824.50" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="533" width="6.9" height="15.0" fill="rgb(237,220,10)" rx="2" ry="2" />
<text  x="1027.92" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (390,290 samples, 1.02%)</title><rect x="1160.5" y="37" width="12.0" height="15.0" fill="rgb(216,7,32)" rx="2" ry="2" />
<text  x="1163.49" y="47.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (733,234 samples, 1.91%)</title><rect x="517.7" y="1413" width="22.5" height="15.0" fill="rgb(245,182,42)" rx="2" ry="2" />
<text  x="520.66" y="1423.5" >b..</text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1493" width="11.9" height="15.0" fill="rgb(222,87,19)" rx="2" ry="2" />
<text  x="915.93" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1493" width="20.6" height="15.0" fill="rgb(217,0,36)" rx="2" ry="2" />
<text  x="440.79" y="1503.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1237" width="11.2" height="15.0" fill="rgb(221,182,36)" rx="2" ry="2" />
<text  x="1175.49" y="1247.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (194,187 samples, 0.51%)</title><rect x="149.6" y="1845" width="6.0" height="15.0" fill="rgb(222,132,51)" rx="2" ry="2" />
<text  x="152.64" y="1855.5" ></text>
</g>
<g >
<title>boost::beast::detail::tuple&lt;std::shared_ptr&lt;http_server::SessionBase&gt; &gt;::~tuple (731,150 samples, 1.90%)</title><rect x="888.1" y="1445" width="22.5" height="15.0" fill="rgb(230,146,17)" rx="2" ry="2" />
<text  x="891.14" y="1455.5" >b..</text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::~basic_executor_type (83,662 samples, 0.22%)</title><rect x="924.8" y="1797" width="2.6" height="15.0" fill="rgb(226,0,25)" rx="2" ry="2" />
<text  x="927.81" y="1807.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (599,239 samples, 1.56%)</title><rect x="30.1" y="2005" width="18.4" height="15.0" fill="rgb(235,83,9)" rx="2" ry="2" />
<text  x="33.06" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="677" width="6.9" height="15.0" fill="rgb(206,202,29)" rx="2" ry="2" />
<text  x="839.05" y="687.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1557" width="11.6" height="15.0" fill="rgb(230,165,15)" rx="2" ry="2" />
<text  x="1016.30" y="1567.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::move_object&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (87,296 samples, 0.23%)</title><rect x="756.3" y="1749" width="2.7" height="15.0" fill="rgb(232,14,32)" rx="2" ry="2" />
<text  x="759.29" y="1759.5" ></text>
</g>
<g >
<title>___sys_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="597" width="11.6" height="15.0" fill="rgb(230,2,20)" rx="2" ry="2" />
<text  x="1016.30" y="607.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_write_some&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="949" width="11.6" height="15.0" fill="rgb(254,99,4)" rx="2" ry="2" />
<text  x="1016.30" y="959.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="469" width="6.9" height="15.0" fill="rgb(247,192,4)" rx="2" ry="2" />
<text  x="1027.92" y="479.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (390,290 samples, 1.02%)</title><rect x="1160.5" y="1141" width="12.0" height="15.0" fill="rgb(244,144,53)" rx="2" ry="2" />
<text  x="1163.49" y="1151.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;boost::asio::any_io_executor&gt;::is_initialized (252,217 samples, 0.66%)</title><rect x="270.2" y="1685" width="7.8" height="15.0" fill="rgb(221,40,1)" rx="2" ry="2" />
<text  x="273.25" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::any_executor (280,330 samples, 0.73%)</title><rect x="409.3" y="1733" width="8.6" height="15.0" fill="rgb(234,114,37)" rx="2" ry="2" />
<text  x="412.28" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;http_server::SessionBase,  (731,150 samples, 1.90%)</title><rect x="888.1" y="1381" width="22.5" height="15.0" fill="rgb(216,184,24)" rx="2" ry="2" />
<text  x="891.14" y="1391.5" >s..</text>
</g>
<g >
<title>tcp_push (364,717 samples, 0.95%)</title><rect x="1172.5" y="421" width="11.2" height="15.0" fill="rgb(240,9,11)" rx="2" ry="2" />
<text  x="1175.49" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (199,055 samples, 0.52%)</title><rect x="207.7" y="469" width="6.1" height="15.0" fill="rgb(251,127,43)" rx="2" ry="2" />
<text  x="210.71" y="479.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (398,423 samples, 1.04%)</title><rect x="868.5" y="1893" width="12.3" height="15.0" fill="rgb(241,47,50)" rx="2" ry="2" />
<text  x="871.52" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::~any_executor (19,781 samples, 0.05%)</title><rect x="759.0" y="1733" width="0.6" height="15.0" fill="rgb(232,131,29)" rx="2" ry="2" />
<text  x="761.97" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (244,735 samples, 0.64%)</title><rect x="828.5" y="1253" width="7.6" height="15.0" fill="rgb(209,137,13)" rx="2" ry="2" />
<text  x="831.53" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send (390,290 samples, 1.02%)</title><rect x="1160.5" y="453" width="12.0" height="15.0" fill="rgb(205,84,17)" rx="2" ry="2" />
<text  x="1163.49" y="463.5" ></text>
</g>
<g >
<title>load_elf_binary (5,883 samples, 0.02%)</title><rect x="1189.8" y="1957" width="0.2" height="15.0" fill="rgb(223,180,45)" rx="2" ry="2" />
<text  x="1192.82" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::put&lt;boost::asio::mutable_buffer&gt; (2,378,578 samples, 6.20%)</title><rect x="630.8" y="1221" width="73.1" height="15.0" fill="rgb(208,213,20)" rx="2" ry="2" />
<text  x="633.78" y="1231.5" >boost::b..</text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1157" width="11.2" height="15.0" fill="rgb(214,129,41)" rx="2" ry="2" />
<text  x="1175.49" y="1167.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (91,926 samples, 0.24%)</title><rect x="145.8" y="1877" width="2.8" height="15.0" fill="rgb(233,149,46)" rx="2" ry="2" />
<text  x="148.75" y="1887.5" ></text>
</g>
<g >
<title>boost::json::detail::const_stream_wrapper::operator bool (198,372 samples, 0.52%)</title><rect x="815.4" y="1701" width="6.1" height="15.0" fill="rgb(247,43,3)" rx="2" ry="2" />
<text  x="818.40" y="1711.5" ></text>
</g>
<g >
<title>main::{lambda (390,290 samples, 1.02%)</title><rect x="1160.5" y="1125" width="12.0" height="15.0" fill="rgb(235,54,15)" rx="2" ry="2" />
<text  x="1163.49" y="1135.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (198,923 samples, 0.52%)</title><rect x="950.7" y="2021" width="6.2" height="15.0" fill="rgb(221,159,1)" rx="2" ry="2" />
<text  x="953.75" y="2031.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="965" width="6.9" height="15.0" fill="rgb(233,100,37)" rx="2" ry="2" />
<text  x="1027.92" y="975.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1653" width="22.5" height="15.0" fill="rgb(211,142,47)" rx="2" ry="2" />
<text  x="891.14" y="1663.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (731,150 samples, 1.90%)</title><rect x="888.1" y="1669" width="22.5" height="15.0" fill="rgb(226,110,33)" rx="2" ry="2" />
<text  x="891.14" y="1679.5" >b..</text>
</g>
<g >
<title>__netif_receive_skb (564,935 samples, 1.47%)</title><rect x="995.9" y="85" width="17.4" height="15.0" fill="rgb(235,100,5)" rx="2" ry="2" />
<text  x="998.94" y="95.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1349" width="5.4" height="15.0" fill="rgb(247,151,27)" rx="2" ry="2" />
<text  x="724.29" y="1359.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="997" width="12.0" height="15.0" fill="rgb(221,202,39)" rx="2" ry="2" />
<text  x="1163.49" y="1007.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="757" width="6.9" height="15.0" fill="rgb(227,96,16)" rx="2" ry="2" />
<text  x="1027.92" y="767.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::prefer_only_property&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt;, void&gt;::prefer_only_property (404,605 samples, 1.05%)</title><rect x="291.4" y="1013" width="12.5" height="15.0" fill="rgb(211,196,33)" rx="2" ry="2" />
<text  x="294.43" y="1023.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (21,143 samples, 0.06%)</title><rect x="731.5" y="1797" width="0.7" height="15.0" fill="rgb(233,3,53)" rx="2" ry="2" />
<text  x="734.54" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="581" width="12.0" height="15.0" fill="rgb(222,77,37)" rx="2" ry="2" />
<text  x="1163.49" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1877" width="14.5" height="15.0" fill="rgb(225,153,53)" rx="2" ry="2" />
<text  x="831.53" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1029" width="11.6" height="15.0" fill="rgb(210,56,31)" rx="2" ry="2" />
<text  x="1016.30" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::run (224,219 samples, 0.58%)</title><rect x="1024.9" y="2037" width="6.9" height="15.0" fill="rgb(245,70,13)" rx="2" ry="2" />
<text  x="1027.92" y="2047.5" ></text>
</g>
<g >
<title>do_timerfd_settime.part.0 (276,821 samples, 0.72%)</title><rect x="303.9" y="917" width="8.5" height="15.0" fill="rgb(248,174,15)" rx="2" ry="2" />
<text  x="306.86" y="927.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1941" width="6.9" height="15.0" fill="rgb(224,216,37)" rx="2" ry="2" />
<text  x="1027.92" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::prefer&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1109" width="5.1" height="15.0" fill="rgb(253,124,49)" rx="2" ry="2" />
<text  x="915.93" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::scoped_lock::unlock (57,179 samples, 0.15%)</title><rect x="168.7" y="1797" width="1.7" height="15.0" fill="rgb(210,111,24)" rx="2" ry="2" />
<text  x="171.67" y="1807.5" ></text>
</g>
<g >
<title>boost::beast::stable_async_base&lt;boost::beast::detail::bind_front_wrapper&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1493" width="22.5" height="15.0" fill="rgb(239,215,22)" rx="2" ry="2" />
<text  x="891.14" y="1503.5" >b..</text>
</g>
<g >
<title>boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::const_iterator (271,965 samples, 0.71%)</title><rect x="443.9" y="709" width="8.4" height="15.0" fill="rgb(214,60,50)" rx="2" ry="2" />
<text  x="446.93" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (199,763 samples, 0.52%)</title><rect x="23.9" y="1973" width="6.2" height="15.0" fill="rgb(235,120,26)" rx="2" ry="2" />
<text  x="26.92" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1685" width="11.2" height="15.0" fill="rgb(205,173,17)" rx="2" ry="2" />
<text  x="1175.49" y="1695.5" ></text>
</g>
<g >
<title>dl_main (1,408,196 samples, 3.67%)</title><rect x="30.1" y="2021" width="43.2" height="15.0" fill="rgb(247,136,35)" rx="2" ry="2" />
<text  x="33.06" y="2031.5" >dl_m..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1397" width="163.7" height="15.0" fill="rgb(218,217,22)" rx="2" ry="2" />
<text  x="543.19" y="1407.5" >boost_asio_handler_in..</text>
</g>
<g >
<title>do_syscall_64 (558,783 samples, 1.46%)</title><rect x="303.9" y="965" width="17.1" height="15.0" fill="rgb(229,91,25)" rx="2" ry="2" />
<text  x="306.86" y="975.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::variant (606,296 samples, 1.58%)</title><rect x="549.8" y="517" width="18.6" height="15.0" fill="rgb(241,190,37)" rx="2" ry="2" />
<text  x="552.77" y="527.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="917" width="58.9" height="15.0" fill="rgb(225,188,27)" rx="2" ry="2" />
<text  x="543.19" y="927.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1765" width="12.3" height="15.0" fill="rgb(254,131,30)" rx="2" ry="2" />
<text  x="871.52" y="1775.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (398,423 samples, 1.04%)</title><rect x="868.5" y="1621" width="12.3" height="15.0" fill="rgb(219,123,30)" rx="2" ry="2" />
<text  x="871.52" y="1631.5" ></text>
</g>
<g >
<title>sendmsg (564,935 samples, 1.47%)</title><rect x="995.9" y="533" width="17.4" height="15.0" fill="rgb(205,94,47)" rx="2" ry="2" />
<text  x="998.94" y="543.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (450,298 samples, 1.17%)</title><rect x="707.4" y="1781" width="13.9" height="15.0" fill="rgb(219,98,49)" rx="2" ry="2" />
<text  x="710.45" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1589" width="22.5" height="15.0" fill="rgb(248,21,36)" rx="2" ry="2" />
<text  x="891.14" y="1599.5" >b..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1733" width="22.5" height="15.0" fill="rgb(248,151,9)" rx="2" ry="2" />
<text  x="891.14" y="1743.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="981" width="6.9" height="15.0" fill="rgb(212,65,20)" rx="2" ry="2" />
<text  x="1027.92" y="991.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_move_accept_op&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (1,300,979 samples, 3.39%)</title><rect x="828.5" y="1909" width="40.0" height="15.0" fill="rgb(208,173,44)" rx="2" ry="2" />
<text  x="831.53" y="1919.5" >boo..</text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_write_some&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="709" width="12.0" height="15.0" fill="rgb(233,177,42)" rx="2" ry="2" />
<text  x="1163.49" y="719.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="933" width="58.9" height="15.0" fill="rgb(253,42,35)" rx="2" ry="2" />
<text  x="543.19" y="943.5" >boost:..</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1477" width="11.6" height="15.0" fill="rgb(207,224,38)" rx="2" ry="2" />
<text  x="1016.30" y="1487.5" ></text>
</g>
<g >
<title>http_handler::RequestHandler::operator (271,965 samples, 0.71%)</title><rect x="443.9" y="1173" width="8.4" height="15.0" fill="rgb(227,131,6)" rx="2" ry="2" />
<text  x="446.93" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::io_context::run (4,006,109 samples, 10.44%)</title><rect x="827.6" y="2005" width="123.1" height="15.0" fill="rgb(216,94,34)" rx="2" ry="2" />
<text  x="830.60" y="2015.5" >boost::asio::io..</text>
</g>
<g >
<title>do_syscall_64 (9,135 samples, 0.02%)</title><rect x="168.4" y="1781" width="0.3" height="15.0" fill="rgb(253,57,48)" rx="2" ry="2" />
<text  x="171.39" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,047,575 samples, 5.33%)</title><rect x="97.6" y="1989" width="62.9" height="15.0" fill="rgb(221,5,43)" rx="2" ry="2" />
<text  x="100.60" y="1999.5" >__x64_..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1605" width="14.5" height="15.0" fill="rgb(240,90,20)" rx="2" ry="2" />
<text  x="831.53" y="1615.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="565" width="6.9" height="15.0" fill="rgb(248,189,0)" rx="2" ry="2" />
<text  x="1027.92" y="575.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt;::initiate_async_send::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="549" width="12.0" height="15.0" fill="rgb(210,141,6)" rx="2" ry="2" />
<text  x="1163.49" y="559.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (481,017 samples, 1.25%)</title><rect x="517.7" y="1029" width="14.7" height="15.0" fill="rgb(237,148,31)" rx="2" ry="2" />
<text  x="520.66" y="1039.5" ></text>
</g>
<g >
<title>boost::beast::detail::tuple_element_impl&lt;0ul, std::shared_ptr&lt;http_server::SessionBase&gt; &gt;::~tuple_element_impl (733,234 samples, 1.91%)</title><rect x="517.7" y="1301" width="22.5" height="15.0" fill="rgb(219,0,35)" rx="2" ry="2" />
<text  x="520.66" y="1311.5" >b..</text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::do_visit&lt;2ul, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,603,722 samples, 4.18%)</title><rect x="549.8" y="629" width="49.3" height="15.0" fill="rgb(243,30,25)" rx="2" ry="2" />
<text  x="552.77" y="639.5" >boos..</text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::key_compare::operator (629,612 samples, 1.64%)</title><rect x="638.3" y="1093" width="19.4" height="15.0" fill="rgb(216,144,48)" rx="2" ry="2" />
<text  x="641.33" y="1103.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (34,610 samples, 0.09%)</title><rect x="148.6" y="1861" width="1.0" height="15.0" fill="rgb(210,38,2)" rx="2" ry="2" />
<text  x="151.58" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, main::{lambda (390,290 samples, 1.02%)</title><rect x="1160.5" y="2037" width="12.0" height="15.0" fill="rgb(219,191,13)" rx="2" ry="2" />
<text  x="1163.49" y="2047.5" ></text>
</g>
<g >
<title>epoll_wait (788,165 samples, 2.05%)</title><rect x="778.9" y="1845" width="24.3" height="15.0" fill="rgb(246,55,33)" rx="2" ry="2" />
<text  x="781.93" y="1855.5" >e..</text>
</g>
<g >
<title>std::mem_fn&lt;void  (199,240 samples, 0.52%)</title><rect x="213.8" y="501" width="6.2" height="15.0" fill="rgb(243,114,37)" rx="2" ry="2" />
<text  x="216.83" y="511.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (6,174,371 samples, 16.08%)</title><rect x="517.7" y="1637" width="189.7" height="15.0" fill="rgb(205,164,37)" rx="2" ry="2" />
<text  x="520.66" y="1647.5" >boost_asio_handler_invok..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="885" width="6.9" height="15.0" fill="rgb(221,66,0)" rx="2" ry="2" />
<text  x="839.05" y="895.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (731,150 samples, 1.90%)</title><rect x="888.1" y="1141" width="22.5" height="15.0" fill="rgb(243,142,54)" rx="2" ry="2" />
<text  x="891.14" y="1151.5" >e..</text>
</g>
<g >
<title>boost_asio_query_fn::impl::operator (199,055 samples, 0.52%)</title><rect x="458.4" y="1653" width="6.1" height="15.0" fill="rgb(238,27,45)" rx="2" ry="2" />
<text  x="461.42" y="1663.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (564,935 samples, 1.47%)</title><rect x="995.9" y="1237" width="17.4" height="15.0" fill="rgb(225,141,54)" rx="2" ry="2" />
<text  x="998.94" y="1247.5" ></text>
</g>
<g >
<title>do_anonymous_page (209,856 samples, 0.55%)</title><rect x="48.5" y="1893" width="6.4" height="15.0" fill="rgb(244,179,3)" rx="2" ry="2" />
<text  x="51.48" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (91,926 samples, 0.24%)</title><rect x="145.8" y="1845" width="2.8" height="15.0" fill="rgb(212,89,45)" rx="2" ry="2" />
<text  x="148.75" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (826,659 samples, 2.15%)</title><rect x="476.0" y="1749" width="25.4" height="15.0" fill="rgb(209,226,46)" rx="2" ry="2" />
<text  x="478.95" y="1759.5" >b..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,423 samples, 1.04%)</title><rect x="868.5" y="1749" width="12.3" height="15.0" fill="rgb(227,13,39)" rx="2" ry="2" />
<text  x="871.52" y="1759.5" ></text>
</g>
<g >
<title>set_task_cpu (108,766 samples, 0.28%)</title><rect x="1105.9" y="1925" width="3.4" height="15.0" fill="rgb(222,153,46)" rx="2" ry="2" />
<text  x="1108.92" y="1935.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1573" width="13.7" height="15.0" fill="rgb(217,100,13)" rx="2" ry="2" />
<text  x="427.11" y="1583.5" ></text>
</g>
<g >
<title>sock_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="325" width="12.0" height="15.0" fill="rgb(252,91,10)" rx="2" ry="2" />
<text  x="1163.49" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (199,005 samples, 0.52%)</title><rect x="84.6" y="2021" width="6.1" height="15.0" fill="rgb(212,38,8)" rx="2" ry="2" />
<text  x="87.57" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, void  (1,062,684 samples, 2.77%)</title><rect x="303.9" y="1061" width="32.6" height="15.0" fill="rgb(246,127,12)" rx="2" ry="2" />
<text  x="306.86" y="1071.5" >bo..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="997" width="6.9" height="15.0" fill="rgb(227,6,28)" rx="2" ry="2" />
<text  x="839.05" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="837" width="58.9" height="15.0" fill="rgb(219,137,27)" rx="2" ry="2" />
<text  x="543.19" y="847.5" >boost:..</text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1445" width="12.0" height="15.0" fill="rgb(216,187,32)" rx="2" ry="2" />
<text  x="1163.49" y="1455.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;7ul, boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator::increment&gt; (322,937 samples, 0.84%)</title><rect x="568.4" y="453" width="9.9" height="15.0" fill="rgb(241,218,15)" rx="2" ry="2" />
<text  x="571.41" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (199,763 samples, 0.52%)</title><rect x="23.9" y="2005" width="6.2" height="15.0" fill="rgb(235,115,3)" rx="2" ry="2" />
<text  x="26.92" y="2015.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::impl_type::reset (538,866 samples, 1.40%)</title><rect x="220.0" y="1029" width="16.5" height="15.0" fill="rgb(222,74,47)" rx="2" ry="2" />
<text  x="222.95" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="565" width="20.8" height="15.0" fill="rgb(245,34,9)" rx="2" ry="2" />
<text  x="581.34" y="575.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1877" width="17.4" height="15.0" fill="rgb(245,100,37)" rx="2" ry="2" />
<text  x="998.94" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::basic_parser_base::parse_token_to_eol (245,495 samples, 0.64%)</title><rect x="630.8" y="1157" width="7.5" height="15.0" fill="rgb(208,125,18)" rx="2" ry="2" />
<text  x="633.78" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1589" width="6.9" height="15.0" fill="rgb(234,84,47)" rx="2" ry="2" />
<text  x="1027.92" y="1599.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (377,915 samples, 0.98%)</title><rect x="1013.3" y="1957" width="11.6" height="15.0" fill="rgb(249,154,2)" rx="2" ry="2" />
<text  x="1016.30" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1429" width="11.2" height="15.0" fill="rgb(208,11,22)" rx="2" ry="2" />
<text  x="1175.49" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (806,493 samples, 2.10%)</title><rect x="888.1" y="1941" width="24.8" height="15.0" fill="rgb(212,127,23)" rx="2" ry="2" />
<text  x="891.14" y="1951.5" >b..</text>
</g>
<g >
<title>epoll_ctl (519,161 samples, 1.35%)</title><rect x="248.2" y="1717" width="15.9" height="15.0" fill="rgb(226,98,40)" rx="2" ry="2" />
<text  x="251.17" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1413" width="163.7" height="15.0" fill="rgb(241,88,15)" rx="2" ry="2" />
<text  x="543.19" y="1423.5" >boost::asio::detail::..</text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1557" width="20.6" height="15.0" fill="rgb(230,63,14)" rx="2" ry="2" />
<text  x="440.79" y="1567.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::unlock (57,179 samples, 0.15%)</title><rect x="168.7" y="1781" width="1.7" height="15.0" fill="rgb(244,132,31)" rx="2" ry="2" />
<text  x="171.67" y="1791.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1669" width="6.9" height="15.0" fill="rgb(224,160,25)" rx="2" ry="2" />
<text  x="1027.92" y="1679.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1877" width="11.6" height="15.0" fill="rgb(227,121,42)" rx="2" ry="2" />
<text  x="1016.30" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1269" width="12.0" height="15.0" fill="rgb(224,48,15)" rx="2" ry="2" />
<text  x="1163.49" y="1279.5" ></text>
</g>
<g >
<title>iput (281,962 samples, 0.73%)</title><rect x="517.7" y="917" width="8.6" height="15.0" fill="rgb(208,2,44)" rx="2" ry="2" />
<text  x="520.66" y="927.5" ></text>
</g>
<g >
<title>boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;::begin (311,653 samples, 0.81%)</title><rect x="540.2" y="533" width="9.6" height="15.0" fill="rgb(227,133,46)" rx="2" ry="2" />
<text  x="543.19" y="543.5" ></text>
</g>
<g >
<title>boost::asio::io_context::run (390,290 samples, 1.02%)</title><rect x="1160.5" y="2005" width="12.0" height="15.0" fill="rgb(242,219,6)" rx="2" ry="2" />
<text  x="1163.49" y="2015.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (252,217 samples, 0.66%)</title><rect x="270.2" y="1781" width="7.8" height="15.0" fill="rgb(238,184,1)" rx="2" ry="2" />
<text  x="273.25" y="1791.5" ></text>
</g>
<g >
<title>std::construct_at&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1125" width="24.7" height="15.0" fill="rgb(241,109,28)" rx="2" ry="2" />
<text  x="222.95" y="1135.5" >s..</text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1013" width="11.6" height="15.0" fill="rgb(250,89,49)" rx="2" ry="2" />
<text  x="1016.30" y="1023.5" ></text>
</g>
<g >
<title>do_page_fault (209,856 samples, 0.55%)</title><rect x="48.5" y="1973" width="6.4" height="15.0" fill="rgb(242,44,45)" rx="2" ry="2" />
<text  x="51.48" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::timeout_handler&lt;boost::asio::any_io_executor&gt;, void  (1,062,684 samples, 2.77%)</title><rect x="303.9" y="1077" width="32.6" height="15.0" fill="rgb(217,179,33)" rx="2" ry="2" />
<text  x="306.86" y="1087.5" >bo..</text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1237" width="12.0" height="15.0" fill="rgb(213,1,12)" rx="2" ry="2" />
<text  x="1163.49" y="1247.5" ></text>
</g>
<g >
<title>boost::beast::detail::asio_handler_invoke&lt;boost::asio::detail::binder0&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="693" width="6.9" height="15.0" fill="rgb(230,117,12)" rx="2" ry="2" />
<text  x="839.05" y="703.5" ></text>
</g>
<g >
<title>boost::asio::use_service&lt;boost::asio::detail::signal_set_service&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="1989" width="6.1" height="15.0" fill="rgb(229,85,2)" rx="2" ry="2" />
<text  x="812.29" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1541" width="6.1" height="15.0" fill="rgb(215,210,0)" rx="2" ry="2" />
<text  x="871.52" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="885" width="13.7" height="15.0" fill="rgb(236,160,46)" rx="2" ry="2" />
<text  x="427.11" y="895.5" ></text>
</g>
<g >
<title>http_server::Listener&lt;main::{lambda (224,219 samples, 0.58%)</title><rect x="1024.9" y="1429" width="6.9" height="15.0" fill="rgb(247,91,21)" rx="2" ry="2" />
<text  x="1027.92" y="1439.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="901" width="12.0" height="15.0" fill="rgb(230,192,17)" rx="2" ry="2" />
<text  x="1163.49" y="911.5" ></text>
</g>
<g >
<title>net_rx_action (199,055 samples, 0.52%)</title><rect x="526.3" y="661" width="6.1" height="15.0" fill="rgb(224,218,38)" rx="2" ry="2" />
<text  x="529.32" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::recycling_allocator&lt;void, boost::asio::detail::thread_info_base::default_tag&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (239,731 samples, 0.62%)</title><rect x="880.8" y="1941" width="7.3" height="15.0" fill="rgb(249,70,45)" rx="2" ry="2" />
<text  x="883.77" y="1951.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1781" width="11.6" height="15.0" fill="rgb(210,28,26)" rx="2" ry="2" />
<text  x="1016.30" y="1791.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="949" width="58.9" height="15.0" fill="rgb(242,5,6)" rx="2" ry="2" />
<text  x="543.19" y="959.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="149" width="6.9" height="15.0" fill="rgb(223,78,52)" rx="2" ry="2" />
<text  x="1027.92" y="159.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_write_some&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="805" width="17.4" height="15.0" fill="rgb(217,4,7)" rx="2" ry="2" />
<text  x="998.94" y="815.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert (206,444 samples, 0.54%)</title><rect x="1068.7" y="1893" width="6.3" height="15.0" fill="rgb(210,191,48)" rx="2" ry="2" />
<text  x="1071.68" y="1903.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (364,717 samples, 0.95%)</title><rect x="1172.5" y="1253" width="11.2" height="15.0" fill="rgb(217,86,8)" rx="2" ry="2" />
<text  x="1175.49" y="1263.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="773" width="58.9" height="15.0" fill="rgb(226,17,5)" rx="2" ry="2" />
<text  x="543.19" y="783.5" >boost:..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1445" width="6.1" height="15.0" fill="rgb(211,154,18)" rx="2" ry="2" />
<text  x="871.52" y="1455.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::parse_fields (199,368 samples, 0.52%)</title><rect x="868.5" y="1269" width="6.1" height="15.0" fill="rgb(209,85,48)" rx="2" ry="2" />
<text  x="871.52" y="1279.5" ></text>
</g>
<g >
<title>tcp_write_xmit (377,915 samples, 0.98%)</title><rect x="1013.3" y="469" width="11.6" height="15.0" fill="rgb(213,197,24)" rx="2" ry="2" />
<text  x="1016.30" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (731,150 samples, 1.90%)</title><rect x="888.1" y="1157" width="22.5" height="15.0" fill="rgb(251,37,54)" rx="2" ry="2" />
<text  x="891.14" y="1167.5" >d..</text>
</g>
<g >
<title>boost::asio::detail::service_registry::create&lt;boost::asio::detail::epoll_reactor, boost::asio::execution_context&gt; (198,769 samples, 0.52%)</title><rect x="809.3" y="1861" width="6.1" height="15.0" fill="rgb(231,77,27)" rx="2" ry="2" />
<text  x="812.29" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1093" width="13.7" height="15.0" fill="rgb(248,151,33)" rx="2" ry="2" />
<text  x="427.11" y="1103.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="661" width="58.9" height="15.0" fill="rgb(208,201,14)" rx="2" ry="2" />
<text  x="543.19" y="671.5" >boost:..</text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::next&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="645" width="58.9" height="15.0" fill="rgb(238,85,2)" rx="2" ry="2" />
<text  x="543.19" y="655.5" >boost:..</text>
</g>
<g >
<title>get_page_from_freelist (209,856 samples, 0.55%)</title><rect x="48.5" y="1845" width="6.4" height="15.0" fill="rgb(233,104,19)" rx="2" ry="2" />
<text  x="51.48" y="1855.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1109" width="13.7" height="15.0" fill="rgb(240,209,31)" rx="2" ry="2" />
<text  x="427.11" y="1119.5" ></text>
</g>
<g >
<title>task_work_run (481,017 samples, 1.25%)</title><rect x="517.7" y="1013" width="14.7" height="15.0" fill="rgb(233,210,34)" rx="2" ry="2" />
<text  x="520.66" y="1023.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (198,351 samples, 0.52%)</title><rect x="967.9" y="2053" width="6.1" height="15.0" fill="rgb(208,80,17)" rx="2" ry="2" />
<text  x="970.92" y="2063.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="1045" width="12.3" height="15.0" fill="rgb(250,190,1)" rx="2" ry="2" />
<text  x="210.71" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (199,055 samples, 0.52%)</title><rect x="458.4" y="1765" width="6.1" height="15.0" fill="rgb(249,123,48)" rx="2" ry="2" />
<text  x="461.42" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="821" width="12.0" height="15.0" fill="rgb(227,12,14)" rx="2" ry="2" />
<text  x="1163.49" y="831.5" ></text>
</g>
<g >
<title>boost::mp11::mp_with_index&lt;4ul, boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::increment&gt; (322,937 samples, 0.84%)</title><rect x="568.4" y="517" width="9.9" height="15.0" fill="rgb(250,42,52)" rx="2" ry="2" />
<text  x="571.41" y="527.5" ></text>
</g>
<g >
<title>clone (13,264 samples, 0.03%)</title><rect x="827.6" y="1941" width="0.4" height="15.0" fill="rgb(221,33,49)" rx="2" ry="2" />
<text  x="830.60" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (564,935 samples, 1.47%)</title><rect x="995.9" y="2053" width="17.4" height="15.0" fill="rgb(209,95,0)" rx="2" ry="2" />
<text  x="998.94" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (606,765 samples, 1.58%)</title><rect x="1056.4" y="2037" width="18.6" height="15.0" fill="rgb(248,63,44)" rx="2" ry="2" />
<text  x="1059.37" y="2047.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1637" width="5.4" height="15.0" fill="rgb(245,224,52)" rx="2" ry="2" />
<text  x="724.29" y="1647.5" ></text>
</g>
<g >
<title>__do_page_fault (209,856 samples, 0.55%)</title><rect x="48.5" y="1957" width="6.4" height="15.0" fill="rgb(233,60,34)" rx="2" ry="2" />
<text  x="51.48" y="1967.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1205" width="6.9" height="15.0" fill="rgb(221,32,24)" rx="2" ry="2" />
<text  x="839.05" y="1215.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="597" width="6.9" height="15.0" fill="rgb(217,149,36)" rx="2" ry="2" />
<text  x="839.05" y="607.5" ></text>
</g>
<g >
<title>boost::mp11::detail::mp_with_index_impl_&lt;4ul&gt;::call&lt;0ul, boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt;::const_iterator::dereference&gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="373" width="20.8" height="15.0" fill="rgb(246,193,54)" rx="2" ry="2" />
<text  x="581.34" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (733,234 samples, 1.91%)</title><rect x="517.7" y="1253" width="22.5" height="15.0" fill="rgb(249,24,3)" rx="2" ry="2" />
<text  x="520.66" y="1263.5" >s..</text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (165,800 samples, 0.43%)</title><rect x="912.9" y="1125" width="5.1" height="15.0" fill="rgb(207,179,7)" rx="2" ry="2" />
<text  x="915.93" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="1637" width="6.9" height="15.0" fill="rgb(243,77,7)" rx="2" ry="2" />
<text  x="1027.92" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (364,717 samples, 0.95%)</title><rect x="1172.5" y="181" width="11.2" height="15.0" fill="rgb(242,190,22)" rx="2" ry="2" />
<text  x="1175.49" y="191.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (377,915 samples, 0.98%)</title><rect x="1013.3" y="485" width="11.6" height="15.0" fill="rgb(226,115,40)" rx="2" ry="2" />
<text  x="1016.30" y="495.5" ></text>
</g>
<g >
<title>path_openat (234,592 samples, 0.61%)</title><rect x="981.2" y="1925" width="7.2" height="15.0" fill="rgb(211,29,41)" rx="2" ry="2" />
<text  x="984.18" y="1935.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="677" width="12.0" height="15.0" fill="rgb(228,20,6)" rx="2" ry="2" />
<text  x="1163.49" y="687.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1717" width="14.5" height="15.0" fill="rgb(239,181,17)" rx="2" ry="2" />
<text  x="831.53" y="1727.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (224,219 samples, 0.58%)</title><rect x="1024.9" y="1973" width="6.9" height="15.0" fill="rgb(253,161,22)" rx="2" ry="2" />
<text  x="1027.92" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (471,598 samples, 1.23%)</title><rect x="443.9" y="1429" width="14.5" height="15.0" fill="rgb(238,35,46)" rx="2" ry="2" />
<text  x="446.93" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (2,701,516 samples, 7.04%)</title><rect x="540.2" y="1221" width="83.0" height="15.0" fill="rgb(211,195,38)" rx="2" ry="2" />
<text  x="543.19" y="1231.5" >boost::as..</text>
</g>
<g >
<title>boost::beast::http::async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1125" width="8.4" height="15.0" fill="rgb(219,40,36)" rx="2" ry="2" />
<text  x="446.93" y="1135.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="949" width="11.2" height="15.0" fill="rgb(248,81,20)" rx="2" ry="2" />
<text  x="1175.49" y="959.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1733" width="12.0" height="15.0" fill="rgb(226,180,7)" rx="2" ry="2" />
<text  x="1163.49" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="997" width="11.2" height="15.0" fill="rgb(209,61,34)" rx="2" ry="2" />
<text  x="1175.49" y="1007.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_value&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1781" width="6.1" height="15.0" fill="rgb(241,26,48)" rx="2" ry="2" />
<text  x="818.40" y="1791.5" ></text>
</g>
<g >
<title>ep_poll (760,057 samples, 1.98%)</title><rect x="927.4" y="1877" width="23.3" height="15.0" fill="rgb(254,213,32)" rx="2" ry="2" />
<text  x="930.38" y="1887.5" >e..</text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (469,881 samples, 1.22%)</title><rect x="828.5" y="1861" width="14.5" height="15.0" fill="rgb(237,202,48)" rx="2" ry="2" />
<text  x="831.53" y="1871.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1797" width="40.5" height="15.0" fill="rgb(218,65,14)" rx="2" ry="2" />
<text  x="420.90" y="1807.5" >boo..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1589" width="11.9" height="15.0" fill="rgb(233,197,44)" rx="2" ry="2" />
<text  x="915.93" y="1599.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (199,368 samples, 0.52%)</title><rect x="868.5" y="1429" width="6.1" height="15.0" fill="rgb(230,109,2)" rx="2" ry="2" />
<text  x="871.52" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1605" width="11.6" height="15.0" fill="rgb(252,51,51)" rx="2" ry="2" />
<text  x="1016.30" y="1615.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (806,493 samples, 2.10%)</title><rect x="888.1" y="1909" width="24.8" height="15.0" fill="rgb(225,130,31)" rx="2" ry="2" />
<text  x="891.14" y="1919.5" >b..</text>
</g>
<g >
<title>boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt;::const_iterator::operator++ (674,489 samples, 1.76%)</title><rect x="578.3" y="437" width="20.8" height="15.0" fill="rgb(222,129,11)" rx="2" ry="2" />
<text  x="581.34" y="447.5" ></text>
</g>
<g >
<title>boost::asio::buffer_sequence_begin&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; (311,653 samples, 0.81%)</title><rect x="540.2" y="597" width="9.6" height="15.0" fill="rgb(210,151,10)" rx="2" ry="2" />
<text  x="543.19" y="607.5" ></text>
</g>
<g >
<title>lru_add_drain (199,763 samples, 0.52%)</title><rect x="23.9" y="1909" width="6.2" height="15.0" fill="rgb(249,52,15)" rx="2" ry="2" />
<text  x="26.92" y="1919.5" ></text>
</g>
<g >
<title>http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1317" width="5.1" height="15.0" fill="rgb(233,68,44)" rx="2" ry="2" />
<text  x="915.93" y="1327.5" ></text>
</g>
<g >
<title>boost::beast::http::parser&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::on_field_impl (199,055 samples, 0.52%)</title><rect x="697.8" y="1189" width="6.1" height="15.0" fill="rgb(214,73,11)" rx="2" ry="2" />
<text  x="700.78" y="1199.5" ></text>
</g>
<g >
<title>handle_mm_fault (198,923 samples, 0.52%)</title><rect x="950.7" y="1941" width="6.2" height="15.0" fill="rgb(214,74,36)" rx="2" ry="2" />
<text  x="953.75" y="1951.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::detail::bind_front_wrapper&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1525" width="20.6" height="15.0" fill="rgb(249,176,3)" rx="2" ry="2" />
<text  x="440.79" y="1535.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (469,881 samples, 1.22%)</title><rect x="828.5" y="1621" width="14.5" height="15.0" fill="rgb(220,75,7)" rx="2" ry="2" />
<text  x="831.53" y="1631.5" ></text>
</g>
<g >
<title>page_fault (233,075 samples, 0.61%)</title><rect x="974.0" y="2021" width="7.2" height="15.0" fill="rgb(224,217,33)" rx="2" ry="2" />
<text  x="977.02" y="2031.5" ></text>
</g>
<g >
<title>boost::beast::detail::stable_base::destroy_list (258,401 samples, 0.67%)</title><rect x="615.3" y="1109" width="7.9" height="15.0" fill="rgb(223,164,19)" rx="2" ry="2" />
<text  x="618.29" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::prefer&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; (75,343 samples, 0.20%)</title><rect x="910.6" y="1877" width="2.3" height="15.0" fill="rgb(210,179,33)" rx="2" ry="2" />
<text  x="913.61" y="1887.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (390,290 samples, 1.02%)</title><rect x="1160.5" y="181" width="12.0" height="15.0" fill="rgb(217,193,39)" rx="2" ry="2" />
<text  x="1163.49" y="191.5" ></text>
</g>
<g >
<title>sock_close (731,150 samples, 1.90%)</title><rect x="888.1" y="1077" width="22.5" height="15.0" fill="rgb(217,59,8)" rx="2" ry="2" />
<text  x="891.14" y="1087.5" >s..</text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="1077" width="12.3" height="15.0" fill="rgb(216,161,48)" rx="2" ry="2" />
<text  x="210.71" y="1087.5" ></text>
</g>
<g >
<title>_do_fork (199,005 samples, 0.52%)</title><rect x="84.6" y="1973" width="6.1" height="15.0" fill="rgb(228,182,54)" rx="2" ry="2" />
<text  x="87.57" y="1983.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="1205" width="12.3" height="15.0" fill="rgb(232,9,14)" rx="2" ry="2" />
<text  x="210.71" y="1215.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1013" width="6.9" height="15.0" fill="rgb(236,131,25)" rx="2" ry="2" />
<text  x="1027.92" y="1023.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="1029" width="6.9" height="15.0" fill="rgb(230,67,26)" rx="2" ry="2" />
<text  x="1027.92" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1029" width="17.4" height="15.0" fill="rgb(217,12,8)" rx="2" ry="2" />
<text  x="998.94" y="1039.5" ></text>
</g>
<g >
<title>check_preempt_curr (199,005 samples, 0.52%)</title><rect x="84.6" y="1941" width="6.1" height="15.0" fill="rgb(254,84,28)" rx="2" ry="2" />
<text  x="87.57" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1541" width="126.5" height="15.0" fill="rgb(246,33,24)" rx="2" ry="2" />
<text  x="285.81" y="1551.5" >boost::asio::de..</text>
</g>
<g >
<title>std::__shared_ptr&lt;boost::asio::detail::strand_executor_service::strand_impl,  (360,270 samples, 0.94%)</title><rect x="506.6" y="1605" width="11.1" height="15.0" fill="rgb(206,46,35)" rx="2" ry="2" />
<text  x="509.58" y="1615.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1413" width="44.3" height="15.0" fill="rgb(241,67,3)" rx="2" ry="2" />
<text  x="203.41" y="1423.5" >boos..</text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::parse_fields (846,963 samples, 2.21%)</title><rect x="350.1" y="1157" width="26.0" height="15.0" fill="rgb(245,53,15)" rx="2" ry="2" />
<text  x="353.06" y="1167.5" >b..</text>
</g>
<g >
<title>boost::beast::detail::allocate_stable_state&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (199,633 samples, 0.52%)</title><rect x="452.3" y="1285" width="6.1" height="15.0" fill="rgb(250,39,18)" rx="2" ry="2" />
<text  x="455.29" y="1295.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (470,246 samples, 1.22%)</title><rect x="912.9" y="1941" width="14.5" height="15.0" fill="rgb(229,97,4)" rx="2" ry="2" />
<text  x="915.93" y="1951.5" ></text>
</g>
<g >
<title>__do_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1877" width="6.1" height="15.0" fill="rgb(235,227,28)" rx="2" ry="2" />
<text  x="70.21" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_move_accept_op&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt;, boost::beast::detail::bind_front_wrapper&lt;void  (199,055 samples, 0.52%)</title><rect x="458.4" y="1829" width="6.1" height="15.0" fill="rgb(242,19,19)" rx="2" ry="2" />
<text  x="461.42" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_futex (9,135 samples, 0.02%)</title><rect x="168.4" y="1765" width="0.3" height="15.0" fill="rgb(213,125,11)" rx="2" ry="2" />
<text  x="171.39" y="1775.5" ></text>
</g>
<g >
<title>ip_output (364,717 samples, 0.95%)</title><rect x="1172.5" y="309" width="11.2" height="15.0" fill="rgb(213,99,43)" rx="2" ry="2" />
<text  x="1175.49" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (519,161 samples, 1.35%)</title><rect x="248.2" y="1701" width="15.9" height="15.0" fill="rgb(230,169,7)" rx="2" ry="2" />
<text  x="251.17" y="1711.5" ></text>
</g>
<g >
<title>sendmsg (364,717 samples, 0.95%)</title><rect x="1172.5" y="597" width="11.2" height="15.0" fill="rgb(215,169,28)" rx="2" ry="2" />
<text  x="1175.49" y="607.5" ></text>
</g>
<g >
<title>process_backlog (364,717 samples, 0.95%)</title><rect x="1172.5" y="165" width="11.2" height="15.0" fill="rgb(245,53,37)" rx="2" ry="2" />
<text  x="1175.49" y="175.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1045" width="11.2" height="15.0" fill="rgb(224,154,26)" rx="2" ry="2" />
<text  x="1175.49" y="1055.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_array&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1765" width="6.1" height="15.0" fill="rgb(249,99,20)" rx="2" ry="2" />
<text  x="818.40" y="1775.5" ></text>
</g>
<g >
<title>boost::beast::http::parser&lt;true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt;::on_field_impl (199,368 samples, 0.52%)</title><rect x="868.5" y="1253" width="6.1" height="15.0" fill="rgb(222,172,47)" rx="2" ry="2" />
<text  x="871.52" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;http_server::Session&lt;main::{lambda (731,150 samples, 1.90%)</title><rect x="888.1" y="1317" width="22.5" height="15.0" fill="rgb(212,66,17)" rx="2" ry="2" />
<text  x="891.14" y="1327.5" >s..</text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1173" width="13.7" height="15.0" fill="rgb(237,188,31)" rx="2" ry="2" />
<text  x="427.11" y="1183.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1813" width="40.5" height="15.0" fill="rgb(216,186,47)" rx="2" ry="2" />
<text  x="420.90" y="1823.5" >boo..</text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="2021" width="17.4" height="15.0" fill="rgb(233,131,9)" rx="2" ry="2" />
<text  x="998.94" y="2031.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1717" width="200.8" height="15.0" fill="rgb(227,190,40)" rx="2" ry="2" />
<text  x="509.58" y="1727.5" >boost::asio::strand&lt;boost:..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::set_internal_non_blocking (224,219 samples, 0.58%)</title><rect x="1024.9" y="85" width="6.9" height="15.0" fill="rgb(210,158,14)" rx="2" ry="2" />
<text  x="1027.92" y="95.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::any_io_executor&gt;::initiate_async_wait::operator (1,062,684 samples, 2.77%)</title><rect x="303.9" y="1045" width="32.6" height="15.0" fill="rgb(234,191,30)" rx="2" ry="2" />
<text  x="306.86" y="1055.5" >bo..</text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (445,208 samples, 1.16%)</title><rect x="424.1" y="1045" width="13.7" height="15.0" fill="rgb(207,161,42)" rx="2" ry="2" />
<text  x="427.11" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt;::assign (631,215 samples, 1.64%)</title><rect x="244.7" y="1765" width="19.4" height="15.0" fill="rgb(240,81,9)" rx="2" ry="2" />
<text  x="247.73" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1285" width="126.5" height="15.0" fill="rgb(253,150,45)" rx="2" ry="2" />
<text  x="285.81" y="1295.5" >boost::asio::as..</text>
</g>
<g >
<title>boost::asio::detail::executor_function::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1781" width="11.2" height="15.0" fill="rgb(214,225,45)" rx="2" ry="2" />
<text  x="1175.49" y="1791.5" ></text>
</g>
<g >
<title>boost::beast::async_base&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (165,800 samples, 0.43%)</title><rect x="912.9" y="1333" width="5.1" height="15.0" fill="rgb(241,208,13)" rx="2" ry="2" />
<text  x="915.93" y="1343.5" ></text>
</g>
<g >
<title>__netif_receive_skb (377,915 samples, 0.98%)</title><rect x="1013.3" y="229" width="11.6" height="15.0" fill="rgb(243,216,8)" rx="2" ry="2" />
<text  x="1016.30" y="239.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1621" width="17.4" height="15.0" fill="rgb(212,216,29)" rx="2" ry="2" />
<text  x="998.94" y="1631.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="309" width="6.9" height="15.0" fill="rgb(214,175,49)" rx="2" ry="2" />
<text  x="1027.92" y="319.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (377,915 samples, 0.98%)</title><rect x="1013.3" y="757" width="11.6" height="15.0" fill="rgb(246,23,46)" rx="2" ry="2" />
<text  x="1016.30" y="767.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (2,187,879 samples, 5.70%)</title><rect x="282.8" y="1125" width="67.3" height="15.0" fill="rgb(234,28,39)" rx="2" ry="2" />
<text  x="285.81" y="1135.5" >boost::..</text>
</g>
<g >
<title>http_server::SessionBase::Read (165,800 samples, 0.43%)</title><rect x="912.9" y="1285" width="5.1" height="15.0" fill="rgb(225,23,41)" rx="2" ry="2" />
<text  x="915.93" y="1295.5" ></text>
</g>
<g >
<title>boost::beast::http::async_write_some&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;, boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1109" width="11.6" height="15.0" fill="rgb(251,134,6)" rx="2" ry="2" />
<text  x="1016.30" y="1119.5" ></text>
</g>
<g >
<title>http_server::SessionBase::OnRead (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1045" width="68.8" height="15.0" fill="rgb(224,193,35)" rx="2" ry="2" />
<text  x="543.19" y="1055.5" >http_se..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1653" width="17.4" height="15.0" fill="rgb(232,199,1)" rx="2" ry="2" />
<text  x="998.94" y="1663.5" ></text>
</g>
<g >
<title>boost::make_shared&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::impl_type, std::integral_constant&lt;bool, false&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::any_io_executor&gt; &gt; (538,866 samples, 1.40%)</title><rect x="220.0" y="1061" width="16.5" height="15.0" fill="rgb(214,90,6)" rx="2" ry="2" />
<text  x="222.95" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1749" width="5.4" height="15.0" fill="rgb(236,216,15)" rx="2" ry="2" />
<text  x="724.29" y="1759.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (102,347 samples, 0.27%)</title><rect x="91.6" y="1909" width="3.2" height="15.0" fill="rgb(251,39,1)" rx="2" ry="2" />
<text  x="94.62" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="997" width="17.4" height="15.0" fill="rgb(223,211,22)" rx="2" ry="2" />
<text  x="998.94" y="1007.5" ></text>
</g>
<g >
<title>boost::json::basic_parser&lt;boost::json::detail::handler&gt;::parse_value&lt;true, false&gt; (198,372 samples, 0.52%)</title><rect x="815.4" y="1877" width="6.1" height="15.0" fill="rgb(251,213,38)" rx="2" ry="2" />
<text  x="818.40" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;http_server::Session&lt;main::{lambda (805,936 samples, 2.10%)</title><rect x="220.0" y="1141" width="24.7" height="15.0" fill="rgb(235,133,42)" rx="2" ry="2" />
<text  x="222.95" y="1151.5" >s..</text>
</g>
<g >
<title>finish_task_switch (30,285 samples, 0.08%)</title><rect x="90.7" y="1989" width="0.9" height="15.0" fill="rgb(254,183,29)" rx="2" ry="2" />
<text  x="93.69" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1765" width="11.9" height="15.0" fill="rgb(223,146,25)" rx="2" ry="2" />
<text  x="915.93" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (7,981,362 samples, 20.79%)</title><rect x="476.0" y="1797" width="245.3" height="15.0" fill="rgb(215,1,32)" rx="2" ry="2" />
<text  x="478.95" y="1807.5" >boost::asio::detail::handler_wor..</text>
</g>
<g >
<title>boost::asio::any_io_executor::any_io_executor&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; (245,495 samples, 0.64%)</title><rect x="707.4" y="1749" width="7.6" height="15.0" fill="rgb(205,155,18)" rx="2" ry="2" />
<text  x="710.45" y="1759.5" ></text>
</g>
<g >
<title>ip_local_out (390,290 samples, 1.02%)</title><rect x="1160.5" y="165" width="12.0" height="15.0" fill="rgb(254,48,31)" rx="2" ry="2" />
<text  x="1163.49" y="175.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::~basic_executor_type (280,330 samples, 0.73%)</title><rect x="409.3" y="1685" width="8.6" height="15.0" fill="rgb(209,180,22)" rx="2" ry="2" />
<text  x="412.28" y="1695.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::detail::bind_front_wrapper&lt;void  (225,146 samples, 0.59%)</title><rect x="836.1" y="1301" width="6.9" height="15.0" fill="rgb(234,229,49)" rx="2" ry="2" />
<text  x="839.05" y="1311.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (199,368 samples, 0.52%)</title><rect x="868.5" y="1317" width="6.1" height="15.0" fill="rgb(226,178,26)" rx="2" ry="2" />
<text  x="871.52" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (2,187,879 samples, 5.70%)</title><rect x="282.8" y="1173" width="67.3" height="15.0" fill="rgb(218,14,39)" rx="2" ry="2" />
<text  x="285.81" y="1183.5" >boost::..</text>
</g>
<g >
<title>boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="1061" width="8.4" height="15.0" fill="rgb(220,107,40)" rx="2" ry="2" />
<text  x="446.93" y="1071.5" ></text>
</g>
<g >
<title>do_futex (2,047,575 samples, 5.33%)</title><rect x="97.6" y="1973" width="62.9" height="15.0" fill="rgb(221,102,54)" rx="2" ry="2" />
<text  x="100.60" y="1983.5" >do_futex</text>
</g>
<g >
<title>sched_clock (459,947 samples, 1.20%)</title><rect x="1132.1" y="1861" width="14.2" height="15.0" fill="rgb(250,179,45)" rx="2" ry="2" />
<text  x="1135.14" y="1871.5" ></text>
</g>
<g >
<title>wake_up_q (1,624,103 samples, 4.23%)</title><rect x="1096.4" y="1957" width="49.9" height="15.0" fill="rgb(252,167,23)" rx="2" ry="2" />
<text  x="1099.35" y="1967.5" >wake_..</text>
</g>
<g >
<title>boost::beast::async_base&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (252,217 samples, 0.66%)</title><rect x="270.2" y="1749" width="7.8" height="15.0" fill="rgb(236,73,31)" rx="2" ry="2" />
<text  x="273.25" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (7,407,442 samples, 19.30%)</title><rect x="190.2" y="1813" width="227.7" height="15.0" fill="rgb(250,166,25)" rx="2" ry="2" />
<text  x="193.21" y="1823.5" >boost::asio::detail::scheduler..</text>
</g>
<g >
<title>boost::asio::detail::buffer_size&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::const_iterator&gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1237" width="5.4" height="15.0" fill="rgb(240,145,23)" rx="2" ry="2" />
<text  x="724.29" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="997" width="12.3" height="15.0" fill="rgb(240,213,25)" rx="2" ry="2" />
<text  x="210.71" y="1007.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::next&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="917" width="11.2" height="15.0" fill="rgb(232,211,43)" rx="2" ry="2" />
<text  x="1175.49" y="927.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::executor_function&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (169,764 samples, 0.44%)</title><rect x="501.4" y="1749" width="5.2" height="15.0" fill="rgb(239,153,38)" rx="2" ry="2" />
<text  x="504.36" y="1759.5" ></text>
</g>
<g >
<title>boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;::execute&lt;boost::asio::detail::executor_function&gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1829" width="22.5" height="15.0" fill="rgb(220,26,42)" rx="2" ry="2" />
<text  x="891.14" y="1839.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::executor_op&lt;boost::asio::detail::executor_function, std::allocator&lt;void&gt;, boost::asio::detail::scheduler_operation&gt;::do_complete (377,915 samples, 0.98%)</title><rect x="1013.3" y="1909" width="11.6" height="15.0" fill="rgb(244,132,26)" rx="2" ry="2" />
<text  x="1016.30" y="1919.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::next&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (271,965 samples, 0.71%)</title><rect x="443.9" y="821" width="8.4" height="15.0" fill="rgb(229,194,15)" rx="2" ry="2" />
<text  x="446.93" y="831.5" ></text>
</g>
<g >
<title>boost::beast::detail::execution_work_guard&lt;boost::asio::any_io_executor&gt;::execution_work_guard (165,800 samples, 0.43%)</title><rect x="912.9" y="1141" width="5.1" height="15.0" fill="rgb(240,61,45)" rx="2" ry="2" />
<text  x="915.93" y="1151.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::async_read_some&lt;boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="293" width="6.9" height="15.0" fill="rgb(232,103,47)" rx="2" ry="2" />
<text  x="1027.92" y="303.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="437" width="6.9" height="15.0" fill="rgb(218,49,10)" rx="2" ry="2" />
<text  x="1027.92" y="447.5" ></text>
</g>
<g >
<title>__libc_csu_init (199,526 samples, 0.52%)</title><rect x="803.2" y="2053" width="6.1" height="15.0" fill="rgb(220,29,3)" rx="2" ry="2" />
<text  x="806.16" y="2063.5" ></text>
</g>
<g >
<title>scsi_finish_command (244,735 samples, 0.64%)</title><rect x="828.5" y="1077" width="7.6" height="15.0" fill="rgb(247,198,23)" rx="2" ry="2" />
<text  x="831.53" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt;::assign (199,055 samples, 0.52%)</title><rect x="843.0" y="1877" width="6.1" height="15.0" fill="rgb(229,214,53)" rx="2" ry="2" />
<text  x="845.97" y="1887.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (731,150 samples, 1.90%)</title><rect x="888.1" y="1541" width="22.5" height="15.0" fill="rgb(240,95,26)" rx="2" ry="2" />
<text  x="891.14" y="1551.5" >b..</text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (671,231 samples, 1.75%)</title><rect x="437.8" y="1605" width="20.6" height="15.0" fill="rgb(226,98,8)" rx="2" ry="2" />
<text  x="440.79" y="1615.5" ></text>
</g>
<g >
<title>_dl_map_object (209,856 samples, 0.55%)</title><rect x="48.5" y="2005" width="6.4" height="15.0" fill="rgb(226,115,1)" rx="2" ry="2" />
<text  x="51.48" y="2015.5" ></text>
</g>
<g >
<title>boost::json::object::at (198,555 samples, 0.52%)</title><rect x="821.5" y="1877" width="6.1" height="15.0" fill="rgb(237,0,29)" rx="2" ry="2" />
<text  x="824.50" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (9,135 samples, 0.02%)</title><rect x="168.4" y="1605" width="0.3" height="15.0" fill="rgb(223,145,11)" rx="2" ry="2" />
<text  x="171.39" y="1615.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (469,881 samples, 1.22%)</title><rect x="828.5" y="1813" width="14.5" height="15.0" fill="rgb(220,100,51)" rx="2" ry="2" />
<text  x="831.53" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1877" width="11.9" height="15.0" fill="rgb(248,126,48)" rx="2" ry="2" />
<text  x="915.93" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;::operator (5,325,589 samples, 13.87%)</title><rect x="540.2" y="1237" width="163.7" height="15.0" fill="rgb(215,78,5)" rx="2" ry="2" />
<text  x="543.19" y="1247.5" >boost::beast::http::d..</text>
</g>
<g >
<title>tcp_sendmsg_locked (364,717 samples, 0.95%)</title><rect x="1172.5" y="437" width="11.2" height="15.0" fill="rgb(248,197,36)" rx="2" ry="2" />
<text  x="1175.49" y="447.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="2053" width="11.6" height="15.0" fill="rgb(228,40,39)" rx="2" ry="2" />
<text  x="1016.30" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1605" width="11.9" height="15.0" fill="rgb(232,121,19)" rx="2" ry="2" />
<text  x="915.93" y="1615.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (564,935 samples, 1.47%)</title><rect x="995.9" y="277" width="17.4" height="15.0" fill="rgb(247,27,30)" rx="2" ry="2" />
<text  x="998.94" y="287.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::count (199,368 samples, 0.52%)</title><rect x="868.5" y="1221" width="6.1" height="15.0" fill="rgb(241,98,44)" rx="2" ry="2" />
<text  x="871.52" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::beast::buffers_prefix_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt; &gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="533" width="12.0" height="15.0" fill="rgb(212,213,5)" rx="2" ry="2" />
<text  x="1163.49" y="543.5" ></text>
</g>
<g >
<title>boost::beast::detail::variant&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt;::const_iterator, boost::asio::const_buffer const*, boost::beast::detail::buffers_cat_view_iterator_base::past_end&gt;::~variant (220,784 samples, 0.58%)</title><rect x="918.0" y="1301" width="6.8" height="15.0" fill="rgb(252,168,0)" rx="2" ry="2" />
<text  x="921.02" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (390,290 samples, 1.02%)</title><rect x="1160.5" y="1813" width="12.0" height="15.0" fill="rgb(241,32,19)" rx="2" ry="2" />
<text  x="1163.49" y="1823.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="197" width="6.9" height="15.0" fill="rgb(236,209,32)" rx="2" ry="2" />
<text  x="1027.92" y="207.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1541" width="13.7" height="15.0" fill="rgb(242,215,48)" rx="2" ry="2" />
<text  x="427.11" y="1551.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="805" width="6.9" height="15.0" fill="rgb(249,28,19)" rx="2" ry="2" />
<text  x="839.05" y="815.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1797" width="11.6" height="15.0" fill="rgb(219,43,25)" rx="2" ry="2" />
<text  x="1016.30" y="1807.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,270,920 samples, 11.13%)</title><rect x="278.0" y="1733" width="131.3" height="15.0" fill="rgb(229,12,28)" rx="2" ry="2" />
<text  x="281.00" y="1743.5" >boost::asio::exe..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1509" width="44.3" height="15.0" fill="rgb(230,167,28)" rx="2" ry="2" />
<text  x="203.41" y="1519.5" >boos..</text>
</g>
<g >
<title>do_syscall_64 (564,935 samples, 1.47%)</title><rect x="995.9" y="501" width="17.4" height="15.0" fill="rgb(209,111,36)" rx="2" ry="2" />
<text  x="998.94" y="511.5" ></text>
</g>
<g >
<title>hrtimer_init (198,769 samples, 0.52%)</title><rect x="809.3" y="1765" width="6.1" height="15.0" fill="rgb(210,69,45)" rx="2" ry="2" />
<text  x="812.29" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1813" width="6.3" height="15.0" fill="rgb(223,8,14)" rx="2" ry="2" />
<text  x="472.66" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (198,769 samples, 0.52%)</title><rect x="809.3" y="1813" width="6.1" height="15.0" fill="rgb(217,213,47)" rx="2" ry="2" />
<text  x="812.29" y="1823.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt; &gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="1189" width="6.9" height="15.0" fill="rgb(254,47,4)" rx="2" ry="2" />
<text  x="1027.92" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::do_execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function, std::allocator&lt;void&gt; &gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1653" width="50.4" height="15.0" fill="rgb(252,173,0)" rx="2" ry="2" />
<text  x="197.29" y="1663.5" >boost..</text>
</g>
<g >
<title>tcp_v4_rcv (364,717 samples, 0.95%)</title><rect x="1172.5" y="37" width="11.2" height="15.0" fill="rgb(227,90,16)" rx="2" ry="2" />
<text  x="1175.49" y="47.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (445,208 samples, 1.16%)</title><rect x="424.1" y="565" width="13.7" height="15.0" fill="rgb(249,160,33)" rx="2" ry="2" />
<text  x="427.11" y="575.5" ></text>
</g>
<g >
<title>inet_sendmsg (377,915 samples, 0.98%)</title><rect x="1013.3" y="549" width="11.6" height="15.0" fill="rgb(251,157,50)" rx="2" ry="2" />
<text  x="1016.30" y="559.5" ></text>
</g>
<g >
<title>page_fault (199,656 samples, 0.52%)</title><rect x="67.2" y="1989" width="6.1" height="15.0" fill="rgb(226,62,24)" rx="2" ry="2" />
<text  x="70.21" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1637" width="11.6" height="15.0" fill="rgb(227,1,46)" rx="2" ry="2" />
<text  x="1016.30" y="1647.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (1,318,326 samples, 3.43%)</title><rect x="417.9" y="1749" width="40.5" height="15.0" fill="rgb(248,187,16)" rx="2" ry="2" />
<text  x="420.90" y="1759.5" >boo..</text>
</g>
<g >
<title>boost::beast::http::detail::run_read_msg_op::operator (445,208 samples, 1.16%)</title><rect x="424.1" y="1285" width="13.7" height="15.0" fill="rgb(222,84,4)" rx="2" ry="2" />
<text  x="427.11" y="1295.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_read_op::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="245" width="6.9" height="15.0" fill="rgb(238,179,6)" rx="2" ry="2" />
<text  x="1027.92" y="255.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="837" width="12.3" height="15.0" fill="rgb(236,6,18)" rx="2" ry="2" />
<text  x="210.71" y="847.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (398,295 samples, 1.04%)</title><rect x="207.7" y="677" width="12.3" height="15.0" fill="rgb(209,161,46)" rx="2" ry="2" />
<text  x="210.71" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (30,285 samples, 0.08%)</title><rect x="90.7" y="1973" width="0.9" height="15.0" fill="rgb(206,32,27)" rx="2" ry="2" />
<text  x="93.69" y="1983.5" ></text>
</g>
<g >
<title>dequeue_task_fair (666,690 samples, 1.74%)</title><rect x="104.4" y="1877" width="20.5" height="15.0" fill="rgb(231,68,14)" rx="2" ry="2" />
<text  x="107.38" y="1887.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::run_read_op::operator (2,187,879 samples, 5.70%)</title><rect x="282.8" y="1141" width="67.3" height="15.0" fill="rgb(221,56,52)" rx="2" ry="2" />
<text  x="285.81" y="1151.5" >boost::..</text>
</g>
<g >
<title>boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;::operator (224,219 samples, 0.58%)</title><rect x="1024.9" y="421" width="6.9" height="15.0" fill="rgb(217,164,17)" rx="2" ry="2" />
<text  x="1027.92" y="431.5" ></text>
</g>
<g >
<title>boost::asio::detail::hook_allocator&lt;boost::beast::detail::bind_front_wrapper&lt;void  (632,043 samples, 1.65%)</title><rect x="849.1" y="1877" width="19.4" height="15.0" fill="rgb(251,81,8)" rx="2" ry="2" />
<text  x="852.09" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (377,915 samples, 0.98%)</title><rect x="1013.3" y="101" width="11.6" height="15.0" fill="rgb(251,95,28)" rx="2" ry="2" />
<text  x="1016.30" y="111.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (445,208 samples, 1.16%)</title><rect x="424.1" y="1509" width="13.7" height="15.0" fill="rgb(245,97,30)" rx="2" ry="2" />
<text  x="427.11" y="1519.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::executor_function, boost::asio::detail::executor_function&gt; (224,219 samples, 0.58%)</title><rect x="1024.9" y="853" width="6.9" height="15.0" fill="rgb(209,0,47)" rx="2" ry="2" />
<text  x="1027.92" y="863.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::run_write_op::operator (390,290 samples, 1.02%)</title><rect x="1160.5" y="917" width="12.0" height="15.0" fill="rgb(252,229,41)" rx="2" ry="2" />
<text  x="1163.49" y="927.5" ></text>
</g>
<g >
<title>__lll_lock_wait (9,135 samples, 0.02%)</title><rect x="168.4" y="1813" width="0.3" height="15.0" fill="rgb(224,160,43)" rx="2" ry="2" />
<text  x="171.39" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (160,702 samples, 0.42%)</title><rect x="963.0" y="2021" width="4.9" height="15.0" fill="rgb(249,193,6)" rx="2" ry="2" />
<text  x="965.98" y="2031.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (390,290 samples, 1.02%)</title><rect x="1160.5" y="1221" width="12.0" height="15.0" fill="rgb(210,11,39)" rx="2" ry="2" />
<text  x="1163.49" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::prefer_fn_impl&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt; &gt; (83,662 samples, 0.22%)</title><rect x="924.8" y="1829" width="2.6" height="15.0" fill="rgb(205,125,53)" rx="2" ry="2" />
<text  x="927.81" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (4,114,536 samples, 10.72%)</title><rect x="282.8" y="1349" width="126.5" height="15.0" fill="rgb(239,78,54)" rx="2" ry="2" />
<text  x="285.81" y="1359.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (19,796,140 samples, 51.57%)</title><rect x="170.4" y="1845" width="608.5" height="15.0" fill="rgb(224,142,43)" rx="2" ry="2" />
<text  x="173.43" y="1855.5" >boost::asio::detail::scheduler_operation::complete</text>
</g>
<g >
<title>boost::intrusive::bstbase2&lt;boost::intrusive::bhtraits&lt;boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::element, boost::intrusive::rbtree_node_traits&lt;void*, false&gt;,  (1,266,143 samples, 3.30%)</title><rect x="638.3" y="1109" width="38.9" height="15.0" fill="rgb(212,87,30)" rx="2" ry="2" />
<text  x="641.33" y="1119.5" >boo..</text>
</g>
<g >
<title>boost::beast::http::async_read&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (165,800 samples, 0.43%)</title><rect x="912.9" y="1269" width="5.1" height="15.0" fill="rgb(211,14,26)" rx="2" ry="2" />
<text  x="915.93" y="1279.5" ></text>
</g>
<g >
<title>boost_asio_prefer_fn::impl::operator (75,343 samples, 0.20%)</title><rect x="910.6" y="1749" width="2.3" height="15.0" fill="rgb(223,7,29)" rx="2" ry="2" />
<text  x="913.61" y="1759.5" ></text>
</g>
<g >
<title>__x64_sys_timerfd_settime (558,783 samples, 1.46%)</title><rect x="303.9" y="949" width="17.1" height="15.0" fill="rgb(211,123,33)" rx="2" ry="2" />
<text  x="306.86" y="959.5" ></text>
</g>
<g >
<title>setup_new_exec (5,883 samples, 0.02%)</title><rect x="1189.8" y="1941" width="0.2" height="15.0" fill="rgb(209,91,15)" rx="2" ry="2" />
<text  x="1192.82" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::execute&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, boost::asio::detail::executor_function&gt; (386,584 samples, 1.01%)</title><rect x="912.9" y="1813" width="11.9" height="15.0" fill="rgb(206,104,13)" rx="2" ry="2" />
<text  x="915.93" y="1823.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1733" width="200.8" height="15.0" fill="rgb(234,211,1)" rx="2" ry="2" />
<text  x="509.58" y="1743.5" >boost_asio_execution_execu..</text>
</g>
<g >
<title>__mprotect (160,702 samples, 0.42%)</title><rect x="963.0" y="2053" width="4.9" height="15.0" fill="rgb(231,31,18)" rx="2" ry="2" />
<text  x="965.98" y="2063.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (1,915,375 samples, 4.99%)</title><rect x="540.2" y="789" width="58.9" height="15.0" fill="rgb(205,24,43)" rx="2" ry="2" />
<text  x="543.19" y="799.5" >boost:..</text>
</g>
<g >
<title>std::__invoke&lt;main::{lambda (390,290 samples, 1.02%)</title><rect x="1160.5" y="2053" width="12.0" height="15.0" fill="rgb(250,88,0)" rx="2" ry="2" />
<text  x="1163.49" y="2063.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (2,701,516 samples, 7.04%)</title><rect x="540.2" y="1173" width="83.0" height="15.0" fill="rgb(228,189,23)" rx="2" ry="2" />
<text  x="543.19" y="1183.5" >boost::as..</text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1589" width="50.4" height="15.0" fill="rgb(253,79,19)" rx="2" ry="2" />
<text  x="197.29" y="1599.5" >boost..</text>
</g>
<g >
<title>http_server::SessionBase::Read (225,146 samples, 0.59%)</title><rect x="836.1" y="565" width="6.9" height="15.0" fill="rgb(213,143,11)" rx="2" ry="2" />
<text  x="839.05" y="575.5" ></text>
</g>
<g >
<title>boost::beast::http::serializer&lt;false, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt;::next&lt;boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="997" width="11.6" height="15.0" fill="rgb(236,146,18)" rx="2" ry="2" />
<text  x="1016.30" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="277" width="6.9" height="15.0" fill="rgb(216,173,32)" rx="2" ry="2" />
<text  x="1027.92" y="287.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::beast::buffers_prefix_view&lt;boost::asio::mutable_buffer&gt;, boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (398,423 samples, 1.04%)</title><rect x="868.5" y="1909" width="12.3" height="15.0" fill="rgb(206,35,4)" rx="2" ry="2" />
<text  x="871.52" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (519,161 samples, 1.35%)</title><rect x="248.2" y="1685" width="15.9" height="15.0" fill="rgb(253,168,0)" rx="2" ry="2" />
<text  x="251.17" y="1695.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (271,965 samples, 0.71%)</title><rect x="443.9" y="1269" width="8.4" height="15.0" fill="rgb(207,100,3)" rx="2" ry="2" />
<text  x="446.93" y="1279.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;model::Office, model::Office  (198,555 samples, 0.52%)</title><rect x="821.5" y="1925" width="6.1" height="15.0" fill="rgb(217,77,46)" rx="2" ry="2" />
<text  x="824.50" y="1935.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (2,238,312 samples, 5.83%)</title><rect x="540.2" y="1093" width="68.8" height="15.0" fill="rgb(205,26,10)" rx="2" ry="2" />
<text  x="543.19" y="1103.5" >std::_M..</text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;, boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1845" width="17.4" height="15.0" fill="rgb(238,10,16)" rx="2" ry="2" />
<text  x="998.94" y="1855.5" ></text>
</g>
<g >
<title>http_server::Session&lt;main::{lambda (377,915 samples, 0.98%)</title><rect x="1013.3" y="1333" width="11.6" height="15.0" fill="rgb(210,157,22)" rx="2" ry="2" />
<text  x="1016.30" y="1343.5" ></text>
</g>
<g >
<title>boost::beast::asio_handler_invoke&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1397" width="5.4" height="15.0" fill="rgb(244,31,36)" rx="2" ry="2" />
<text  x="724.29" y="1407.5" ></text>
</g>
<g >
<title>boost::asio::async_compose&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="1237" width="13.7" height="15.0" fill="rgb(242,165,4)" rx="2" ry="2" />
<text  x="427.11" y="1247.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (175,630 samples, 0.46%)</title><rect x="721.3" y="1333" width="5.4" height="15.0" fill="rgb(212,89,24)" rx="2" ry="2" />
<text  x="724.29" y="1343.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (398,295 samples, 1.04%)</title><rect x="207.7" y="853" width="12.3" height="15.0" fill="rgb(242,30,24)" rx="2" ry="2" />
<text  x="210.71" y="863.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (175,630 samples, 0.46%)</title><rect x="721.3" y="1605" width="5.4" height="15.0" fill="rgb(238,154,44)" rx="2" ry="2" />
<text  x="724.29" y="1615.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (377,915 samples, 0.98%)</title><rect x="1013.3" y="1077" width="11.6" height="15.0" fill="rgb(254,103,40)" rx="2" ry="2" />
<text  x="1016.30" y="1087.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1445" width="11.6" height="15.0" fill="rgb(226,223,18)" rx="2" ry="2" />
<text  x="1016.30" y="1455.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (109,135 samples, 0.28%)</title><rect x="726.7" y="1781" width="3.3" height="15.0" fill="rgb(234,73,30)" rx="2" ry="2" />
<text  x="729.69" y="1791.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; &gt; &gt; (225,146 samples, 0.59%)</title><rect x="836.1" y="1237" width="6.9" height="15.0" fill="rgb(223,57,51)" rx="2" ry="2" />
<text  x="839.05" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::get_last_error (224,219 samples, 0.58%)</title><rect x="1024.9" y="69" width="6.9" height="15.0" fill="rgb(248,12,54)" rx="2" ry="2" />
<text  x="1027.92" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (234,592 samples, 0.61%)</title><rect x="981.2" y="1989" width="7.2" height="15.0" fill="rgb(254,135,48)" rx="2" ry="2" />
<text  x="984.18" y="1999.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0ul&gt; const, void&gt;::operator (225,146 samples, 0.59%)</title><rect x="836.1" y="1093" width="6.9" height="15.0" fill="rgb(254,42,48)" rx="2" ry="2" />
<text  x="839.05" y="1103.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5,883 samples, 0.02%)</title><rect x="1189.8" y="1877" width="0.2" height="15.0" fill="rgb(242,41,43)" rx="2" ry="2" />
<text  x="1192.82" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_disable (21,389 samples, 0.06%)</title><rect x="103.7" y="1829" width="0.7" height="15.0" fill="rgb(210,178,36)" rx="2" ry="2" />
<text  x="106.73" y="1839.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1573" width="11.2" height="15.0" fill="rgb(225,3,3)" rx="2" ry="2" />
<text  x="1175.49" y="1583.5" ></text>
</g>
<g >
<title>do_mmap (606,765 samples, 1.58%)</title><rect x="1056.4" y="1957" width="18.6" height="15.0" fill="rgb(227,55,32)" rx="2" ry="2" />
<text  x="1059.37" y="1967.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (271,965 samples, 0.71%)</title><rect x="443.9" y="1301" width="8.4" height="15.0" fill="rgb(240,206,52)" rx="2" ry="2" />
<text  x="446.93" y="1311.5" ></text>
</g>
<g >
<title>inet_sendmsg (390,290 samples, 1.02%)</title><rect x="1160.5" y="309" width="12.0" height="15.0" fill="rgb(239,32,24)" rx="2" ry="2" />
<text  x="1163.49" y="319.5" ></text>
</g>
<g >
<title>boost::asio::detail::executor_function::complete&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1765" width="11.2" height="15.0" fill="rgb(228,198,33)" rx="2" ry="2" />
<text  x="1175.49" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt;::operator (239,731 samples, 0.62%)</title><rect x="880.8" y="1893" width="7.3" height="15.0" fill="rgb(250,36,51)" rx="2" ry="2" />
<text  x="883.77" y="1903.5" ></text>
</g>
<g >
<title>boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (674,489 samples, 1.76%)</title><rect x="578.3" y="517" width="20.8" height="15.0" fill="rgb(224,185,26)" rx="2" ry="2" />
<text  x="581.34" y="527.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::any_io_executor&gt;::expires_at (538,866 samples, 1.40%)</title><rect x="220.0" y="1013" width="16.5" height="15.0" fill="rgb(253,4,2)" rx="2" ry="2" />
<text  x="222.95" y="1023.5" ></text>
</g>
<g >
<title>boost::beast::http::basic_parser&lt;true&gt;::do_field (645,076 samples, 1.68%)</title><rect x="350.1" y="1141" width="19.8" height="15.0" fill="rgb(237,95,48)" rx="2" ry="2" />
<text  x="353.06" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1765" width="22.5" height="15.0" fill="rgb(246,192,2)" rx="2" ry="2" />
<text  x="891.14" y="1775.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::associated_executor_impl&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (445,208 samples, 1.16%)</title><rect x="424.1" y="741" width="13.7" height="15.0" fill="rgb(239,157,19)" rx="2" ry="2" />
<text  x="427.11" y="751.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void&gt;::dispatch&lt;boost::asio::detail::move_binder2&lt;boost::beast::detail::bind_front_wrapper&lt;void  (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1765" width="50.4" height="15.0" fill="rgb(222,198,42)" rx="2" ry="2" />
<text  x="197.29" y="1775.5" >boost..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (731,150 samples, 1.90%)</title><rect x="888.1" y="1861" width="22.5" height="15.0" fill="rgb(219,2,29)" rx="2" ry="2" />
<text  x="891.14" y="1871.5" >b..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::execute_ex&lt;boost::asio::strand&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; &gt; &gt; (6,534,641 samples, 17.02%)</title><rect x="506.6" y="1749" width="200.8" height="15.0" fill="rgb(225,67,2)" rx="2" ry="2" />
<text  x="509.58" y="1759.5" >boost::asio::execution::de..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (364,717 samples, 0.95%)</title><rect x="1172.5" y="677" width="11.2" height="15.0" fill="rgb(248,195,42)" rx="2" ry="2" />
<text  x="1175.49" y="687.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9,135 samples, 0.02%)</title><rect x="168.4" y="1717" width="0.3" height="15.0" fill="rgb(250,138,27)" rx="2" ry="2" />
<text  x="171.39" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1429" width="11.6" height="15.0" fill="rgb(240,48,1)" rx="2" ry="2" />
<text  x="1016.30" y="1439.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (564,935 samples, 1.47%)</title><rect x="995.9" y="1941" width="17.4" height="15.0" fill="rgb(211,164,42)" rx="2" ry="2" />
<text  x="998.94" y="1951.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (245,495 samples, 0.64%)</title><rect x="623.2" y="1189" width="7.6" height="15.0" fill="rgb(205,136,45)" rx="2" ry="2" />
<text  x="626.24" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::detail::strand_executor_service::run_ready_handlers (224,219 samples, 0.58%)</title><rect x="1024.9" y="1125" width="6.9" height="15.0" fill="rgb(243,207,4)" rx="2" ry="2" />
<text  x="1027.92" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;true, boost::asio::mutable_buffer, boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (377,915 samples, 0.98%)</title><rect x="1013.3" y="1669" width="11.6" height="15.0" fill="rgb(221,178,1)" rx="2" ry="2" />
<text  x="1016.30" y="1679.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::run (4,006,109 samples, 10.44%)</title><rect x="827.6" y="1989" width="123.1" height="15.0" fill="rgb(243,19,44)" rx="2" ry="2" />
<text  x="830.60" y="1999.5" >boost::asio::de..</text>
</g>
<g >
<title>boost::beast::detail::allocate_stable_state&lt;boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (204,803 samples, 0.53%)</title><rect x="609.0" y="1109" width="6.3" height="15.0" fill="rgb(208,229,12)" rx="2" ry="2" />
<text  x="612.00" y="1119.5" ></text>
</g>
<g >
<title>http_server::Listener&lt;main::{lambda (1,441,601 samples, 3.76%)</title><rect x="200.4" y="1253" width="44.3" height="15.0" fill="rgb(223,139,24)" rx="2" ry="2" />
<text  x="203.41" y="1263.5" >http..</text>
</g>
<g >
<title>ksys_mmap_pgoff (606,765 samples, 1.58%)</title><rect x="1056.4" y="1989" width="18.6" height="15.0" fill="rgb(216,80,34)" rx="2" ry="2" />
<text  x="1059.37" y="1999.5" ></text>
</g>
<g >
<title>boost::beast::detail::bind_front_wrapper&lt;void  (469,881 samples, 1.22%)</title><rect x="828.5" y="1445" width="14.5" height="15.0" fill="rgb(225,151,24)" rx="2" ry="2" />
<text  x="831.53" y="1455.5" ></text>
</g>
<g >
<title>json_loader::ParseOffice (198,555 samples, 0.52%)</title><rect x="821.5" y="1893" width="6.1" height="15.0" fill="rgb(235,194,30)" rx="2" ry="2" />
<text  x="824.50" y="1903.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1109" width="11.2" height="15.0" fill="rgb(225,33,1)" rx="2" ry="2" />
<text  x="1175.49" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (364,717 samples, 0.95%)</title><rect x="1172.5" y="1093" width="11.2" height="15.0" fill="rgb(210,139,9)" rx="2" ry="2" />
<text  x="1175.49" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_some_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true&gt;, boost::asio::detail::composed_work&lt;void  (204,803 samples, 0.53%)</title><rect x="469.7" y="1765" width="6.3" height="15.0" fill="rgb(239,98,51)" rx="2" ry="2" />
<text  x="472.66" y="1775.5" ></text>
</g>
<g >
<title>boost::asio::detail::composed_op&lt;boost::beast::http::detail::read_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::detail::parser_is_done&gt;, boost::asio::detail::composed_work&lt;void  (364,717 samples, 0.95%)</title><rect x="1172.5" y="1477" width="11.2" height="15.0" fill="rgb(206,74,1)" rx="2" ry="2" />
<text  x="1175.49" y="1487.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (364,717 samples, 0.95%)</title><rect x="1172.5" y="229" width="11.2" height="15.0" fill="rgb(248,27,46)" rx="2" ry="2" />
<text  x="1175.49" y="239.5" ></text>
</g>
<g >
<title>boost::asio::any_io_executor::any_io_executor (871,147 samples, 2.27%)</title><rect x="732.2" y="1781" width="26.8" height="15.0" fill="rgb(210,206,38)" rx="2" ry="2" />
<text  x="735.19" y="1791.5" >b..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler_async_result&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;::ops::transfer_op&lt;false, boost::beast::detail::buffers_ref&lt;boost::beast::buffers_prefix_view&lt;boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt; const&amp;&gt; &gt;, boost::beast::http::detail::write_some_op&lt;boost::beast::http::detail::write_op&lt;boost::beast::http::detail::write_msg_op&lt;http_server::SessionBase::Write&lt;boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt; &gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="661" width="17.4" height="15.0" fill="rgb(223,142,8)" rx="2" ry="2" />
<text  x="998.94" y="671.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::executor_function&gt; (564,935 samples, 1.47%)</title><rect x="995.9" y="1733" width="17.4" height="15.0" fill="rgb(209,218,29)" rx="2" ry="2" />
<text  x="998.94" y="1743.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_dispatch_with_executor&lt;boost::asio::any_io_executor&gt;::operator (398,295 samples, 1.04%)</title><rect x="207.7" y="1173" width="12.3" height="15.0" fill="rgb(221,30,25)" rx="2" ry="2" />
<text  x="210.71" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::work_dispatcher&lt;boost::beast::detail::bind_front_wrapper&lt;void  (224,219 samples, 0.58%)</title><rect x="1024.9" y="997" width="6.9" height="15.0" fill="rgb(248,91,21)" rx="2" ry="2" />
<text  x="1027.92" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt;::execute&lt;boost::asio::detail::strand_executor_service::invoker&lt;boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 4ul&gt; const, void&gt; &gt; (1,640,841 samples, 4.27%)</title><rect x="194.3" y="1621" width="50.4" height="15.0" fill="rgb(230,112,37)" rx="2" ry="2" />
<text  x="197.29" y="1631.5" >boost..</text>
</g>
<g >
<title>boost::beast::http::detail::run_write_op::operator (364,717 samples, 0.95%)</title><rect x="1172.5" y="1077" width="11.2" height="15.0" fill="rgb(211,91,37)" rx="2" ry="2" />
<text  x="1175.49" y="1087.5" ></text>
</g>
<g >
<title>boost::beast::buffers_suffix&lt;boost::beast::buffers_cat_view&lt;boost::beast::detail::buffers_ref&lt;boost::beast::buffers_cat_view&lt;boost::asio::const_buffer, boost::asio::const_buffer, boost::asio::const_buffer, boost::beast::http::basic_fields&lt;std::allocator&lt;char&gt; &gt;::writer::field_range, boost::beast::http::chunk_crlf&gt; &gt;, boost::asio::const_buffer&gt; &gt;::begin (220,784 samples, 0.58%)</title><rect x="918.0" y="1333" width="6.8" height="15.0" fill="rgb(213,93,31)" rx="2" ry="2" />
<text  x="921.02" y="1343.5" ></text>
</g>
<g >
<title>boost::beast::http::detail::read_msg_op&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy&gt;, boost::beast::basic_flat_buffer&lt;std::allocator&lt;char&gt; &gt;, true, boost::beast::http::basic_string_body&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt;, boost::beast::detail::bind_front_wrapper&lt;void  (564,935 samples, 1.47%)</title><rect x="995.9" y="1365" width="17.4" height="15.0" fill="rgb(236,28,7)" rx="2" ry="2" />
<text  x="998.94" y="1375.5" ></text>
</g>
<g >
<title>boost_asio_execution_execute_fn::impl::operator (398,423 samples, 1.04%)</title><rect x="868.5" y="1813" width="12.3" height="15.0" fill="rgb(217,55,51)" rx="2" ry="2" />
<text  x="871.52" y="1823.5" ></text>
</g>
</g>
</svg>
